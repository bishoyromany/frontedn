[{"C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\index.js":"1","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\serviceWorkerRegistration.js":"2","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\App.js":"3","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\reportWebVitals.js":"4","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Redux\\store.js":"5","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Utils\\History.js":"6","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Utils\\Routing.js":"7","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Home\\Home.js":"8","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Auth\\MobileAuth.js":"9","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\Landingpage.js":"10","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\AddEvent\\AddEventSucess.js":"11","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\AddEvent\\AddEvent.js":"12","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Chat\\ChatPage.js":"13","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Invitations\\Info\\Invitationlist.js":"14","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Invitations\\RSVP\\Rsvp.js":"15","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Redux\\Reducers\\ReducerCombiner.js":"16","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Invitations\\Invitation.js":"17","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Auth\\LoginSignup.js":"18","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\BlockTitle.js":"19","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\AccordionItem.js":"20","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\Contact.js":"21","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\Banner.js":"22","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\Clients.js":"23","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\CTAOne.js":"24","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\CTAThree.js":"25","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\CTATwo.js":"26","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\Header.js":"27","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\FAQ.js":"28","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\Footer.js":"29","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\PageHeader.js":"30","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\PostPagination.js":"31","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\Layout.js":"32","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\MobileMenu.js":"33","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\NavLinks.js":"34","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\Pricing.js":"35","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\Services.js":"36","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\Testimonials.js":"37","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Redux\\DispatchFuncitons\\Eventfunctions.js":"38","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Redux\\DispatchFuncitons\\AuthFunctions.js":"39","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\VideoOne.js":"40","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Redux\\Reducers\\AuthReducer.js":"41","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Redux\\Reducers\\EventReducer.js":"42","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Events\\Eventlist.js":"43","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\AddEvent\\AddParticipants\\AddParticipants.js":"44","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\AddEvent\\CreateEvent\\CreateEvent.js":"45","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Plan\\Plan.js":"46","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\AddEvent\\Stepper\\Stepper.js":"47","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Helpers\\Popups\\Popup.js":"48","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Helpers\\FootMenu\\FootMenu.js":"49","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Helpers\\Header\\Header.js":"50","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Helpers\\BackNavbar\\BackNavBar.js":"51","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Helpers\\EventInvitoggler\\Toggler.js":"52","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Helpers\\UserData\\UserData.js":"53","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Chat\\Chatbox.js":"54","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Chat\\ChatList.js":"55","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Utils\\Config.js":"56","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Utils\\Login.js":"57","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Helpers\\timer\\timer.js":"58","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Redux\\Actions\\AuthActions.js":"59","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Redux\\Actions\\EventActions.js":"60","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Utils\\Headings.js":"61","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\UserPorfile\\UserProfile.js":"62","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\AddEvent\\CreateEvent\\ImageSelectionModal.js":"63","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\AddEvent\\CreateEvent\\EventDetails.js":"64","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\AddEvent\\AddDetails\\AddDetails.js":"65","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\AddEvent\\Extras\\Schedule.js":"66","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\AddEvent\\Extras\\Album.js":"67","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\AddEvent\\Extras\\Story.js":"68","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Utils\\FileUpload_Download.js":"69","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Helpers\\Maps\\Maps.js":"70","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\AddEvent\\CreateEvent\\EventNameBox.js":"71"},{"size":888,"mtime":1609959928000,"results":"72","hashOfConfig":"73"},{"size":5064,"mtime":499175100000,"results":"74","hashOfConfig":"73"},{"size":2342,"mtime":1616754540278,"results":"75","hashOfConfig":"73"},{"size":364,"mtime":499175100000,"results":"76","hashOfConfig":"73"},{"size":368,"mtime":1609961476000,"results":"77","hashOfConfig":"73"},{"size":87,"mtime":1609960866000,"results":"78","hashOfConfig":"73"},{"size":751,"mtime":1615423668000,"results":"79","hashOfConfig":"73"},{"size":1473,"mtime":1616236938000,"results":"80","hashOfConfig":"73"},{"size":586,"mtime":1615851396000,"results":"81","hashOfConfig":"73"},{"size":2615,"mtime":1616755376481,"results":"82","hashOfConfig":"73"},{"size":2606,"mtime":1616265834000,"results":"83","hashOfConfig":"73"},{"size":9643,"mtime":1616547346000,"results":"84","hashOfConfig":"73"},{"size":2893,"mtime":1615419358000,"results":"85","hashOfConfig":"73"},{"size":7769,"mtime":1616236638000,"results":"86","hashOfConfig":"73"},{"size":9118,"mtime":1616333106000,"results":"87","hashOfConfig":"73"},{"size":231,"mtime":1614386878000,"results":"88","hashOfConfig":"73"},{"size":2536,"mtime":1616333328000,"results":"89","hashOfConfig":"73"},{"size":3989,"mtime":1616279036000,"results":"90","hashOfConfig":"73"},{"size":254,"mtime":1593702834000,"results":"91","hashOfConfig":"73"},{"size":713,"mtime":1595098078000,"results":"92","hashOfConfig":"73"},{"size":2045,"mtime":1616563915162,"results":"93","hashOfConfig":"73"},{"size":2377,"mtime":1616575473404,"results":"94","hashOfConfig":"73"},{"size":2239,"mtime":1595099896000,"results":"95","hashOfConfig":"73"},{"size":2024,"mtime":1616566800120,"results":"96","hashOfConfig":"73"},{"size":1147,"mtime":1593706418000,"results":"97","hashOfConfig":"73"},{"size":2647,"mtime":1616576839253,"results":"98","hashOfConfig":"73"},{"size":2212,"mtime":1616754188020,"results":"99","hashOfConfig":"73"},{"size":2154,"mtime":1616577450358,"results":"100","hashOfConfig":"73"},{"size":3829,"mtime":1616567192129,"results":"101","hashOfConfig":"73"},{"size":522,"mtime":1593019250000,"results":"102","hashOfConfig":"73"},{"size":445,"mtime":1593019546000,"results":"103","hashOfConfig":"73"},{"size":1175,"mtime":1616754278375,"results":"104","hashOfConfig":"73"},{"size":1739,"mtime":1616567561576,"results":"105","hashOfConfig":"73"},{"size":1346,"mtime":1616754292472,"results":"106","hashOfConfig":"73"},{"size":5186,"mtime":1616567375167,"results":"107","hashOfConfig":"73"},{"size":2484,"mtime":1616566428665,"results":"108","hashOfConfig":"73"},{"size":5186,"mtime":1616755001765,"results":"109","hashOfConfig":"73"},{"size":1764,"mtime":1616257486000,"results":"110","hashOfConfig":"73"},{"size":4050,"mtime":1616409022000,"results":"111","hashOfConfig":"73"},{"size":1243,"mtime":1616575563405,"results":"112","hashOfConfig":"73"},{"size":2225,"mtime":1615372322000,"results":"113","hashOfConfig":"73"},{"size":2601,"mtime":1615129952000,"results":"114","hashOfConfig":"73"},{"size":3560,"mtime":1616286164000,"results":"115","hashOfConfig":"73"},{"size":11173,"mtime":1616539306000,"results":"116","hashOfConfig":"73"},{"size":5866,"mtime":1616442574000,"results":"117","hashOfConfig":"73"},{"size":4278,"mtime":1616549084000,"results":"118","hashOfConfig":"73"},{"size":1569,"mtime":1612031352000,"results":"119","hashOfConfig":"73"},{"size":948,"mtime":1616408142000,"results":"120","hashOfConfig":"73"},{"size":2679,"mtime":1616408106000,"results":"121","hashOfConfig":"73"},{"size":6166,"mtime":1616270622000,"results":"122","hashOfConfig":"73"},{"size":1050,"mtime":1616017384000,"results":"123","hashOfConfig":"73"},{"size":1182,"mtime":1616019756000,"results":"124","hashOfConfig":"73"},{"size":1518,"mtime":1615472802000,"results":"125","hashOfConfig":"73"},{"size":3166,"mtime":1615418958000,"results":"126","hashOfConfig":"73"},{"size":2052,"mtime":1615414894000,"results":"127","hashOfConfig":"73"},{"size":246,"mtime":1616543394000,"results":"128","hashOfConfig":"73"},{"size":316,"mtime":1612633904000,"results":"129","hashOfConfig":"73"},{"size":510,"mtime":1616279046000,"results":"130","hashOfConfig":"73"},{"size":271,"mtime":1615246682000,"results":"131","hashOfConfig":"73"},{"size":348,"mtime":1615076568000,"results":"132","hashOfConfig":"73"},{"size":600,"mtime":1614858712000,"results":"133","hashOfConfig":"73"},{"size":4001,"mtime":1616408686000,"results":"134","hashOfConfig":"73"},{"size":1622,"mtime":1614434322000,"results":"135","hashOfConfig":"73"},{"size":21470,"mtime":1616623114000,"results":"136","hashOfConfig":"73"},{"size":4558,"mtime":1616531246000,"results":"137","hashOfConfig":"73"},{"size":11693,"mtime":1616531008000,"results":"138","hashOfConfig":"73"},{"size":3371,"mtime":1616531150000,"results":"139","hashOfConfig":"73"},{"size":12879,"mtime":1616462598000,"results":"140","hashOfConfig":"73"},{"size":1011,"mtime":1614341394000,"results":"141","hashOfConfig":"73"},{"size":9125,"mtime":1616623026000,"results":"142","hashOfConfig":"73"},{"size":1249,"mtime":1616280642000,"results":"143","hashOfConfig":"73"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},"5krlin",{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"146"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"146"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"146"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"146"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"146"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"146"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"146"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"146"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"146"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"146"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"146"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"146"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"146"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"146"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"146"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"146"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"146"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"146"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"146"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"146"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"146"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"146"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"146"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"146"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"146"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"146"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"146"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"146"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"146"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"146"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"146"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"146"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"146"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"146"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"146"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"146"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"146"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"146"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"146"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"146"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"146"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"146"},"C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\index.js",[],["329","330"],"C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\App.js",[],"C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\reportWebVitals.js",[],"C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Redux\\store.js",[],"C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Utils\\History.js",[],"C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Utils\\Routing.js",[],"C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Home\\Home.js",["331","332"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Home.css\";\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport FootMenu from \"../Helpers/FootMenu/FootMenu\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Invitation from \"../Invitations/Invitation\";\r\nimport EventList from \"../Events/Eventlist\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  GetEvents,\r\n  GetInvitations,\r\n} from \"../../Redux/DispatchFuncitons/Eventfunctions\";\r\nexport default function Home(props) {\r\n  const dispatch = useDispatch();\r\n  const [Menu, setMenu] = useState(0);\r\n  const EventState = useSelector((state) => state.Eventdata);\r\n  useEffect(async () => {\r\n    dispatch(GetEvents());\r\n    dispatch(GetInvitations());\r\n    // await console.log(EventState);\r\n\r\n    if (\r\n      props.location.pathname === \"/MyInvitations\" ||\r\n      props.location.pathname === \"/\" ||\r\n      props.location.pathname === \"/home\"\r\n    ) {\r\n      await setMenu(0);\r\n    } else {\r\n      setMenu(1);\r\n    }\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Header url={props.location.pathname} />\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12} sm={12} md={12}>\r\n          {Menu === 0 ? (\r\n            <Invitation data={EventState.myInvitations} className=\"w-100\" />\r\n          ) : (\r\n            <EventList data={EventState.myEvents} className=\"w-100\" />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n      <FootMenu menu={Menu} setMenu={setMenu} />\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Auth\\MobileAuth.js",[],"C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\Landingpage.js",["333","334","335","336","337","338"],"C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\AddEvent\\AddEventSucess.js",["339","340","341","342"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./AddEvent.css\";\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport history from \"../../Utils/History\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport check from \"../../Assets/check-circle.1.png\";\r\nimport Share from \"../../Assets/Shareon.svg\";\r\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\r\nexport default function AddEventSucess(props) {\r\n  const [url, seturl] = useState(props.match.params.id);\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid item xs={12}>\r\n        <Header />\r\n      </Grid>\r\n      <Grid item xs={false} sm={3} md={3} />\r\n      <Grid item xs={12} sm={6} md={6}>\r\n        <Grid container spacing={0} className=\"p-10px\">\r\n          <Grid item xs={12}>\r\n            <center>\r\n              <img src={check} className=\"p-10px \" />\r\n            </center>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <h2 className=\"tac\">\r\n              Your Invitation has been sucessfully created.\r\n            </h2>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <p className=\"w-100 tac\"> Click on the Link to copy</p>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            className=\"tac m-b-25px clipboard\"\r\n            onClick={() => {\r\n              navigator.clipboard.writeText(\r\n                \"https://mobily-invited-server.herokuapp.com/MyInvitations/\" +\r\n                  url\r\n              );\r\n            }}\r\n          >\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={11} className=\"link\">\r\n                {\"https://mobily-invited-server.herokuapp.com/MyInvitations/\" +\r\n                  url}\r\n              </Grid>{\" \"}\r\n              <Grid item xs={1} className=\"p-t-10\">\r\n                <FileCopyIcon />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} className=\"w-100 tac\">\r\n            Share on\r\n          </Grid>\r\n          <Grid item xs={12} className=\"tac m-b-25px\">\r\n            <center>\r\n              <img src={Share} className=\"\" />\r\n            </center>\r\n          </Grid>\r\n          <Grid item xs={12} className=\"tac\">\r\n            Note: Only those who have invite can access.\r\n          </Grid>\r\n          <Grid item xs={12} className=\"down-float\">\r\n            {\" \"}\r\n            <button\r\n              className=\"save-event\"\r\n              onClick={() => {\r\n                history.push(\"/\");\r\n              }}\r\n            >\r\n              Done\r\n            </button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\AddEvent\\AddEvent.js",["343","344","345","346","347","348","349"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./AddEvent.css\";\r\nimport Header from \"../Helpers/Header/Header\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport HorizontalLinearStepper from \"./Stepper/Stepper\";\r\nimport CreateEvent from \"./CreateEvent/CreateEvent\";\r\nimport AddParticipants from \"../AddEvent/AddParticipants/AddParticipants\";\r\nimport Toggler from \"../Helpers/EventInvitoggler/Toggler\";\r\nimport BackNavBar from \"../Helpers/BackNavbar/BackNavBar\";\r\nimport Back from \"../../Assets/Back.svg\";\r\nimport history from \"../../Utils/History\";\r\n\r\nimport Plan from \"../Plan/Plan\";\r\nexport default function AddEvent(props) {\r\n  const [Type, setType] = useState(\"Wedding\");\r\n  const [activeStep, setActiveStep] = useState(0);\r\n\r\n  const [Events, setEvents] = useState([]);\r\n\r\n  let events = {\r\n    Name: \"Event \" + (Events.length + 1 || \"1\"),\r\n    Participants: [],\r\n    file: \"\",\r\n    filetype: \"\",\r\n    Date: \"\",\r\n    Time: \"\",\r\n    VenueType: \"Online\",\r\n    Location: \"\",\r\n    Link: \"\",\r\n    Description: \"\",\r\n    GuestInvite: false,\r\n    Host: \"\",\r\n    Co_Host: [],\r\n    Schedule: [],\r\n  };\r\n  const [SelectedEvent, SelectEvent] = useState(0);\r\n  const [Story, setStory] = useState([]);\r\n  const [albumdata, setalbumdata] = useState([]);\r\n  const handleChange = (event) => {\r\n    setType(event.target.value);\r\n  };\r\n\r\n  const addAnEvent = async () => {\r\n    if (Events.length < 4) {\r\n      setEvents([...Events, events]);\r\n    }\r\n  };\r\n  const removeAnEvent = async () => {\r\n    let events = [...Events];\r\n    if (events.length > 1) {\r\n      events = events.slice(0, -1);\r\n      await setEvents(events);\r\n    }\r\n\r\n    if (SelectedEvent > events.length - 1) {\r\n      console.log(SelectedEvent - 1);\r\n      SelectEvent(SelectedEvent - 1);\r\n      console.log(SelectedEvent, events.length - 1);\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const checkIfEventEmpty = async (eventscpy, Type, seterroring, index) => {\r\n    if (Type === \"\") {\r\n      seterroring(true);\r\n      return { status: false, index: 0, component: \"Type\" };\r\n    }\r\n    console.log(Events);\r\n    let Eventcpy = [...Events];\r\n    let result = true;\r\n    let incompleteeventnumber = null;\r\n    //check for event first\r\n    Eventcpy = { ...Events[index] };\r\n    if (Eventcpy.Name === \"\") {\r\n      console.log({ status: false, index: index, component: \"Name\" });\r\n      return { status: false, index: index, component: \"Name\" };\r\n    } else if (Eventcpy.Date === \"\") {\r\n      console.log({ status: false, index: index, component: \"Date\" });\r\n      return { status: false, index: index, component: \"Date\" };\r\n    } else if (Eventcpy.Time === \"\") {\r\n      console.log({ status: false, index: index, component: \"Time\" });\r\n      return { status: false, index: index, component: \"Time\" };\r\n    } else if (Eventcpy.Description === \"\") {\r\n      console.log({ status: false, index: index, component: \"Description\" });\r\n      return { status: false, index: index, component: \"Description\" };\r\n    } else if (Eventcpy.VenueType === \"\") {\r\n      console.log({ status: false, index: index, component: \"VenueType\" });\r\n      return { status: false, index: index, component: \"VenueType\" };\r\n    } else if (\r\n      Eventcpy.VenueType === \"Both\" &&\r\n      (Eventcpy.Location === \"\" || Eventcpy.Link === \"\")\r\n    ) {\r\n      console.log({\r\n        status: false,\r\n        index: index,\r\n        component: \"Both Location Link\",\r\n      });\r\n      return { status: false, index: index, component: \"Location\" };\r\n    } else if (Eventcpy.VenueType === \"Online\" && Eventcpy.Link === \"\") {\r\n      console.log({ status: false, index: index, component: \"Link\" });\r\n      return { status: false, index: index, component: \"Location\" };\r\n    } else if (Eventcpy.VenueType === \"Offline\" && Eventcpy.Location === \"\") {\r\n      console.log({ status: false, index: index, component: \"Link\" });\r\n      return { status: false, index: index, component: \"Location\" };\r\n    } else if (Eventcpy.file === \"\") {\r\n      console.log({ status: false, index: index, component: \"file\" });\r\n      return { status: false, index: index, component: \"file\" };\r\n    } else if (Eventcpy.filetype === \"\") {\r\n      console.log({ status: false, index: index, component: \"filetype\" });\r\n      return { status: false, index: index, component: \"filetype\" };\r\n    }\r\n\r\n    for (let i = 0; i < Events.length; i++) {\r\n      incompleteeventnumber = i;\r\n      Eventcpy = { ...Events[i] };\r\n      if (Eventcpy.Name === \"\") {\r\n        console.log({ status: false, index: i, component: \"Name\" });\r\n        return { status: false, index: i, component: \"Name\" };\r\n      } else if (Eventcpy.Date === \"\") {\r\n        console.log({ status: false, index: i, component: \"Date\" });\r\n        return { status: false, index: i, component: \"Date\" };\r\n      } else if (Eventcpy.Time === \"\") {\r\n        console.log({ status: false, index: i, component: \"Time\" });\r\n        return { status: false, index: i, component: \"Time\" };\r\n      } else if (Eventcpy.Description === \"\") {\r\n        console.log({ status: false, index: i, component: \"Description\" });\r\n        return { status: false, index: i, component: \"Description\" };\r\n      } else if (Eventcpy.VenueType === \"\") {\r\n        console.log({ status: false, index: i, component: \"VenueType\" });\r\n        return { status: false, index: i, component: \"VenueType\" };\r\n      } else if (\r\n        Eventcpy.VenueType === \"Both\" &&\r\n        (Eventcpy.Location === \"\" || Eventcpy.Link === \"\")\r\n      ) {\r\n        console.log({\r\n          status: false,\r\n          index: i,\r\n          component: \"Both Location Link\",\r\n        });\r\n        return { status: false, index: i, component: \"Location\" };\r\n      } else if (Eventcpy.VenueType === \"Online\" && Eventcpy.Link === \"\") {\r\n        console.log({ status: false, index: i, component: \"Link\" });\r\n        return { status: false, index: i, component: \"Location\" };\r\n      } else if (Eventcpy.VenueType === \"Offline\" && Eventcpy.Location === \"\") {\r\n        console.log({ status: false, index: i, component: \"Link\" });\r\n        return { status: false, index: i, component: \"Location\" };\r\n      } else if (Eventcpy.file === \"\") {\r\n        console.log({ status: false, index: i, component: \"file\" });\r\n        return { status: false, index: i, component: \"file\" };\r\n      } else if (Eventcpy.filetype === \"\") {\r\n        console.log({ status: false, index: i, component: \"filetype\" });\r\n        return { status: false, index: i, component: \"filetype\" };\r\n      }\r\n    }\r\n\r\n    console.log({ status: true, index: null, component: \"\" });\r\n    return { status: true, index: null, component: \"\" };\r\n  };\r\n\r\n  const addfinalDetails = () => {\r\n    let EventsCopy = [...Events];\r\n    EventsCopy.map((eve, index) => {\r\n      if (index === 0) {\r\n        eve.MainCode = \"ME\" + 313213132313;\r\n        eve.eventCode = \"ME\" + 313213132313;\r\n        eve.Link = \"dsd/as3213\";\r\n        //mainevent will give acces to all\r\n      } else {\r\n        eve.MainCode = \"ME\" + 313213132313;\r\n        eve.eventCode = \"E\" + \"randomcode\";\r\n        eve.Link = \"dsd/as3213/sdse\";\r\n        //single event access link\r\n      }\r\n    });\r\n    setEvents(EventsCopy);\r\n  };\r\n\r\n  useEffect(async () => {\r\n    addAnEvent();\r\n  }, []);\r\n\r\n  function StepRender(step) {\r\n    switch (step.activeStep) {\r\n      case 0:\r\n        return (\r\n          <CreateEvent\r\n            setType={setType}\r\n            Type={Type}\r\n            Events={Events}\r\n            setEvents={setEvents}\r\n            addAnEvent={addAnEvent}\r\n            checkIfEventEmpty={checkIfEventEmpty}\r\n            handleChange={handleChange}\r\n            removeAnEvent={removeAnEvent}\r\n            SelectEvent={SelectEvent}\r\n            SelectedEvent={SelectedEvent}\r\n            handleNext={handleNext}\r\n            handleBack={handleBack}\r\n            addfinalDetails={addfinalDetails}\r\n            albumdata={albumdata}\r\n            setalbumdata={setalbumdata}\r\n            Story={Story}\r\n            setStory={setStory}\r\n            template={events}\r\n          />\r\n        );\r\n      case 1:\r\n        return <Plan handleNext={handleNext} handleBack={handleBack} />;\r\n      case 2:\r\n        return (\r\n          <AddParticipants\r\n            handleNext={handleNext}\r\n            handleBack={handleBack}\r\n            Events={Events}\r\n            setEvents={setEvents}\r\n            SelectEvent={SelectEvent}\r\n            SelectedEvent={SelectedEvent}\r\n            addAnEvent={addAnEvent}\r\n            removeAnEvent={removeAnEvent}\r\n            addfinalDetails={addfinalDetails}\r\n            Type={Type}\r\n            Story={Story}\r\n          />\r\n        );\r\n      case 3:\r\n        return <div></div>;\r\n      default:\r\n        return <div></div>;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header url={props.location.pathname} />\r\n      <Toggler toggle={console.log(\"toggle\")} locaiton={\"eve\"} />\r\n      <BackNavBar\r\n        logo={<img src={Back} />}\r\n        Name={\"Create Event\"}\r\n        functionality={() => {\r\n          history.push(\"/MyEvents\");\r\n        }}\r\n      />\r\n      <Grid container spacing={0} className=\"p-15px pt-0\">\r\n        <Grid item xs={false} sm={2} md={2} />\r\n\r\n        <Grid item xs={12} sm={8} md={8} className=\"p-15px pt-0\">\r\n          <HorizontalLinearStepper\r\n            handleNext={handleNext}\r\n            handleBack={handleBack}\r\n            activeStep={activeStep}\r\n          />\r\n          <StepRender activeStep={activeStep} />\r\n        </Grid>\r\n\r\n        <Grid item xs={false} sm={2} md={2} />\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Chat\\ChatPage.js",[],"C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Invitations\\Info\\Invitationlist.js",["350","351","352","353","354","355","356"],"import React, { useState, useEffect } from \"react\";\r\nimport Header from \"../../Helpers/Header/Header\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./Invitationlist.css\";\r\nimport history from \"../../../Utils/History\";\r\nimport { Grid, TextField, IconButton } from \"@material-ui/core\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport UserData from \"../../Helpers/UserData/UserData\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport InsertCommentRoundedIcon from \"@material-ui/icons/InsertCommentRounded\";\r\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\r\nimport DateRangeRoundedIcon from \"@material-ui/icons/DateRangeRounded\";\r\nimport RepeatRoundedIcon from \"@material-ui/icons/RepeatRounded\";\r\nimport LocationOnRoundedIcon from \"@material-ui/icons/LocationOnRounded\";\r\nimport ArrowForwardIosRoundedIcon from \"@material-ui/icons/ArrowForwardIosRounded\";\r\nimport ArrowBackIosRoundedIcon from \"@material-ui/icons/ArrowBackIosRounded\";\r\nexport default function Invitationlist(props) {\r\n  const Eventdata = useSelector(\r\n    (state) => state.Eventdata.myInvitations[props.match.params.id]\r\n  );\r\n  const [startlocation, setstartlocation] = useState({ x: 0, y: 0 });\r\n  const [evno, setevno] = useState(0);\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [hasrsvp, setrsvp] = useState(false);\r\n  const [rsvpstatus, setrsvpstatus] = useState(\"\");\r\n  const [Comment, setComment] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const Next = (i) => {\r\n    console.log(i, Eventdata.length);\r\n    if (i < Eventdata.length) {\r\n      setevno(i);\r\n    }\r\n  };\r\n  const Prev = (i) => {\r\n    console.log(i, Eventdata.length);\r\n    if (i >= 0) {\r\n      setevno(i);\r\n    }\r\n  };\r\n  function handleSwipe(e) {\r\n    const firstTouchEvent = e.touches[0];\r\n\r\n    const location = {\r\n      x: firstTouchEvent.clientX,\r\n      y: firstTouchEvent.clientY,\r\n    };\r\n    setstartlocation(location);\r\n    //console.log(location);\r\n  }\r\n  function handleswipeend(e) {\r\n    const firstTouchEvent = e.changedTouches[0];\r\n    const location = {\r\n      x: firstTouchEvent.clientX, //get the location of the end of the touch\r\n      y: firstTouchEvent.clientY,\r\n    };\r\n    const differences = {\r\n      x: startlocation.x - location.x, //find the difference from the start to the end touch\r\n      y: startlocation.y - location.y,\r\n    };\r\n    if (differences.x < 0) {\r\n      Prev(evno - 1);\r\n    } else if (differences.x > 50) {\r\n      Next(evno + 1);\r\n    }\r\n    // console.log(differences);\r\n  }\r\n  function handleSwipe(e) {\r\n    const firstTouchEvent = e.touches[0];\r\n\r\n    const location = {\r\n      x: firstTouchEvent.clientX,\r\n      y: firstTouchEvent.clientY,\r\n    };\r\n    setstartlocation(location);\r\n    //console.log(location);\r\n  }\r\n  useEffect(() => {\r\n    if (Eventdata[evno].RSVPList.length > 0) {\r\n      Eventdata[evno].RSVPList.map((rsvpdata, index) => {\r\n        if (rsvpdata.By === Auth.Phone) {\r\n          setrsvp(true);\r\n          setrsvpstatus(rsvpdata.Status);\r\n        } else {\r\n          setrsvp(false);\r\n          setrsvpstatus(\"\");\r\n        }\r\n      });\r\n    } else {\r\n      setrsvp(false);\r\n      setrsvpstatus(\"\");\r\n    }\r\n  }, [evno]);\r\n  return (\r\n    <>\r\n      <Header />\r\n      <IconButton className=\"next-button\">\r\n        <ArrowForwardIosRoundedIcon\r\n          onClick={() => {\r\n            Next(evno + 1);\r\n          }}\r\n        />\r\n      </IconButton>\r\n      <IconButton className=\"prev-button\">\r\n        <ArrowBackIosRoundedIcon\r\n          onClick={() => {\r\n            Next(evno - 1);\r\n          }}\r\n        />\r\n      </IconButton>\r\n      <div\r\n        className=\"RSVP-card\"\r\n        style={{\r\n          backgroundImage: \"url(\" + Eventdata[evno].file + \")\",\r\n          backgroundRepeat: \"no-repaet\",\r\n        }}\r\n        onTouchStart={(e) => {\r\n          handleSwipe(e);\r\n        }}\r\n        onTouchEnd={(e) => {\r\n          handleswipeend(e);\r\n        }}\r\n      >\r\n        <Grid container spacing={0} className=\"eventheader\">\r\n          <Grid item xs={6} className=\"back-button\">\r\n            <h2\r\n              className=\"m-0\"\r\n              onClick={() => {\r\n                history.push(\"/home\");\r\n              }}\r\n            >\r\n              <ArrowBackIcon className=\"back-img\" />\r\n              {Eventdata[0].InvId.Type}\r\n            </h2>\r\n          </Grid>\r\n          <Grid item xs={6} className=\"skip\">\r\n            <button\r\n              className=\"Skip-button\"\r\n              onClick={() => {\r\n                Next(evno + 1);\r\n              }}\r\n            >\r\n              GuestList\r\n            </button>\r\n          </Grid>\r\n        </Grid>\r\n        <div className=\"infocard\">\r\n          <div className=\"messageholder\">\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={2} sm={1}>\r\n                <UserData\r\n                  showIcon={true}\r\n                  showName={false}\r\n                  Phone={Eventdata[0].Host[0]}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6} sm={9}>\r\n                <Grid container spacing={0}>\r\n                  <Grid item xs={12}>\r\n                    <UserData\r\n                      showIcon={false}\r\n                      showName={true}\r\n                      Phone={Eventdata[0].Host[0]}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"w-100 b-none\"\r\n                      placeholder=\"Add a comment \"\r\n                      onChange={(e) => setComment(e.target.value)}\r\n                      value={Comment}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item xs={4} sm={2}>\r\n                <IconButton>\r\n                  <SendIcon />\r\n                </IconButton>\r\n                <IconButton>\r\n                  <InsertCommentRoundedIcon />\r\n                </IconButton>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n          <div className=\"buttons\">\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={3}>\r\n                <center>\r\n                  <IconButton className=\"b-blue\">\r\n                    <ThumbUpAltIcon />\r\n                  </IconButton>\r\n                </center>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <center>\r\n                  <IconButton className=\"b-blue\">\r\n                    <RepeatRoundedIcon />\r\n                  </IconButton>\r\n                </center>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <center>\r\n                  <IconButton className=\"b-blue\">\r\n                    <DateRangeRoundedIcon />\r\n                  </IconButton>\r\n                </center>\r\n              </Grid>\r\n              <Grid item xs={3}>\r\n                <center>\r\n                  <IconButton className=\"b-blue\">\r\n                    <LocationOnRoundedIcon />\r\n                  </IconButton>\r\n                </center>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n          <h3 className=\"m-0\">\r\n            {Eventdata[0].Date + \" @\" + Eventdata[0].Time}\r\n          </h3>\r\n          <p className=\"m-0\"> {Eventdata[0].Description}</p>\r\n          <center>\r\n            <div\r\n              className=\"dots-container \"\r\n              style={{\r\n                width: Eventdata.length * 10 + Eventdata.length * 10 + \"px\",\r\n              }}\r\n            >\r\n              {Eventdata.map((eve, index) => (\r\n                <>\r\n                  <div className={index === evno ? \"dot l-blue\" : \"dot\"} />\r\n                </>\r\n              ))}\r\n            </div>\r\n          </center>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Invitations\\RSVP\\Rsvp.js",["357","358","359","360","361","362","363"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./Rsvp.css\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport Header from \"../../Helpers/Header/Header\";\r\nimport Toggler from \"../../Helpers/EventInvitoggler/Toggler\";\r\nimport BackNavBar from \"../../Helpers/BackNavbar/BackNavBar\";\r\nimport history from \"../../../Utils/History\";\r\nimport { rsvp_event } from \"../../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport Back from \"../../../Assets/Back.svg\";\r\nimport { Avatar, Grid } from \"@material-ui/core\";\r\nimport Carousel from \"react-material-ui-carousel\";\r\nimport KeyboardArrowRightRoundedIcon from \"@material-ui/icons/KeyboardArrowRightRounded\";\r\nimport KeyboardArrowLeftRoundedIcon from \"@material-ui/icons/KeyboardArrowLeftRounded\";\r\nexport default function Rsvp(props) {\r\n  const [evno, setevno] = useState(0);\r\n  const [hasrsvp, setrsvp] = useState(false);\r\n  const [rsvpstatus, setrsvpstatus] = useState(\"\");\r\n  const Eventdata = useSelector(\r\n    (state) => state.Eventdata.myInvitations[props.match.params.id]\r\n  );\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const dispatch = useDispatch();\r\n\r\n  const Next = (i) => {\r\n    console.log(i, Eventdata.length);\r\n    if (i < Eventdata.length) {\r\n      setevno(i);\r\n    } else {\r\n      history.push(\"/home\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (Eventdata[evno].RSVPList.length > 0) {\r\n      Eventdata[evno].RSVPList.map((rsvpdata, index) => {\r\n        if (rsvpdata.By === Auth.Phone) {\r\n          setrsvp(true);\r\n          setrsvpstatus(rsvpdata.Status);\r\n        } else {\r\n          setrsvp(false);\r\n          setrsvpstatus(\"\");\r\n        }\r\n      });\r\n    } else {\r\n      setrsvp(false);\r\n      setrsvpstatus(\"\");\r\n    }\r\n  }, [evno]);\r\n  return (\r\n    <>\r\n      <>\r\n        <Header url={props.location.pathname} />\r\n        <Toggler toggle={console.log(\"toggle\")} locaiton={\"eve\"} />\r\n        <BackNavBar\r\n          logo={<img src={Back} />}\r\n          Name={\"Rsvp\"}\r\n          functionality={() => {\r\n            history.push(\"/MyInvitations\");\r\n          }}\r\n          icon={\r\n            <button\r\n              className=\"Skip-button\"\r\n              onClick={() => {\r\n                Next(evno + 1);\r\n              }}\r\n            >\r\n              Skip\r\n            </button>\r\n          }\r\n        />\r\n        <Grid container spacing={0} className=\"p-15px pt-0\">\r\n          <Grid item xs={false} sm={2} md={2} />\r\n\r\n          <Grid item xs={12} sm={8} md={8} className=\"\">\r\n            <Carousel\r\n              indicators={false}\r\n              interval={10000}\r\n              navButtonsAlwaysInvisible={true}\r\n              autoPlay={false}\r\n            >\r\n              {Eventdata.map((eve, index) => (\r\n                <div className=\"w-100 mt-10px \" key={\"rsvp\" + index}>\r\n                  <Grid container spacing={0} className=\"RSVP-AVATAR\">\r\n                    <Grid item xs={3} sm={1}>\r\n                      <Avatar\r\n                        src={Eventdata[evno].file}\r\n                        alt=\"Remy Sharp\"\r\n                        className=\"RSVP-avatar\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={9} sm={11} className=\"p-t-5\">\r\n                      <Grid item xs={12} className=\"fs-bold t-white\">\r\n                        {Eventdata[evno].InvId.Type +\r\n                          \":\" +\r\n                          Eventdata[evno].Name}\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12} className=\"fs-small t-white\">\r\n                        {Eventdata[evno].Date} {Eventdata[evno].Time}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <img src={Eventdata[evno].file} className=\"rsvp-img\"></img>\r\n                  <Grid container spacing={0} className=\"RSVP-AVATAR\">\r\n                    <Grid item xs={12} sm={12} className=\"rsvpoptions\">\r\n                      <Grid container spacing={0}>\r\n                        <Grid item xs={4}>\r\n                          <center>\r\n                            <button\r\n                              className={\r\n                                hasrsvp === true && rsvpstatus === \"Accept\"\r\n                                  ? \"rsvp-options \"\r\n                                  : \" rsvp-options dark-grey t-white \"\r\n                              }\r\n                              onClick={async () => {\r\n                                await dispatch(\r\n                                  rsvp_event(\r\n                                    Eventdata[evno]._id,\r\n                                    \"Accept\",\r\n                                    Auth.Phone\r\n                                  )\r\n                                );\r\n                                Next(evno + 1);\r\n                              }}\r\n                            >\r\n                              Accept\r\n                            </button>\r\n                          </center>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                          <center>\r\n                            <button\r\n                              className={\r\n                                hasrsvp === true && rsvpstatus === \"May Be\"\r\n                                  ? \"rsvp-options \"\r\n                                  : \" rsvp-options dark-grey t-white\"\r\n                              }\r\n                              onClick={async () => {\r\n                                await dispatch(\r\n                                  rsvp_event(\r\n                                    Eventdata[evno]._id,\r\n                                    \"May Be\",\r\n                                    Auth.Phone\r\n                                  )\r\n                                );\r\n                                Next(evno + 1);\r\n                              }}\r\n                            >\r\n                              May Be\r\n                            </button>\r\n                          </center>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                          <center>\r\n                            <button\r\n                              className={\r\n                                hasrsvp === true && rsvpstatus === \"Decline\"\r\n                                  ? \"rsvp-options \"\r\n                                  : \" rsvp-options dark-grey t-white\"\r\n                              }\r\n                              onClick={async () => {\r\n                                await dispatch(\r\n                                  rsvp_event(\r\n                                    Eventdata[evno]._id,\r\n                                    \"Decline\",\r\n                                    Auth.Phone\r\n                                  )\r\n                                );\r\n                                Next(evno + 1);\r\n                              }}\r\n                            >\r\n                              Decline\r\n                            </button>\r\n                          </center>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              ))}\r\n            </Carousel>\r\n            <center>\r\n              <div\r\n                className=\"\"\r\n                style={{\r\n                  width: Eventdata.length * 10 + Eventdata.length * 10 + \"px\",\r\n                }}\r\n              >\r\n                {Eventdata.map((eve, index) => (\r\n                  <>\r\n                    <div className={index === evno ? \"dot l-blue\" : \"dot\"} />\r\n                  </>\r\n                ))}\r\n              </div>\r\n            </center>\r\n          </Grid>\r\n          <Grid item xs={false} sm={2} md={2} />\r\n        </Grid>\r\n      </>\r\n    </>\r\n  );\r\n  //   return (\r\n  //     <>\r\n  //       <Header />\r\n  //       <div\r\n  //         className=\"RSVP-card\"\r\n  //         style={{\r\n  //           backgroundImage: \"url(\" + Eventdata[evno].file + \")\",\r\n  //           backgroundRepeat: \"no-repaet\",\r\n  //         }}\r\n  //       >\r\n  //         <Grid container spacing={0} className=\"eventheader\">\r\n  //           <Grid item xs={6} className=\"back-button\">\r\n  //             <h2\r\n  //               className=\"m-0\"\r\n  //               onClick={() => {\r\n  //                 history.push(\"/home\");\r\n  //               }}\r\n  //             >\r\n  //               <ArrowBackIcon className=\"back-img\" />\r\n  //               {Eventdata[0].InvId.Type}\r\n  //             </h2>\r\n  //           </Grid>\r\n  //           <Grid item xs={6} className=\"skip\">\r\n  //\r\n  //           </Grid>\r\n  //         </Grid>\r\n  //         <div className=\"eventbuttons\">\r\n\r\n  //             </Grid>\r\n  //           </Grid>\r\n  //         </div>\r\n  //         <center>\r\n  //           <div\r\n  //             className=\"indicator-container \"\r\n  //             style={{\r\n  //               width: Eventdata.length * 10 + Eventdata.length * 10 + \"px\",\r\n  //             }}\r\n  //           >\r\n\r\n  //           </div>\r\n  //         </center>\r\n  //       </div>\r\n  //     </>\r\n  //   );\r\n}\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Redux\\Reducers\\ReducerCombiner.js",[],"C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Invitations\\Invitation.js",["364","365","366","367","368","369","370","371"],"import React, { useEffect, useState } from \"react\";\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\nimport NoInv from \"../../Assets/NoInvitation.svg\";\r\nimport \"./Invitations.css\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport LanguageIcon from \"@material-ui/icons/Language\";\r\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\r\nimport NotificationsOffIcon from \"@material-ui/icons/NotificationsOff\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport history from \"../../Utils/History\";\r\nexport default function Invitation(props) {\r\n  const [data, setData] = useState(props.data);\r\n  useEffect(async () => {\r\n    console.log(props.data);\r\n    await setData(props.data);\r\n  }, [props.data]);\r\n\r\n  if (props.data !== undefined && props.data.length > 0) {\r\n  } else {\r\n    return <img src={NoInv} className=\"nodata\" />;\r\n  }\r\n  return (\r\n    <Grid container spacing={0}>\r\n      {data.map((inv, index) => (\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={6}\r\n          className=\"InvitationCard\"\r\n          key={\"InvitationCard\" + index}\r\n        >\r\n          <img src={inv[0].file} className=\"inv-img\" />\r\n          <NotificationsNoneIcon className=\"card-button Notifyme t-white\" />\r\n          <div className=\"bottom-bar\">\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={8}>\r\n                <Grid container spacing={0} className=\"event-info\">\r\n                  <Grid item xs={12} className=\"fs-bold t-white\">\r\n                    {inv[0].InvId.Type}\r\n                  </Grid>\r\n                  <Grid item xs={12} className=\"fs-small t-white\">\r\n                    {inv[0].Date} {inv[0].Time}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <button\r\n                  className=\"card-button rsvp-button \"\r\n                  onClick={() => {\r\n                    history.push(\"/inv/\" + \"RSVP\" + \"/\" + index);\r\n                  }}\r\n                >\r\n                  RSVP\r\n                </button>\r\n              </Grid>\r\n              <Grid item xs={2} className=\"tac\">\r\n                {inv[0].VenueType === \"Online\" ||\r\n                inv[0].VenueType === \"Both\" ? (\r\n                  <LanguageIcon className=\"t-white   mt-5px \" />\r\n                ) : (\r\n                  <LocationOnIcon className=\"t-white  mt-5px \" />\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Auth\\LoginSignup.js",["372"],"import React, { useState, useEffect } from \"react\";\r\nimport Login from \"../../Assets/Auth.svg\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./Auth.css\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport OtpInput from \"react-otp-input\";\r\nimport Timer from \"../Helpers/timer/timer\";\r\nimport {\r\n  loginuser,\r\n  getopt,\r\n  verifyotp,\r\n} from \"../../Redux/DispatchFuncitons/AuthFunctions\";\r\n\r\nexport default function LoginSignup() {\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const dispatch = useDispatch();\r\n  const [step, setStep] = useState(0);\r\n  const [number, setnumber] = useState(0);\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const [OTP, SetOPT] = useState();\r\n  const [Phone, setPhone] = useState(\"\");\r\n  let phone = \"\";\r\n  const handleClick = (e) => {\r\n    phone = \"+\" + number.toString();\r\n    if (phone.length < 9) {\r\n      setError(\"Invalid Phone Number\");\r\n    } else {\r\n      dispatch(getopt(phone));\r\n      setPhone(phone);\r\n      setStep(1);\r\n    }\r\n  };\r\n\r\n  const handleCheck = () => {\r\n    dispatch(verifyotp(Phone, OTP));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Auth.OTPStatus === true) {\r\n      if (Auth.isVerified === true) {\r\n        dispatch(loginuser(Phone));\r\n      } else if (Auth.isVerified === false) {\r\n        setStep(1);\r\n      } else {\r\n        setError(\"please check the input\");\r\n      }\r\n    }\r\n  }, [Auth.isVerified, Auth.OTPStatus]);\r\n\r\n  if (step === 0) {\r\n    return (\r\n      <div>\r\n        <div id=\"sign-in-button\"></div>\r\n        <img src={Login} alt=\"login\" className=\"Auth-image\" />\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={12} className=\"modal-title\">\r\n            Login\r\n            <p className=\"modal-title-description\">\r\n              Enter your Mobile Number and Verify your Login\r\n            </p>\r\n          </Grid>\r\n          <Grid item xs={12} className=\"modal-title\">\r\n            <PhoneInput\r\n              country={\"in\"}\r\n              value={number}\r\n              onChange={(phone) => setnumber(phone)}\r\n            />\r\n            <p className=\"error\">{Auth.Message || error}</p>\r\n\r\n            <button\r\n              onClick={(e) => {\r\n                handleClick(e);\r\n              }}\r\n              className=\"get-otp-button\"\r\n            >\r\n              Request Otp\r\n            </button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  } else if (step === 1) {\r\n    return (\r\n      <div>\r\n        <div id=\"recaptcha-container\" size=\"invisible\"></div>\r\n        <img src={Login} alt=\"login\" className=\"Auth-image\" />\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={12} className=\"modal-title\">\r\n            Authorized OTP\r\n            <p className=\"modal-title-description\">\r\n              Enter the code you recieved on your Mobile number\r\n            </p>\r\n          </Grid>\r\n          <Grid item xs={12} className=\"modal-title\">\r\n            <span>Enter One Time Password (OTP)</span>{\" \"}\r\n          </Grid>\r\n          <Grid item xs={12} className=\"modal-title\">\r\n            <OtpInput\r\n              className=\"OTP\"\r\n              value={OTP}\r\n              onChange={(otp) => SetOPT(otp)}\r\n              numInputs={6}\r\n              separator={<span></span>}\r\n              inputStyle=\"Otp-block\"\r\n              isInputNum={true}\r\n            />\r\n            <p className=\"error\">{Auth.Message}</p>\r\n            <button\r\n              onClick={(e) => {\r\n                handleCheck();\r\n              }}\r\n              className=\"get-otp-button\"\r\n            >\r\n              Verify\r\n            </button>\r\n            <button\r\n              onClick={(e) => {\r\n                handleClick(e);\r\n              }}\r\n              className=\"resend-otp\"\r\n            >\r\n              Resend OTP\r\n            </button>\r\n            <p className=\"label w-100 tac\">\r\n              <Timer setStep={setStep} />\r\n            </p>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\BlockTitle.js",[],"C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\AccordionItem.js",[],"C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\Contact.js",[],"C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\Banner.js",["373"],"import React, { useState } from \"react\";\r\nimport ModalVideo from \"react-modal-video\";\r\n\r\nimport BannerShape from \"../assets/images/shapes/banner-shape-1-1.png\";\r\nimport BannerBG from \"../assets/images/resources/banner-image-1-1.jpg\";\r\nimport BannerMoc from \"../assets/images/resources/banner-moc-1-1.png\";\r\n\r\nconst Banner = () => {\r\n  const [open, setOpen] = useState({\r\n    isOpen: false,\r\n  });\r\n  const openModal = () => {\r\n    setOpen({\r\n      isOpen: true,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <section className=\"banner-one\" id=\"home\">\r\n      <img src={BannerShape} className=\"banner-one__bg-shape-1\" alt=\"\" />\r\n      <div\r\n        className=\"banner-one__bg\"\r\n        style={{ backgroundImage: `url(${BannerBG})` }}\r\n      ></div>\r\n      <div className=\"container\">\r\n        <ModalVideo\r\n          channel=\"youtube\"\r\n          isOpen={open.isOpen}\r\n          videoId=\"Kl5B6MBAntI\"\r\n          onClose={() => setOpen({ isOpen: false })}\r\n        />\r\n        <div onClick={openModal} className=\"banner-one__video video-popup\">\r\n          <i className=\"fa fa-play\"></i>\r\n        </div>\r\n        <div className=\"banner-one__moc\">\r\n          <img\r\n            src={BannerMoc}\r\n            className=\"wow fadeInUp\"\r\n            data-wow-duration=\"1500ms\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-7\">\r\n            <div className=\"banner-one__content\">\r\n              <form\r\n                className=\"banner-one__mc-form mc-form\"\r\n                data-url=\"phone-number\"\r\n              >\r\n                <input type=\"tel\"  placeholder=\"Phone Number\" pattern=\"[0-9]{10}\" required/>\r\n                <button type=\"submit\" className=\"thm-btn banner-one__mc-btn\">\r\n                  <span>Sign In</span>\r\n                </button>\r\n              </form>\r\n              <div className=\"mc-form__response\"></div>\r\n              <h3>\r\n                A Smarter Way <br /> To Attend <br /> Events\r\n              </h3>\r\n              <p>\r\n              Invite people to celebrate your occasion.{\" \"}\r\n                <br />So easy and convinient.\r\n              </p>\r\n              <a href=\"#\" className=\"thm-btn banner-one__btn\">\r\n                <span>Discover More</span>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\Clients.js",[],"C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\CTAOne.js",["374"],"import React from \"react\";\r\nimport BlockTitle from \"./BlockTitle\";\r\n\r\nimport CtaShape1 from \"../assets/images/shapes/cta-1-shape-1.png\";\r\nimport CtaShape2 from \"../assets/images/shapes/cta-1-shape-2.png\";\r\nimport CtaMoc1 from \"../assets/images/resources/cta-1-moc-1.png\";\r\n\r\nconst CTAOne = () => {\r\n  return (\r\n    <section className=\"cta-one\">\r\n      <img src={CtaShape1} className=\"cta-one__bg-shape-1\" alt=\"\" />\r\n      <img src={CtaShape2} className=\"cta-one__bg-shape-2\" alt=\"\" />\r\n      <div className=\"container\">\r\n        <div className=\"cta-one__moc wow fadeInLeft\" data-wow-duration=\"1500ms\">\r\n          <img src={CtaMoc1} className=\"cta-one__moc-img\" alt=\"\" />\r\n        </div>\r\n        <div className=\"row justify-content-end\">\r\n          <div className=\"col-lg-6\">\r\n            <div className=\"cta-one__content\">\r\n              <BlockTitle\r\n                textAlign=\"left\"\r\n                paraText=\"More Features\"\r\n                titleText={`Manage Multiple Events \\n Simultaneously`}\r\n              />\r\n              <div className=\"cta-one__text\">\r\n                <p>\r\n                  Personal Events, Birthdays, Weddings, Destination Events and\r\n                 in Just One Platform.\r\n                </p>\r\n              </div>\r\n              <ul className=\"list-unstyled cta-one__list\">\r\n                <li>\r\n                  <i className=\"fa fa-check-circle\"></i>\r\n                  Easy to Create in 5 Minutes\r\n                </li>\r\n                <li>\r\n                  <i className=\"fa fa-check-circle\"></i>\r\n                  Social Timeline for Events\r\n                </li>\r\n                <li>\r\n                  <i className=\"fa fa-check-circle\"></i>\r\n                  Customise and Invite at GO\r\n                </li>\r\n              </ul>\r\n              <a href=\"#\" className=\"thm-btn cta-one__btn\">\r\n                <span>Create Events</span>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CTAOne;\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\CTAThree.js",["375","376"],"import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport Cta3Shape1 from \"../assets/images/shapes/cta-three-bg-1-1.png\";\r\nimport Cta3Shape2 from \"../assets/images/shapes/cta-three-bg-1-2.png\";\r\n\r\nconst CTAThree = () => {\r\n  return (\r\n    <section className=\"cta-three\">\r\n      <img src={Cta3Shape1} className=\"cta-three__bg-1\" alt=\"\" />\r\n      <img src={Cta3Shape2} className=\"cta-three__bg-2\" alt=\"\" />\r\n      <Container className=\"text-center\">\r\n        <h3>\r\n          Download our App Today & <br /> Experience Endless Possibilities\r\n        </h3>\r\n        <p>and get started with a free 1 month trial for your business </p>\r\n        <div className=\"cta-three__btn-wrap\">\r\n          <a href=\"#\" className=\"cta-three__btn\">\r\n            <i className=\"fa fa-play\"></i>\r\n            <span>Get in</span>\r\n            <b>Google Play</b>\r\n          </a>\r\n          <a href=\"#\" className=\"cta-three__btn\">\r\n            <i className=\"fab fa-apple\"></i>\r\n            <span>Get in</span>\r\n            <b>Apple Store</b>\r\n          </a>\r\n        </div>\r\n      </Container>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CTAThree;\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\CTATwo.js",["377"],"import React from \"react\";\r\nimport BlockTitle from \"./BlockTitle\";\r\n\r\nimport CTAImage1 from \"../assets/images/resources/cta-2-moc-1.png\";\r\nimport CTAImage2 from \"../assets/images/resources/cta-2-moc-2.png\";\r\nimport CTAImage3 from \"../assets/images/resources/cta-2-moc-3.png\";\r\n\r\nconst CTATwo = () => {\r\n  return (\r\n    <section className=\"cta-two\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-6\">\r\n            <div className=\"cta-two__content\">\r\n              <BlockTitle\r\n                textAlign=\"left\"\r\n                paraText=\"Feature List\"\r\n                titleText={`Minvitd Providing You \\n Best Features`}\r\n              />\r\n              <div className=\"cta-two__icon-wrap\">\r\n                <div className=\"cta-two__icon-single\">\r\n                  <div className=\"cta-two__icon\">\r\n                    <i className=\"far fa-comment-alt\"></i>\r\n                  </div>\r\n                  <h3>\r\n                    In App <br /> Messages\r\n                  </h3>\r\n                </div>\r\n                <div className=\"cta-two__icon-single\">\r\n                  <div className=\"cta-two__icon\">\r\n                    <i className=\"fas fa-hashtag\"></i>\r\n                  </div>\r\n                  <h3>\r\n                    Social <br /> Media\r\n                  </h3>\r\n                </div>\r\n              </div>\r\n              <div className=\"cta-two__text\">\r\n                <p>\r\n                  Engage with your events members with ease, with social media like timeline and high-quality\r\n                  video conferencing. More features to be discover by you ;)\r\n                </p>\r\n              </div>\r\n              <a href=\"#\" className=\"thm-btn cta-two__btn\">\r\n                <span>Discover More</span>\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-6 \">\r\n            <div className=\"cta-two__images d-flex justify-content-end align-items-end flex-column\">\r\n              <img\r\n                src={CTAImage1}\r\n                className=\"wow fadeInUp\"\r\n                data-wow-duration=\"1500ms\"\r\n                alt=\"\"\r\n              />\r\n              <img\r\n                src={CTAImage2}\r\n                className=\"wow fadeInUp\"\r\n                data-wow-duration=\"1500ms\"\r\n                alt=\"\"\r\n              />\r\n              <img\r\n                src={CTAImage3}\r\n                className=\"wow fadeInUp\"\r\n                data-wow-duration=\"1500ms\"\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CTATwo;\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\Header.js",["378"],"import React, { useState, useEffect } from \"react\";\r\nimport NavLinks from \"./NavLinks\";\r\n\r\nimport LogoImage from \"../assets/images/logo-1-1.png\";\r\n\r\nconst HeaderHome = (props) => {\r\n  const [sticky, setSticky] = useState(false);\r\n\r\n  const handleScroll = () => {\r\n    if (window.scrollY > 70) {\r\n      setSticky(true);\r\n    } else if (window.scrollY < 70) {\r\n      setSticky(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    mobileMenu();\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  });\r\n\r\n  const mobileMenu = () => {\r\n    document\r\n      .querySelector(\".side-menu__toggler\")\r\n      .addEventListener(\"click\", function (e) {\r\n        document.querySelector(\".side-menu__block\").classList.toggle(\"active\");\r\n        e.preventDefault();\r\n      });\r\n\r\n    //Close Mobile Menu\r\n    let sideMenuCloser = document.querySelectorAll(\r\n      \".side-menu__close-btn, .side-menu__block-overlay\"\r\n    );\r\n\r\n    sideMenuCloser.forEach((sideMenuCloserBtn) => {\r\n      sideMenuCloserBtn.addEventListener(\"click\", function (e) {\r\n        document.querySelector(\".side-menu__block\").classList.remove(\"active\");\r\n        e.preventDefault();\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <header\r\n      className={`site-header-one stricky  ${props.extraClassName} ${\r\n        sticky === true ? \"stricky-fixed stricked-menu\" : \" \"\r\n      }`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <div className=\"site-header-one__logo\">\r\n          <a href=\"/\">\r\n            <img src={LogoImage} width=\"129\" alt=\"\" />\r\n          </a>\r\n          <span className=\"side-menu__toggler\">\r\n            <i className=\"fa fa-bars\"></i>\r\n          </span>\r\n        </div>\r\n        <div className=\"main-nav__main-navigation\">\r\n          <NavLinks />\r\n        </div>\r\n        <div className=\"main-nav__right\">\r\n          <a\r\n            href=\"#\"\r\n            className={`thm-btn ${props.btnClass}`}\r\n            onClick={() => {\r\n              props.toggleShowPopup(true);\r\n            }}\r\n          >\r\n            <span>SignUp/Login</span>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default HeaderHome;\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\FAQ.js",[],"C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\Footer.js",["379","380","381","382","383","384","385","386","387","388","389","390","391"],"import React from \"react\";\r\n\r\nimport FooterLogo from \"../assets/images/logo-1-1.png\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div>\r\n      \r\n\r\n      <footer className=\"site-footer\">\r\n        <div className=\"site-footer__upper\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-4\">\r\n                <div className=\"footer-widget footer-widget__about\">\r\n                  <a href=\"index.html\">\r\n                    <img src={FooterLogo} width=\"129\" alt=\"\" />\r\n                  </a>\r\n                  <p>\r\n                    Lorem Ipsum is simply dummy text the <br /> printing and\r\n                    setting industry. Lorm Ipsum\r\n                    <br /> has been the text ever.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-lg-5\">\r\n                <div className=\"footer-widget__links-wrap\">\r\n                  <div className=\"footer-widget\">\r\n                    <h3 className=\"footer-widget__title\">Company</h3>\r\n                    <ul className=\"list-unstyled footer-widget__links-list\">\r\n                      <li>\r\n                        <a href=\"#\">About</a>\r\n                      </li>\r\n                      <li>\r\n                        <a href=\"#\">Our Team</a>\r\n                      </li>\r\n                      <li>\r\n                        <a href=\"#\">Contact</a>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div className=\"footer-widget\">\r\n                    <h3 className=\"footer-widget__title\">Explore</h3>\r\n                    <ul className=\"list-unstyled footer-widget__links-list\">\r\n                      <li>\r\n                        <a href=\"#\">News</a>\r\n                      </li>\r\n                      <li>\r\n                        <a href=\"#\">Features</a>\r\n                      </li>\r\n                      <li>\r\n                        <a href=\"#\">Free Trial</a>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div className=\"footer-widget\">\r\n                    <h3 className=\"footer-widget__title\">Links</h3>\r\n                    <ul className=\"list-unstyled footer-widget__links-list\">\r\n                      <li>\r\n                        <a href=\"#\">Help</a>\r\n                      </li>\r\n                      <li>\r\n                        <a href=\"#\">Privacy Policy</a>\r\n                      </li>\r\n                      <li>\r\n                        <a href=\"#\">Terms of Use</a>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-3 d-flex align-items-center justify-content-xl-end justify-content-lg-end justify-content-md-center justify-content-sm-center\">\r\n                <div className=\"footer-widget\">\r\n                  <div className=\"footer-widget__social\">\r\n                    <a href=\"#\">\r\n                      <i className=\"fab fa-facebook-square\"></i>\r\n                    </a>\r\n                    <a href=\"#\">\r\n                      <i className=\"fab fa-twitter\"></i>\r\n                    </a>\r\n                    <a href=\"#\">\r\n                      <i className=\"fab fa-instagram\"></i>\r\n                    </a>\r\n                    <a href=\"#\">\r\n                      <i className=\"fab fa-pinterest-p\"></i>\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"site-footer__bottom\">\r\n          <div className=\"container text-center\">\r\n            <p>© copyright 2020- Mobilly Invite</p>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\PageHeader.js",[],"C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\PostPagination.js",["392","393","394","395","396"],"import React from \"react\";\r\n\r\nconst PostPagination = (props) => {\r\n  return (\r\n    <div className=\"post-pagination\">\r\n      <a href=\"#\">\r\n        <i className=\"far fa-angle-left\"></i>\r\n      </a>\r\n      <a href=\"#\" className=\"active\">\r\n        1\r\n      </a>\r\n      <a href=\"#\">2</a>\r\n      <a href=\"#\">3</a>\r\n      <a href=\"#\">\r\n        <i className=\"far fa-angle-right\"></i>\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostPagination;\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\Layout.js",["397","398","399","400"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link as ScrollLink, animateScroll as scroll } from \"react-scroll\";\r\n\r\nimport AppleTouch from \"../assets/images/favicons/apple-touch-icon.png\";\r\nimport Fevicon32 from \"../assets/images/favicons/favicon-32x32.png\";\r\nimport Fevicon16 from \"../assets/images/favicons/favicon-16x16.png\";\r\n\r\nconst Layout = (props) => {\r\n  const [scrollTop, setScrollTop] = useState(false);\r\n\r\n  const handleScrollTop = () => {\r\n    if (window.scrollY > 70) {\r\n      setScrollTop(true);\r\n    } else if (window.scrollY < 70) {\r\n      setScrollTop(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScrollTop);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScrollTop);\r\n    };\r\n  });\r\n  return (\r\n    <div>\r\n      <div className=\"page-wrapper\">{props.children}</div>\r\n\r\n      {scrollTop === true ? (\r\n        <ScrollLink\r\n          to=\"home\"\r\n          smooth={true}\r\n          duration={500}\r\n          className=\"scroll-to-top\"\r\n        >\r\n          <i className=\"fa fa-angle-up\"></i>\r\n        </ScrollLink>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\MobileMenu.js",["401","402","403","404","405"],"import React from \"react\";\r\nimport NavLinks from \"./NavLinks\";\r\nimport CloseBtn from \"../assets/images/shapes/close-1-1.png\";\r\n\r\nconst MobileMenu = () => {\r\n  return (\r\n    <div className=\"side-menu__block\">\r\n      <div className=\"side-menu__block-overlay custom-cursor__overlay\">\r\n        <div className=\"cursor\"></div>\r\n        <div className=\"cursor-follower\"></div>\r\n      </div>\r\n      <div className=\"side-menu__block-inner \">\r\n        <div className=\"side-menu__top justify-content-end\">\r\n          <a href=\"#\" className=\"side-menu__toggler side-menu__close-btn\">\r\n            <img src={CloseBtn} alt=\"\" />\r\n          </a>\r\n        </div>\r\n\r\n        <nav className=\"mobile-nav__container\">\r\n          <NavLinks />\r\n        </nav>\r\n        <div className=\"side-menu__sep\"></div>\r\n        <div className=\"side-menu__content\">\r\n          <p>\r\n            Lorem Ipsum is simply dummy text the printing and setting industry.\r\n            Lorm Ipsum has been the industry's stanard dummy text ever.\r\n          </p>\r\n          <p>\r\n            <a href=\"mailto:teammobillyinvite@gmail.com\">teammobillyinvite@gmail.com</a> <br />\r\n            <a href=\"tel:9348689987\">+91-9348689987</a>\r\n          </p>\r\n          <div className=\"side-menu__social\">\r\n            <a href=\"#\">\r\n              <i className=\"fab fa-facebook-square\"></i>\r\n            </a>\r\n            <a href=\"#\">\r\n              <i className=\"fab fa-twitter\"></i>\r\n            </a>\r\n            <a href=\"#\">\r\n              <i className=\"fab fa-instagram\"></i>\r\n            </a>\r\n            <a href=\"#\">\r\n              <i className=\"fab fa-pinterest-p\"></i>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MobileMenu;\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\NavLinks.js",["406","407","408","409"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Link as ScrollLink, animateScroll as scroll } from \"react-scroll\";\r\n\r\nconst NavLinks = () => {\r\n  const [dropdownStatus, setDropdownStatus] = useState(false);\r\n  const handleDropdownStatus = () => {\r\n    setDropdownStatus(!dropdownStatus);\r\n    console.log(dropdownStatus);\r\n  };\r\n  return (\r\n    <ul className=\"main-nav__navigation-box\">\r\n      <li>\r\n        <Link href=\"/\">\r\n          <a>Home</a>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <ScrollLink\r\n          activeClass=\"current\"\r\n          to=\"features\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={-70}\r\n          duration={500}\r\n        >\r\n          Features\r\n        </ScrollLink>\r\n      </li>\r\n      <li>\r\n        <ScrollLink\r\n          activeClass=\"current\"\r\n          to=\"pricing\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={-70}\r\n          duration={500}\r\n        >\r\n          Pricing\r\n        </ScrollLink>\r\n      </li>\r\n      <li>\r\n        <ScrollLink\r\n          activeClass=\"current\"\r\n          to=\"contactme\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={-70}\r\n          duration={500}\r\n        >\r\n          Contact\r\n        </ScrollLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\Pricing.js",["410","411","412","413","414","415"],"import React, { useState } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport BlockTitle from \"./BlockTitle\";\r\n\r\nconst Pricing = (props) => {\r\n  const [plan, setPlan] = useState(false);\r\n  return (\r\n    <section className=\"pricing-one\" id=\"pricing\">\r\n      <Container>\r\n        <BlockTitle\r\n          textAlign=\"center\"\r\n          paraText=\"Pricing Tables\"\r\n          titleText={`Choose Pricing Plans Which \\n Suits Your Needs`}\r\n        />\r\n        <ul\r\n          className=\"list-inline text-center switch-toggler-list\"\r\n          role=\"tablist\"\r\n          id=\"switch-toggle-tab\"\r\n        >\r\n          <li className={`month ${plan === false ? \"active\" : \"\"}`}>\r\n            <a\r\n              href=\"#\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                setPlan(false);\r\n              }}\r\n            >\r\n              Paid\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <label\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                setPlan(!plan);\r\n              }}\r\n              className={`switch ${plan === true ? \"off\" : \"on\"}`}\r\n            >\r\n              <span className=\"slider round\"></span>\r\n            </label>\r\n          </li>\r\n          <li className={`year ${plan === true ? \"active\" : \"\"}`}>\r\n            <a\r\n              href=\"#\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                setPlan(true);\r\n              }}\r\n            >\r\n              Free\r\n            </a>\r\n          </li>\r\n        </ul>\r\n        {plan === true ? (\r\n          <div id=\"yearly\">\r\n            <Row>\r\n              \r\n           \r\n             \r\n              <Col lg={4}>\r\n                <div className=\"pricing-one__single\">\r\n                  <div className=\"pricing-one__circle\"></div>\r\n                  <div className=\"pricing-one__inner\">\r\n                    <p>Free</p>\r\n                    <h3>₹0</h3>\r\n                    <ul className=\"list-unstyled pricing-one__list\">\r\n                      <li>Basic features</li>\r\n                      <li>Limit 15 Members</li>\r\n                      <li>Upgrade Option</li>\r\n                      <li>Limited Features</li>\r\n                    </ul>\r\n                    <a href=\"#\" className=\"thm-btn pricing-one__btn\">\r\n                      <span>Choose Plan</span>\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        ) : (\r\n          <div id=\"month\">\r\n            <Row>\r\n              <Col lg={4}>\r\n                <div className=\"pricing-one__single\">\r\n                  <div className=\"pricing-one__circle\"></div>\r\n                  <div className=\"pricing-one__inner\">\r\n                    <p>Bronze</p>\r\n                    <h3>₹200</h3>\r\n                    <ul className=\"list-unstyled pricing-one__list\">\r\n                      <li>Upto 50 Members</li>\r\n                      <li>Free Support</li>\r\n                      <li>Free In App Messages</li>\r\n                      <li>Full access</li>\r\n                    </ul>\r\n                    <a href=\"#\" className=\"thm-btn pricing-one__btn\">\r\n                      <span>Choose Plan</span>\r\n                    </a>\r\n\r\n                    <span>No hidden charges!</span>\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n              <Col lg={4}>\r\n                <div className=\"pricing-one__single\">\r\n                  <div className=\"pricing-one__circle\"></div>\r\n                  <div className=\"pricing-one__inner\">\r\n                    <p>Silver</p>\r\n                    <h3>₹500</h3>\r\n                    <ul className=\"list-unstyled pricing-one__list\">\r\n                      <li>Upto 200 Members</li>\r\n                      <li>Lifetime free support</li>\r\n                      <li>Multiple Events</li>\r\n                      <li>Full access</li>\r\n                    </ul>\r\n                    <a href=\"#\" className=\"thm-btn pricing-one__btn\">\r\n                      <span>Choose Plan</span>\r\n                    </a>\r\n\r\n                    <span>No hidden charges!</span>\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n              <Col lg={4}>\r\n                <div className=\"pricing-one__single\">\r\n                  <div className=\"pricing-one__circle\"></div>\r\n                  <div className=\"pricing-one__inner\">\r\n                    <p>Gold</p>\r\n                    <h3>₹999</h3>\r\n                    <ul className=\"list-unstyled pricing-one__list\">\r\n                      <li>Extra features</li>\r\n                      <li>Lifetime free support</li>\r\n                      <li>Super User</li>\r\n                      <li>Full access</li>\r\n                    </ul>\r\n                    <a href=\"#\" className=\"thm-btn pricing-one__btn\">\r\n                      <span>Choose Plan</span>\r\n                    </a>\r\n\r\n                    <span>No hidden charges!</span>\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        )}\r\n      </Container>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Pricing;\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\Services.js",[],"C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\Testimonials.js",["416","417","418"],"C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Redux\\DispatchFuncitons\\Eventfunctions.js",["419","420"],"import axios from \"axios\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport {\r\n  EVENTSAVED,\r\n  EVENTSAVEFAIL,\r\n  GOTMYEVENTS,\r\n  GETMYINVITAITONS,\r\n} from \"../Actions/EventActions\";\r\n\r\nimport history from \"../../Utils/History\";\r\nexport function saveEvent(edata) {\r\n  return (dispatch) => {\r\n    console.log(edata);\r\n    axios.post(url + \"event/create\", edata).then((res) => {\r\n      console.log(res);\r\n      history.push(\"/MyEvents/event-create-success/\" + res.data.Maincode);\r\n    });\r\n  };\r\n}\r\n\r\nexport function GetEvents() {\r\n  return (dispatch) => {\r\n    axios.get(url + \"event/getamyEvents\").then((res) => {\r\n      dispatch({\r\n        type: GOTMYEVENTS,\r\n        payload: res.data,\r\n      });\r\n    });\r\n  };\r\n}\r\n\r\nexport function GetInvitations() {\r\n  return (dispatch) => {\r\n    axios.get(url + \"event/getmyInvitaion\").then((res) => {\r\n      dispatch({\r\n        type: GETMYINVITAITONS,\r\n        payload: res.data,\r\n      });\r\n      console.log(res);\r\n    });\r\n  };\r\n}\r\nexport function rsvp_event(id, status, by) {\r\n  return (dispatch) => {\r\n    axios\r\n      .post(url + \"event/rsvp\", { id: id, status: status, by: by })\r\n      .then((res) => {\r\n        dispatch(GetInvitations());\r\n        console.log(res);\r\n      });\r\n  };\r\n}\r\nexport function like_event(id, status, by) {\r\n  return (dispatch) => {\r\n    axios\r\n      .post(url + \"event/like\", { id: id, status: status, by: by })\r\n      .then((res) => {\r\n        dispatch(GetInvitations());\r\n        console.log(res);\r\n      });\r\n  };\r\n}\r\nexport function comment_event(id, status, by) {\r\n  return (dispatch) => {\r\n    axios\r\n      .post(url + \"event/comment\", { id: id, status: status, by: by })\r\n      .then((res) => {\r\n        dispatch(GetInvitations());\r\n        console.log(res);\r\n      });\r\n  };\r\n}\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Redux\\DispatchFuncitons\\AuthFunctions.js",["421"],"import {\r\n  LOGINSUCCESS,\r\n  LOGINFAIL,\r\n  GOTOTP,\r\n  OPTEXPIRED,\r\n  OTPVERIFIED,\r\n  SAVEUSER,\r\n  LOGOUT,\r\n} from \"../Actions/AuthActions\";\r\nimport setAuthToken from \"../../Utils/Login\";\r\nimport axios from \"axios\";\r\nimport { url } from \"../../Utils/Config\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport history from \"../../Utils/History\";\r\nexport function getopt(Phone) {\r\n  return (dispatch) => {\r\n    const userData = {\r\n      Phone,\r\n    };\r\n    if (Phone !== \"\") {\r\n      axios.post(url + \"auth/send-otp\", userData).then((res) => {\r\n        console.log(res);\r\n        if (res.data.status === \"pending\") {\r\n          dispatch({\r\n            type: GOTOTP,\r\n          });\r\n        } else {\r\n        }\r\n      });\r\n    }\r\n  };\r\n}\r\nexport function verifyotp(Phone, code) {\r\n  return async (dispatch) => {\r\n    if (code !== \"\") {\r\n      await axios\r\n        .post(url + \"auth/verify-otp\", { Phone, code })\r\n        .then(async (res) => {\r\n          await console.log(res);\r\n          if (\r\n            res.data.status === \"checked\" &&\r\n            res.data.response === \"approved\"\r\n          ) {\r\n            console.log(res.data.data);\r\n            dispatch({\r\n              type: OTPVERIFIED,\r\n            });\r\n          } else {\r\n            dispatch({\r\n              type: OPTEXPIRED,\r\n            });\r\n          }\r\n        });\r\n    }\r\n  };\r\n}\r\nexport function loginuser(Phone) {\r\n  return (dispatch) => {\r\n    const userData = {\r\n      Phone,\r\n    };\r\n    if (Phone !== \"\") {\r\n      axios\r\n        .post(url + \"auth/login\", userData)\r\n        .then((res) => {\r\n          if (res.data.token) {\r\n            const token = res.data.token;\r\n            const decoded = jwt_decode(token);\r\n            setAuthToken(token);\r\n            dispatch({\r\n              type: LOGINSUCCESS,\r\n              payload: res.data,\r\n            });\r\n            history.push(\"/home\");\r\n          } else if (res.data.status === \"-1\") {\r\n            dispatch({\r\n              type: LOGINFAIL,\r\n              payload: res.data.message,\r\n            });\r\n          } else if (res.data.details[0].message) {\r\n            dispatch({\r\n              type: LOGINFAIL,\r\n              payload: res.data.details[0].message,\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    } else {\r\n      alert(\"Auth falied\");\r\n    }\r\n  };\r\n}\r\nexport function logout(Phone) {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: LOGOUT,\r\n    });\r\n    history.push(\"/\");\r\n  };\r\n}\r\nexport function saveuserinfo(Name, Gender, DOB, Image, nurl) {\r\n  return (dispatch) => {\r\n    console.log(\"/\" + nurl);\r\n    const userData = {\r\n      Name: Name,\r\n      Gender: Gender,\r\n      DOB: DOB,\r\n      Image: Image,\r\n    };\r\n    if (Name !== \"\" && Gender !== \"\") {\r\n      axios\r\n        .post(url + \"auth/userinfo\", userData)\r\n        .then((res) => {\r\n          if (res.data.user) {\r\n            console.log(res.data.user);\r\n            dispatch({\r\n              type: SAVEUSER,\r\n              payload: res.data.user,\r\n            });\r\n            if (nurl !== \"\") {\r\n              history.push(\"/\" + nurl);\r\n            }\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n}\r\nexport function getuserdata(Phone) {\r\n  const userData = {\r\n    Phone: Phone,\r\n  };\r\n  if (Phone !== \"\") {\r\n    axios\r\n      .get(url + \"auth/userinfo\", userData)\r\n      .then((res) => {\r\n        if (res.data.user) {\r\n          console.log(res.data.user);\r\n          return res.data.user;\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        return { err: \"error 404\" };\r\n      });\r\n  }\r\n}\r\nexport function checktoken() {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(url + \"auth/verify\")\r\n      .then((res) => {\r\n        if (res.data.status !== \"valid\") {\r\n          dispatch({\r\n            type: LOGOUT,\r\n          });\r\n          history.push(\"\");\r\n        } else {\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        dispatch({\r\n          type: LOGOUT,\r\n        });\r\n      });\r\n  };\r\n}\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\LandingPage\\VideoOne.js",["422"],"import React, { useState } from \"react\";\r\nimport ModalVideo from \"react-modal-video\";\r\nimport BlockTitle from \"./BlockTitle\";\r\nimport videoBG from \"../assets/images/resources/video-bg-1-1.jpg\";\r\n\r\nconst VideoOne = () => {\r\n  const [open, setOpen] = useState({\r\n    isOpen: false,\r\n  });\r\n  const openModal = (e) => {\r\n    e.preventDefault();\r\n    setOpen({\r\n      isOpen: true,\r\n    });\r\n  };\r\n  return (\r\n    <section className=\"video-one\">\r\n      <div\r\n        className=\"container-fluid\"\r\n        style={{ backgroundImage: `url(${videoBG})` }}\r\n      >\r\n        <div\r\n          className=\"video-one__content wow fadeInLeft\"\r\n          data-wow-duration=\"1500ms\"\r\n        >\r\n          <BlockTitle\r\n            textAlign=\"left\"\r\n            paraText=\"How it Works\"\r\n            titleText={`Watch Now \\n Our Video \\n For More`}\r\n          />\r\n        </div>\r\n        <ModalVideo\r\n          channel=\"youtube\"\r\n          isOpen={open.isOpen}\r\n          videoId=\"USccSZnS8MQ\"\r\n          onClose={() => setOpen({ isOpen: false })}\r\n        />\r\n        <a href=\"#\" onClick={openModal} className=\"video-one__btn video-popup\">\r\n          <i className=\"fa fa-play\"></i>\r\n        </a>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default VideoOne;\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Redux\\Reducers\\AuthReducer.js",[],"C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Redux\\Reducers\\EventReducer.js",["423"],"import { reactLocalStorage } from \"reactjs-localstorage\";\r\n\r\nconst initialState = {\r\n  ALBUM: [],\r\n  STORY: [],\r\n  myEvents: [],\r\n  myInvitations: [],\r\n};\r\n\r\nconst Eventdata = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SAVEALBUM\":\r\n      return {\r\n        ...state,\r\n        ALBUM: action.payload,\r\n      };\r\n    case \"DELETEALBUM\":\r\n      return {\r\n        ...state,\r\n        ALBUM: [],\r\n      };\r\n    case \"SAVESTORY\":\r\n      return {\r\n        ...state,\r\n        STORY: action.payload,\r\n      };\r\n    case \"DELETESTORY\":\r\n      return {\r\n        ...state,\r\n        STORY: [],\r\n      };\r\n    case \"GOTMYEVENTS\":\r\n      let datacopy = [];\r\n      let tracker = [];\r\n      let mcindex = 0;\r\n      //get similar events in single array\r\n      console.log(action.payload);\r\n      for (let i = 0; i < action.payload.length; i++) {\r\n        if (tracker.length === 0) {\r\n          datacopy[0] = [action.payload[i]];\r\n          tracker.push(action.payload[i].MainCode);\r\n        } else {\r\n          mcindex = tracker.includes(action.payload[i].MainCode);\r\n          if (mcindex === true) {\r\n            let key = tracker.findIndex(\r\n              (track) => track === action.payload[i].MainCode\r\n            );\r\n            console.log(key);\r\n            datacopy[key] = [...datacopy[key], action.payload[i]];\r\n          } else {\r\n            tracker.push(action.payload[i].MainCode);\r\n            datacopy.push([action.payload[i]]);\r\n          }\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        myEvents: datacopy,\r\n      };\r\n    case \"GETMYINVITAITONS\": {\r\n      let datacopy = [];\r\n      let tracker = [];\r\n      let mcindex = 0;\r\n      //get similar events in single array\r\n      console.log(action.payload);\r\n      for (let i = 0; i < action.payload.length; i++) {\r\n        if (tracker.length === 0) {\r\n          datacopy[0] = [action.payload[i]];\r\n          tracker.push(action.payload[i].MainCode);\r\n        } else {\r\n          mcindex = tracker.includes(action.payload[i].MainCode);\r\n          if (mcindex === true) {\r\n            let key = tracker.findIndex(\r\n              (track) => track === action.payload[i].MainCode\r\n            );\r\n            console.log(key);\r\n            datacopy[key] = [...datacopy[key], action.payload[i]];\r\n          } else {\r\n            tracker.push(action.payload[i].MainCode);\r\n            datacopy.push([action.payload[i]]);\r\n          }\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        myInvitations: datacopy,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default Eventdata;\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Events\\Eventlist.js",["424","425","426","427","428","429","430"],"import React, { useEffect, useState } from \"react\";\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\nimport NoInv from \"../../Assets/NoInvitation.svg\";\r\nimport \"./Eventlist.css\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport LanguageIcon from \"@material-ui/icons/Language\";\r\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\r\nimport NotificationsOffIcon from \"@material-ui/icons/NotificationsOff\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport history from \"../../Utils/History\";\r\nexport default function EventList(props) {\r\n  const [data, setData] = useState(props.data);\r\n  useEffect(async () => {\r\n    console.log(props.data);\r\n    await setData(props.data);\r\n  }, [props.data]);\r\n\r\n  if (props.data !== undefined && props.data.length > 0) {\r\n  } else {\r\n    return <img src={NoInv} className=\"nodata\" />;\r\n  }\r\n  return (\r\n    <Grid container spacing={0}>\r\n      {data.map((inv, index) => (\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={6}\r\n          className=\"InvitationCard\"\r\n          key={\"invContainer\" + index}\r\n        >\r\n          <img src={inv[0].file} className=\"inv-img\" />\r\n          <NotificationsNoneIcon className=\"card-button Notifyme t-white\" />\r\n          <div className=\"bottom-bar\">\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={8}>\r\n                <Grid container spacing={0} className=\"event-info\">\r\n                  <Grid item xs={12} className=\"fs-bold t-white\">\r\n                    {inv[0].InvId.Type}\r\n                  </Grid>\r\n                  <Grid item xs={12} className=\"fs-small t-white\">\r\n                    {inv[0].Date} {inv[0].Time}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                {/* <button\r\n                  className=\"card-button rsvp-button \"\r\n                  //   onClick={() => {\r\n                  //     history.push(\"/inv/\" + \"RSVP\" + \"/\" + index);\r\n                  //   }}\r\n                >\r\n                  RSVP\r\n                </button> */}\r\n              </Grid>\r\n              <Grid item xs={2} className=\"tac\">\r\n                {inv[0].VenueType === \"Online\" ||\r\n                inv[0].VenueType === \"Both\" ? (\r\n                  <LanguageIcon className=\"t-white mt-5px  \" />\r\n                ) : (\r\n                  <LocationOnIcon className=\"t-white mt-5px \" />\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n      ))}\r\n      {/* <Grid item xs={12} sm={6} className=\"InvitationCard\">\r\n        <img src={inv[0].file} className=\"inv-img\" />\r\n        <NotificationsIcon className=\"card-button Notifyme\" />\r\n        <div className=\"bootom-bar\">\r\n          <div className=\"fl-left\">\r\n            <Grid container spacing={0} className=\"event-info\">\r\n              <Grid item xs={12} className=\"fs-bold l-blue-t\">\r\n                {inv[0].InvId.Type}\r\n              </Grid>\r\n              <Grid item xs={12} className=\"fs-small\">\r\n                {inv[0].Date} {inv[0].Time}\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n          <div className=\"fl-right\">\r\n            <button\r\n              className=\"card-button rsvp-button \"\r\n              onClick={() => {\r\n                history.push(\"/inv/\" + \"RSVP\" + \"/\" + index);\r\n              }}\r\n            >\r\n              RSVP\r\n            </button>\r\n            <LanguageIcon />\r\n            <LocationOnIcon />\r\n          </div>\r\n        </div>\r\n      </Grid> */}\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\AddEvent\\AddParticipants\\AddParticipants.js",["431","432","433","434","435","436","437","438","439","440","441"],"import React, { useEffect, useState } from \"react\";\r\nimport Access from \"../../../Assets/AddAccess.svg\";\r\nimport \"../AddEvent.css\";\r\nimport { Grid, Switch } from \"@material-ui/core\";\r\nimport readXlsxFile from \"read-excel-file\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { saveEvent } from \"../../../Redux/DispatchFuncitons/Eventfunctions\";\r\nimport { uploadString } from \"../../../Utils/FileUpload_Download\";\r\nimport EventNameBox from \"../CreateEvent/EventNameBox\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nexport default function AddParticipants(props) {\r\n  const dispatch = useDispatch();\r\n  const Eventdata = useSelector((state) => state.Eventdata);\r\n\r\n  console.log(Eventdata);\r\n  let supported = \"\";\r\n  let attribute = [\"name\", \"tel\"];\r\n  const opts = { multiple: true };\r\n  let Eventscpy = [...props.Events];\r\n  const [isMobile, SetIsMobile] = useState(false);\r\n  const [selectedEvent, setselectedEvent] = useState(0);\r\n  const [forallparticipants, setforallparticipants] = useState(true);\r\n  const [save, Setsave] = useState(false);\r\n  let Albumcpy = [];\r\n  let Storycpy = [];\r\n  useEffect(async () => {\r\n    supported = \"contacts\" in navigator && \"ContactsManager\" in window;\r\n    console.log(supported);\r\n    if (supported === true) {\r\n      SetIsMobile(true);\r\n    } else {\r\n      SetIsMobile(false);\r\n    }\r\n  }, []);\r\n\r\n  const openContactPicker = async () => {\r\n    try {\r\n      let list = [];\r\n      let number = \"\";\r\n      const contacts = await navigator.contacts.select(attribute, opts);\r\n      console.log(contacts);\r\n      contacts.map(async (contact) => {\r\n        if (contact.tel.length > 1) {\r\n          contact.tel.map(async (numb) => {\r\n            number = numb.split(\" \");\r\n            if (number && number.length > 1) {\r\n              number = number.join(\"\");\r\n            } else {\r\n            }\r\n            await list.push(number);\r\n          });\r\n        } else {\r\n          await list.push(contact.tel[0]);\r\n        }\r\n      });\r\n      console.log(list);\r\n      await saverecipeients(list, \"Number\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  function readexcel(file) {\r\n    let allcontacts = [];\r\n    let row = [];\r\n    readXlsxFile(file).then(async (rows) => {\r\n      await rows.map((row) => {\r\n        allcontacts.push(row[0]);\r\n      });\r\n    });\r\n    console.log(allcontacts);\r\n    saverecipeients(allcontacts, \"Number\");\r\n  }\r\n\r\n  const saverecipeients = async (data, type) => {\r\n    let EventCpy = [...props.Events];\r\n    if (forallparticipants === true) {\r\n      await EventCpy.map((eve) => {\r\n        eve.Participants = data;\r\n        eve.authtype = type;\r\n      });\r\n      console.log(EventCpy);\r\n    } else {\r\n      await EventCpy.map((eve, index) => {\r\n        if (index === selectedEvent) {\r\n          eve.Participants = data;\r\n          eve.authtype = type;\r\n        }\r\n      });\r\n      console.log(EventCpy);\r\n    }\r\n    if (selectedEvent + 1 < EventCpy.length) {\r\n      setselectedEvent(selectedEvent + 1);\r\n    }\r\n\r\n    await props.setEvents(EventCpy);\r\n  };\r\n\r\n  const create_event = async () => {\r\n    debugger;\r\n    await Setsave(true);\r\n    let uniqueurl =\r\n      props.Type + Math.floor(100000 + Math.random() * 900000) + \"/\";\r\n\r\n    let EventCpy = [...props.Events];\r\n    let MainCode = \"\";\r\n    for (let i = 0; i < EventCpy.length; i++) {\r\n      //remove this code when adding \"use code insted button\"\r\n      if (EventCpy[i].Participants.length === 0) {\r\n        return false;\r\n      }\r\n      let furl =\r\n        uniqueurl +\r\n        \"Event_image/\" +\r\n        i +\r\n        EventCpy[i].Name +\r\n        \".\" +\r\n        EventCpy[i].filetype;\r\n\r\n      await console.log(furl);\r\n      let url = await uploadString(EventCpy[i].file, furl);\r\n      await console.log(url);\r\n      EventCpy[i].file = url;\r\n\r\n      // if (EventCpy[i].Schedule.length > 0) {\r\n      //   for (let j = 0; j < EventCpy[i].Schedule.length; j++) {\r\n      //     let shurl =\r\n      //       uniqueurl +\r\n      //       \"Schedule/\" +\r\n      //       j +\r\n      //       EventCpy[i].Name +\r\n      //       \".\" +\r\n      //       EventCpy[i].Schedule[j].filetype;\r\n\r\n      //     let url = await uploadString(EventCpy[i].Schedule[j].file, shurl);\r\n      //     EventCpy[i].Schedule[i].file = url;\r\n      //   }\r\n\r\n      //   console.log(EventCpy[i].Schedule);\r\n      // }\r\n    }\r\n\r\n    await props.setEvents(EventCpy);\r\n\r\n    if (Eventdata && Eventdata.ALBUM && Eventdata.ALBUM.length > 0) {\r\n      Albumcpy = [];\r\n      for (let i = 0; i < Eventdata.ALBUM.length; i++) {\r\n        let shurl =\r\n          uniqueurl +\r\n          \"Album/\" +\r\n          i +\r\n          EventCpy[i].Name +\r\n          \".\" +\r\n          Eventdata.ALBUM[i].type;\r\n\r\n        let url = await uploadString(Eventdata.ALBUM[i].data, shurl);\r\n        Eventdata.ALBUM[i].file = url;\r\n        await Albumcpy.push({ file: url, type: Eventdata.ALBUM[i].type });\r\n      }\r\n      console.log(Albumcpy);\r\n    }\r\n\r\n    if (Eventdata && Eventdata.STORY && Eventdata.STORY.length > 0) {\r\n      Storycpy = [];\r\n      for (let i = 0; i < Eventdata.STORY.length; i++) {\r\n        let shurl =\r\n          uniqueurl +\r\n          \"Story/\" +\r\n          i +\r\n          EventCpy[i].Name +\r\n          \".\" +\r\n          Eventdata.STORY[i].type;\r\n\r\n        let url = await uploadString(Eventdata.STORY[i].file, shurl);\r\n        Eventdata.STORY[i].file = url;\r\n        await Storycpy.push({\r\n          ...Eventdata.STORY[i],\r\n          file: url,\r\n          type: Eventdata.STORY[i].type,\r\n        });\r\n      }\r\n      console.log(Storycpy);\r\n    }\r\n    console.log({\r\n      Type: props.Type,\r\n      Events: EventCpy,\r\n      Album: Albumcpy,\r\n      story: Storycpy,\r\n    });\r\n    console.log(\"dispatching\");\r\n    await dispatch(\r\n      saveEvent({\r\n        Type: props.Type,\r\n        Events: EventCpy,\r\n        Album: Albumcpy,\r\n        Story: Storycpy,\r\n      })\r\n    );\r\n  };\r\n\r\n  function SingleEventParticipants() {\r\n    return (\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12} sm={12}>\r\n          <EventNameBox\r\n            data={props.Events}\r\n            setEvents={props.setEvents}\r\n            SelectEvent={setselectedEvent}\r\n            SelectedEvent={selectedEvent}\r\n            className=\"w-100\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={8} sm={8}>\r\n          {/* <FormControl className=\"w-100\">\r\n            <InputLabel id=\"demo-simple-select-label\">CopyFrom</InputLabel>\r\n            <Select labelId=\"demo-simple-select-label\" id=\"demo-simple-select\">\r\n              {props.Events.map((eve, index) => {\r\n                eve.Participants.length > 0 ? (\r\n                  <MenuItem\r\n                    value={eve.Name}\r\n                    onClick={() => {\r\n                      copyfromevent(selectedEvent, index);\r\n                    }}\r\n                  >\r\n                    eve.Name\r\n                  </MenuItem>\r\n                ) : (\r\n                  <></>\r\n                );\r\n              })}\r\n            </Select>\r\n          </FormControl> */}\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={12}>\r\n          <button\r\n            className=\"custom-file-upload\"\r\n            style={{ display: isMobile === true ? \"block\" : \"none\" }}\r\n            onClick={() => {\r\n              openContactPicker();\r\n            }}\r\n          >\r\n            PhoneBook\r\n          </button>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12}>\r\n          <label\r\n            htmlFor=\"input\"\r\n            className=\"excel-file-upload\"\r\n            style={{ display: isMobile === false ? \"block\" : \"none\" }}\r\n          >\r\n            Upload Excel\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            id=\"input\"\r\n            className=\"upload-excel\"\r\n            onChange={(e) => {\r\n              readexcel(e.target.files[0]);\r\n            }}\r\n            style={{ display: isMobile === false ? \"block\" : \"none\" }}\r\n            multiple={false}\r\n            accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={0}>\r\n      {save === true ? <CircularProgress className=\"Progress\" /> : <></>}\r\n      <img src={Access} className=\"access-logo mt-10px\" />\r\n      <b className=\"tac w-100 b mt-10px\">\r\n        Give access to your guest or Upload CSV with for group access\r\n      </b>\r\n      <h2>\r\n        {/* Add Guest List (\r\n        {forallparticipants === true\r\n          ? \"Single Guest List for all events\"\r\n          : \"One  Guest List Per Event\"}\r\n        ) */}\r\n        {/* <Switch\r\n          checked={forallparticipants}\r\n          onChange={() => {\r\n            setforallparticipants(!forallparticipants);\r\n          }}\r\n          name=\"checkedB\"\r\n          color=\"primary\"\r\n        /> */}\r\n      </h2>\r\n\r\n      {forallparticipants === true ? (\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={12} sm={12}>\r\n            <button\r\n              className=\"custom-file-upload mt-10px\"\r\n              style={{ display: isMobile === true ? \"block\" : \"none\" }}\r\n              onClick={() => {\r\n                openContactPicker();\r\n              }}\r\n            >\r\n              PhoneBook\r\n            </button>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n            <label\r\n              for=\"input\"\r\n              className=\"excel-file-upload mt-10px\"\r\n              style={{ display: isMobile === false ? \"block\" : \"none\" }}\r\n            >\r\n              Upload Excel\r\n            </label>\r\n            <input\r\n              type=\"file\"\r\n              id=\"input\"\r\n              className=\"upload-excel mt-10px\"\r\n              onChange={(e) => {\r\n                readexcel(e.target.files[0]);\r\n              }}\r\n              style={{ display: isMobile === false ? \"block\" : \"none\" }}\r\n              multiple={false}\r\n              accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        <SingleEventParticipants />\r\n      )}\r\n\r\n      {/* <button\r\n        className=\"dark-file-upload\"\r\n        onClick={() => {\r\n          saverecipeients([], \"code\");\r\n        }}\r\n      >\r\n        Skip and use Code for Invitation Instead\r\n      </button> */}\r\n      <Grid item xs={6}>\r\n        <button\r\n          className=\"back mt-10px\"\r\n          onClick={() => {\r\n            props.handleBack();\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <button\r\n          className=\"next mt-10px\"\r\n          onClick={() => {\r\n            create_event();\r\n          }}\r\n        >\r\n          Next\r\n        </button>\r\n      </Grid>\r\n      <p className=\"w-100 tac mt-10px\">\r\n        <b>\r\n          <u>Note</u>\r\n        </b>\r\n        :{\"CSV can only be accessed by using website \"}\r\n        {/* {isMobile === true\r\n          ? \"Select your Invitees. \"\r\n          : \"Upload list of Invitees-watsapp numbers with their country code. \"}\r\n        Or <u>Generate Event Code</u> to Send invitation  */}\r\n      </p>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\AddEvent\\CreateEvent\\CreateEvent.js",["442","443","444","445","446","447","448","449","450","451","452","453","454"],"import React, { useCallback, useState, useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  InputLabel,\r\n  Select,\r\n  FormControl,\r\n  Modal,\r\n} from \"@material-ui/core\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\r\nimport EventNameBox from \"./EventNameBox\";\r\nimport AddImg from \"../../../Assets/AddImage.svg\";\r\nimport Uploading from \"../../../Assets/Uploading.svg\";\r\nimport EventDetails from \"./EventDetails\";\r\nimport ImageSelectionModal from \"./ImageSelectionModal\";\r\nimport \"./CreateEvent.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nexport default function CreateEvent(props) {\r\n  const useStyles = makeStyles((theme) => ({\r\n    notchedOutline: {\r\n      borderWidth: \"3px\",\r\n      borderColor: \"#3897f1 !important\",\r\n      borderRadius: \"150px\",\r\n      color: \"#3897f1 !important\",\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const [disablesave, setDisablesave] = useState(false);\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    // Do something with the files\r\n  }, []);\r\n\r\n  const [erroring, seterroring] = useState(false);\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    multiple: false,\r\n    accept: \"image/jpeg, image/png, image/jpg, video/mp4 \",\r\n  });\r\n  const [showPopup, toggleShowPopup] = useState(false);\r\n  const [url, seturl] = useState(AddImg);\r\n  useEffect(() => {\r\n    if (\r\n      props.Events[props.SelectedEvent] !== undefined &&\r\n      props.Events[props.SelectedEvent].file !== \"\"\r\n    ) {\r\n      if (props.Events[props.SelectedEvent].file === \"uploading\") {\r\n        seturl(Uploading);\r\n      } else {\r\n        seturl(props.Events[props.SelectedEvent].file);\r\n      }\r\n    } else {\r\n      seturl(AddImg);\r\n    }\r\n  }, [\r\n    props.Events[props.SelectedEvent] !== undefined\r\n      ? props.Events[props.SelectedEvent].file\r\n      : \"\",\r\n  ]);\r\n  return (\r\n    <>\r\n      <Grid container spacing={0} className=\"m-0 p-0\">\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl\r\n            variant=\"outlined\"\r\n            className=\"w-100-p m-b-25px\"\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              classes: {\r\n                notchedOutline: classes.notchedOutline,\r\n              },\r\n            }}\r\n          >\r\n            <span className=\"label\">Type</span>\r\n            <Select\r\n              native\r\n              value={props.Type}\r\n              onChange={props.handleChange}\r\n              error={erroring}\r\n              className=\"selectboxblue\"\r\n            >\r\n              <option value=\"Wedding\">Wedding</option>\r\n              <option value=\"Birthday\">Birthday</option>\r\n              <option value=\"Wedding Anniversary\">Wedding Anniversary</option>\r\n              <option value=\"Get Together\">Get Together</option>\r\n              <option value=\"Formal Event\">Formal Event</option>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <div className=\"noe\">\r\n            <Grid container spacing={0}>\r\n              {\" \"}\r\n              <Grid item xs={false} sm={1} md={2} />\r\n              <Grid item xs={6} sm={6} md={6} className=\"tal p-10px\">\r\n                Number Of Events\r\n              </Grid>\r\n              <Grid item xs={6} sm={5} md={4}>\r\n                <Grid container spacing={0}>\r\n                  <Grid item xs={12}>\r\n                    <div className=\"Cirlce tar  fl\">\r\n                      <AddCircleOutlineIcon\r\n                        className=\"l-blue-t\"\r\n                        fontSize=\"large\"\r\n                        onClick={() => {\r\n                          props.addAnEvent();\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"white box  fl\">{props.Events.length}</div>\r\n                    <div className=\"Cirlce tal  fl\">\r\n                      <RemoveCircleOutlineIcon\r\n                        className=\"l-blue-t\"\r\n                        fontSize=\"large\"\r\n                        onClick={() => {\r\n                          props.removeAnEvent();\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n      <div className=\"event-Names m-b-25px\">\r\n        <EventNameBox\r\n          data={props.Events}\r\n          setEvents={props.setEvents}\r\n          SelectEvent={props.SelectEvent}\r\n          SelectedEvent={props.SelectedEvent}\r\n          checkIfEventEmpty={props.checkIfEventEmpty}\r\n        />\r\n      </div>\r\n\r\n      <Grid item xs={12}>\r\n        <EventDetails\r\n          Events={props.Events}\r\n          setEvents={props.setEvents}\r\n          SelectedEvent={props.SelectedEvent}\r\n          SelectEvent={props.SelectEvent}\r\n          checkIfEventEmpty={props.checkIfEventEmpty}\r\n          setDisablesave={setDisablesave}\r\n          disablesave={disablesave}\r\n          albumdata={props.albumdata}\r\n          setStory={props.setStory}\r\n          setalbumdata={props.setalbumdata}\r\n          Story={props.Story}\r\n          template={props.template}\r\n          handleNext={props.handleNext}\r\n          Type={props.Type}\r\n          seterroring={seterroring}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <button\r\n          className={\r\n            disablesave === false ? \"save-events disabled\" : \"save-events \"\r\n          }\r\n          onClick={() => {\r\n            if (disablesave === true) {\r\n              props.handleNext();\r\n            }\r\n          }}\r\n        >\r\n          Next\r\n        </button>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Plan\\Plan.js",["455","456","457","458","459"],"import React, { useState } from \"react\";\r\nimport \"./Plan.css\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\r\nfunction Plancard(props) {\r\n  return (\r\n    <Paper\r\n      className=\"plancard\"\r\n      onClick={() => {\r\n        props.selectplan(props.plani);\r\n      }}\r\n    >\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12} className={\"upperplan \" + props.plan}>\r\n          <Grid xs={12} className=\"tac t-white pfsmall\">\r\n            {props.plan}\r\n          </Grid>\r\n          <Grid xs={12} className=\"tac t-white pflarge\">\r\n            {props.invites}\r\n            <br />\r\n            Invites\r\n          </Grid>\r\n          <Grid xs={12} className=\"tac t-white pfmed\">\r\n            {props.cost}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} className=\"lowerplan\">\r\n          <ul class=\"a\">\r\n            <li>Multiple Events</li>\r\n            <li>Albums</li>\r\n            <li>Schedule</li>\r\n            <li>Ousr Story</li>\r\n            <li>Location</li>\r\n            <li>Multiple Admin</li>\r\n          </ul>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\nexport default function Plan(props) {\r\n  const [selectedplan, selectplan] = useState(0);\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid item xs={12}>\r\n        <div className=\"planheadbottom\"></div>\r\n        <div className=\"planheadtop\"></div>\r\n      </Grid>\r\n      <Grid item xs={12} className=\"plancardholder\">\r\n        <Plancard\r\n          plan={\"Free\"}\r\n          selectplan={selectplan}\r\n          cost={\"RS 00 / Month\"}\r\n          invites={\"50\"}\r\n          plani={0}\r\n        />\r\n\r\n        <Plancard\r\n          plan={\"Bronze\"}\r\n          selectplan={selectplan}\r\n          cost={\"RS 99 / Month\"}\r\n          invites={\"200\"}\r\n          plani={1}\r\n        />\r\n\r\n        <Plancard\r\n          plan={\"Silver\"}\r\n          selectplan={selectplan}\r\n          cost={\"RS 299 / Month\"}\r\n          invites={\"400\"}\r\n          plani={2}\r\n        />\r\n\r\n        <Plancard\r\n          plan={\"Gold\"}\r\n          selectplan={selectplan}\r\n          cost={\"RS 499 / Month\"}\r\n          invites={\"400+\"}\r\n          plani={3}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Paper className=\"planpayment\">\r\n          <Grid container spacing={0}>\r\n            <Grid item xs={9}>\r\n              Plan Amount\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              {selectedplan === 0 ? \"Rs 00\" : <></>}\r\n              {selectedplan === 1 ? \"Rs 99\" : <></>}\r\n              {selectedplan === 2 ? \"Rs 299\" : <></>}\r\n              {selectedplan === 3 ? \"Rs 499\" : <></>}\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Paper className=\"planpayment\">\r\n          <Grid container spacing={0}>\r\n            <Grid item xs={9}>\r\n              Extra Template\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              Rs 00\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Paper className=\"planpayment\">\r\n          <Grid container spacing={0}>\r\n            <Grid item xs={9}>\r\n              Coupon Discount\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              Rs 00\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Paper className=\"planpayment\">\r\n          <Grid container spacing={0}>\r\n            <Grid item xs={9}>\r\n              Total Amount\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <b>\r\n                <u>\r\n                  {selectedplan === 0 ? \"Rs 00\" : <></>}\r\n                  {selectedplan === 1 ? \"Rs 99\" : <></>}\r\n                  {selectedplan === 2 ? \"Rs 299\" : <></>}\r\n                  {selectedplan === 3 ? \"Rs 499\" : <></>}\r\n                </u>\r\n              </b>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={12} className=\"m-7px\">\r\n        <button\r\n          className=\"custom-file-upload\"\r\n          onClick={() => props.handleNext()}\r\n        >\r\n          Make Payment\r\n        </button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\AddEvent\\Stepper\\Stepper.js",["460"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return [\"\", \"\", \"\"];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return \"\";\r\n    case 1:\r\n      return \"\";\r\n    case 2:\r\n      return \"\";\r\n    default:\r\n      return \"\";\r\n  }\r\n}\r\n\r\nexport default function HorizontalLinearStepper(props) {\r\n  const classes = useStyles();\r\n\r\n  const steps = getSteps();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={props.activeStep}>\r\n        {steps.map((label, index) => {\r\n          const stepProps = {};\r\n          const labelProps = {};\r\n\r\n          return (\r\n            <Step key={index} {...stepProps}>\r\n              <StepLabel {...labelProps} className=\"l-blue-t\">\r\n                {label}\r\n              </StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      <div>\r\n        <div>\r\n          <Typography className={classes.instructions}>\r\n            {getStepContent(props.activeStep)}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Helpers\\Popups\\Popup.js",[],"C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Helpers\\FootMenu\\FootMenu.js",["461","462","463"],"import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, AppBar, Fab } from \"@material-ui/core\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport \"./FooterMenu.css\";\r\nimport history from \"../../../Utils/History\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Popup from \"../Popups/Popup\";\r\nimport UserProfile from \"../../UserPorfile/UserProfile\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  text: {\r\n    padding: theme.spacing(2, 2, 0),\r\n  },\r\n  paper: {\r\n    paddingBottom: 50,\r\n  },\r\n  list: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  subheader: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  appBar: {\r\n    top: \"auto\",\r\n    bottom: 0,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  fabButton: {\r\n    position: \"absolute\",\r\n    zIndex: 1,\r\n    top: -30,\r\n    left: 0,\r\n    right: 0,\r\n    margin: \"0 auto\",\r\n    background: \"#3897F1\",\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nexport default function FootMenu(props) {\r\n  const classes = useStyles();\r\n  const [menu, setMenu] = useState(0);\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const [useiinfopopup, setuserInfopopup] = useState(false);\r\n  return (\r\n    <AppBar\r\n      position=\"fixed\"\r\n      color=\"primary\"\r\n      className={classes.appBar}\r\n      color=\"default\"\r\n    >\r\n      <Toolbar>\r\n        <Fab\r\n          aria-label=\"add\"\r\n          className={classes.fabButton}\r\n          onClick={() => {\r\n            if (Auth.Name === \"\" || Auth.Name === undefined) {\r\n              setuserInfopopup(true);\r\n            } else {\r\n              history.push(\"/MyEvents/add-event\");\r\n            }\r\n          }}\r\n        >\r\n          <AddIcon />\r\n        </Fab>\r\n        <Grid container spacing={0} className={classes.grow}>\r\n          <Grid\r\n            item\r\n            xs={6}\r\n            className={props.menu === 0 ? \"menubox activemenu\" : \"menubox\"}\r\n            onClick={() => {\r\n              props.setMenu(0);\r\n              history.push(\"/MyInvitations\");\r\n            }}\r\n          >\r\n            Invitations\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={6}\r\n            className={props.menu === 1 ? \"menubox activemenu\" : \"menubox\"}\r\n            onClick={() => {\r\n              props.setMenu(1);\r\n              history.push(\"/MyEvents\");\r\n            }}\r\n          >\r\n            My Events\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n      <Popup\r\n        component={UserProfile}\r\n        toggleShowPopup={setuserInfopopup}\r\n        showPopup={useiinfopopup}\r\n        url={\"MyEvents/add-event\"}\r\n      />\r\n    </AppBar>\r\n  );\r\n}\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Helpers\\Header\\Header.js",["464","465","466","467","468","469","470"],"import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport \"./Header.css\";\r\nimport Headings from \"../../../Utils/Headings\";\r\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { logout } from \"../../../Redux/DispatchFuncitons/AuthFunctions\";\r\nimport { useDispatch } from \"react-redux\";\r\nexport default function Header(props) {\r\n  const dispatch = useDispatch();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton\r\n          aria-label=\"show 4 new mails\"\r\n          color=\"inherit\"\r\n          className=\"p-0\"\r\n        >\r\n          <InfoOutlinedIcon />\r\n        </IconButton>\r\n        <span className=\"menu-option\">Info</span>\r\n      </MenuItem>\r\n      {/* <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <SearchIcon className=\"search-button\" />\r\n        </IconButton>\r\n        <p>Search</p>\r\n      </MenuItem> */}\r\n      <MenuItem\r\n        onClick={() => {\r\n          handleProfileMenuOpen();\r\n          dispatch(logout());\r\n        }}\r\n      >\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className=\"p-0\"\r\n        >\r\n          <PowerSettingsNewIcon color=\"secondary\" className=\"search-button\" />\r\n        </IconButton>\r\n        <span className=\"menu-option\">Logout</span>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className=\"grow\">\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className=\"menuButton\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          >\r\n            {/* <MenuIcon /> */}\r\n          </IconButton>\r\n\r\n          <Headings url={props.url} />\r\n\r\n          <InputBase\r\n            className=\"inputRoot inputInput\"\r\n            inputProps={{ \"aria-label\": \"search\" }}\r\n          />\r\n\r\n          <div className=\"grow\" />\r\n          <div className=\"sectionDesktop\">\r\n            {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n              <SearchIcon className=\"search-button\" />\r\n            </IconButton> */}\r\n            <IconButton\r\n              aria-label=\"show 4 new mails\"\r\n              color=\"inherit\"\r\n              className=\"Nav-icon\"\r\n            >\r\n              <InfoOutlinedIcon color=\"primary\" />\r\n            </IconButton>\r\n\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n              className=\"Nav-icon\"\r\n            >\r\n              {Auth.Profile === \"\" ? (\r\n                <AccountCircle />\r\n              ) : (\r\n                <Avatar alt=\"Profile Picture\" src={Auth.Profile} />\r\n              )}\r\n            </IconButton>\r\n            <IconButton\r\n              aria-label=\"show 4 new mails\"\r\n              color=\"inherit\"\r\n              className=\"Nav-icon\"\r\n              onClick={() => {\r\n                dispatch(logout());\r\n              }}\r\n            >\r\n              <PowerSettingsNewIcon color=\"secondary\" />\r\n            </IconButton>\r\n          </div>\r\n          <div className=\"sectionMobile\">\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <Avatar alt=\"Profile Picture\" src={Auth.Profile} />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Helpers\\BackNavbar\\BackNavBar.js",[],"C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Helpers\\EventInvitoggler\\Toggler.js",[],"C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Helpers\\UserData\\UserData.js",["471","472","473","474"],"import React, { useState, useEffect } from \"react\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { getuserdata } from \"../../../Redux/DispatchFuncitons/AuthFunctions\";\r\nimport { url } from \"../../../Utils/Config\";\r\nimport { Grid } from \"@material-ui/core\";\r\nexport default function UserData(props) {\r\n  const [User, setUser] = useState({});\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    console.log(props.Phone);\r\n    if (props.Phone !== \"\") {\r\n      axios\r\n        .post(url + \"auth/getuserdetails\", { Phone: props.Phone })\r\n        .then((res) => {\r\n          if (res.data.user) {\r\n            console.log(res.data.user);\r\n\r\n            setUser(res.data.user);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          return { err: \"error 404\" };\r\n        });\r\n    }\r\n  }, []);\r\n  return (\r\n    <div className=\"w-100\">\r\n      {props.showIcon === true ? (\r\n        User.Pic !== undefined && User.Pic !== \"\" ? (\r\n          <div className=\"fl\">\r\n            <Avatar alt=\"Profile Picture\" src={User.Pic} />\r\n          </div>\r\n        ) : (\r\n          <div className=\"fl\">\r\n            <AccountCircle />\r\n          </div>\r\n        )\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {props.showName === true ? (\r\n        <div className=\"fl  fs-bold \">{User.Name} </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Chat\\Chatbox.js",["475","476"],"import React, { useEffect, useState } from \"react\";\r\nimport { Grid, Button, TextField } from \"@material-ui/core\";\r\nimport io from \"socket.io-client\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function Chatbox(props) {\r\n  const Auth = useSelector((state) => state.Auth);\r\n  let socket = io(\"http://localhost:5000/\", { transports: [\"websocket\"] });\r\n  const room = props.url;\r\n  const [chats, setChat] = useState([]);\r\n  const [joined, setjoined] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  function submit() {\r\n    if (message !== \"\") {\r\n      console.log(\"submit\");\r\n      socket.emit(\"message\", {\r\n        _id: Math.random(),\r\n        sender: Auth.id,\r\n        content: message,\r\n        room: room,\r\n      });\r\n      setMessage(\"\");\r\n    }\r\n    var elem = document.getElementById(\"chatbox\");\r\n    elem.scrollTop = elem.scrollHeight;\r\n  }\r\n  function savechat(data) {\r\n    setChat((chats) => [...chats, data]);\r\n    console.log(chats);\r\n  }\r\n\r\n  const updateField = (e) => {\r\n    setMessage(e.target.value);\r\n  };\r\n  useEffect(() => {\r\n    socket.on(\r\n      \"init\",\r\n      (msg) => {\r\n        console.log(\"connected\");\r\n        if (joined === false) {\r\n          socket.emit(\"room\", { r_name: room, name: Auth.id });\r\n          console.log(\"room\");\r\n        }\r\n\r\n        socket.on(\"joined_room\", (msg) => {\r\n          setjoined(true);\r\n          let messages = JSON.stringify(msg);\r\n          console.log(\"joined\");\r\n          //console.log(msg)\r\n          setChat((chats) => msg);\r\n          console.log(chats);\r\n          var elem = document.getElementById(\"chatbox\");\r\n          elem.scrollTop = elem.scrollHeight;\r\n        });\r\n      },\r\n      [\"abc\"]\r\n    );\r\n\r\n    socket.on(\"message_push\", (data) => {\r\n      setChat((chats) => [...chats, data]);\r\n    });\r\n    var elem = document.getElementById(\"chatbox\");\r\n    elem.scrollTop = elem.scrollHeight;\r\n  });\r\n\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid className=\"ChatHeader\" xs={12}></Grid>\r\n      <Grid className=\"chatbox \" id=\"chatbox\" xs={12}>\r\n        {chats.map((chat) =>\r\n          chat.sender === Auth.id ? (\r\n            <div key={chat._id} className=\"me\">\r\n              {chat.content}\r\n            </div>\r\n          ) : (\r\n            <div key={chat._id} className=\"other\">\r\n              {chat.content}\r\n            </div>\r\n          )\r\n        )}\r\n      </Grid>\r\n      <Grid className=\"Submitplus\" xs={9}>\r\n        {/* <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Say Hi\"\r\n          name=\"content\"\r\n          value={form.content}\r\n          onChange={updateField}\r\n          className=\"chatinp\"\r\n        /> */}\r\n        <TextField\r\n          placeholder=\"Say Hi\"\r\n          name=\"content\"\r\n          value={message}\r\n          onChange={updateField}\r\n          className=\"chatinp w-100\"\r\n          variant=\"outlined\"\r\n        />\r\n      </Grid>\r\n      <Grid className=\"Submitplus\" xs={3}>\r\n        <Button\r\n          variant=\"dark\"\r\n          className=\"w-100\"\r\n          onClick={(e) => {\r\n            submit(e);\r\n          }}\r\n        >\r\n          <b>Send</b>\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Chat\\ChatList.js",["477","478"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nexport default function ChatList() {\r\n  const Groups = useSelector((state) => state.Auth.Groups);\r\n  const [option, setoption] = useState(0);\r\n  let GroupList = [];\r\n  let Personal = [];\r\n  useEffect(() => {\r\n    if (Groups !== undefined && Groups.length > 0) {\r\n      GroupList = Groups.filter(function (grps) {\r\n        return grps.Type === \"GRP\";\r\n      });\r\n      Personal = Groups.filter(function (grps) {\r\n        return grps.Type === \"INDV\";\r\n      });\r\n    }\r\n  }, []);\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid xs={12}>\r\n        <h2>Chats</h2>\r\n      </Grid>\r\n      <Grid xs={12}>\r\n        <Grid container spacing={0}>\r\n          <Grid\r\n            xs={6}\r\n            className={option === 0 ? \"l-blue-t \" : \"grey-t\"}\r\n            onClick={() => {\r\n              setoption(0);\r\n            }}\r\n          >\r\n            Direct\r\n          </Grid>\r\n          <Grid\r\n            xs={6}\r\n            className={option === 0 ? \"l-blue-t \" : \"grey-t\"}\r\n            onClick={() => {\r\n              setoption(0);\r\n            }}\r\n          >\r\n            Group\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      {option === 0 ? (\r\n        <List>\r\n          {GroupList.map((grp) => (\r\n            <ListItem>\r\n              <ListItemAvatar>\r\n                <Avatar alt=\"Profile Picture\" src={grp.GrpPhoto} />\r\n              </ListItemAvatar>\r\n              <ListItemText primary={grp.Name} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      ) : (\r\n        <List>\r\n          {Personal.map((grp) => (\r\n            <ListItem>\r\n              <ListItemAvatar>\r\n                <Avatar alt=\"Profile Picture\" src={grp.GrpPhoto} />\r\n              </ListItemAvatar>\r\n              <ListItemText primary={grp.Name} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Utils\\Config.js",[],"C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Utils\\Login.js",[],"C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Helpers\\timer\\timer.js",["479","480"],"import React, { useState, useEffect } from \"react\";\r\nimport Countdown from \"react-countdown\";\r\nexport default function Timer(props) {\r\n  const renderer = ({ hours, minutes, seconds, completed }) => {\r\n    if (completed) {\r\n      props.setStep(0);\r\n      return <></>;\r\n    } else {\r\n      // Render a countdown\r\n      return (\r\n        <>\r\n          OTP will expire in : {hours}:{minutes}:{seconds}\r\n        </>\r\n      );\r\n    }\r\n  };\r\n  return <Countdown date={Date.now() + 60000} renderer={renderer} />;\r\n}\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Redux\\Actions\\AuthActions.js",[],"C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Redux\\Actions\\EventActions.js",[],"C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Utils\\Headings.js",[],"C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\UserPorfile\\UserProfile.js",["481","482","483","484"],"import React, { useState, useCallback } from \"react\";\r\nimport { Grid, TextField, Button } from \"@material-ui/core\";\r\nimport male from \"../../Assets/Male.svg\";\r\nimport female from \"../../Assets/Female.svg\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { uploadString } from \"../../Utils/FileUpload_Download\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { saveuserinfo } from \"../../Redux/DispatchFuncitons/AuthFunctions\";\r\nimport \"./userProfile.css\";\r\nexport default function UserProfile(props) {\r\n  const [showerror, setshowerror] = useState(false);\r\n  const [Name, setName] = useState(\"\");\r\n  const [DOB, setDOB] = useState(\"\");\r\n  const [Gender, setGender] = useState(\"\");\r\n  const [Image, setImage] = useState(\"\");\r\n  const Auth = useSelector((state) => state.Auth);\r\n  const dispatch = useDispatch();\r\n  const onDrop = useCallback(async (acceptedFiles) => {\r\n    if (acceptedFiles[0].size > 5259265) {\r\n      alert(\"Max file size 5mb\");\r\n      return false;\r\n    }\r\n    let type = acceptedFiles[0].type.split(\"/\");\r\n    type = type[1];\r\n    var reader = await new FileReader();\r\n    reader.onload = async function () {\r\n      let url = await uploadString(\r\n        reader.result,\r\n        \"Profile/\" + Auth.Phone + \".\" + type\r\n      );\r\n      await setImage(url);\r\n    };\r\n    reader.onerror = function (error) {\r\n      console.log(\"Error: \", error);\r\n    };\r\n    await reader.readAsDataURL(acceptedFiles[0]);\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    multiple: false,\r\n    accept: \"image/jpeg, image/png, image/jpg\",\r\n  });\r\n  const save = () => {\r\n    if (Name === \"\" || DOB === \"\" || Gender === \"\" || Image === \"\") {\r\n      setshowerror(true);\r\n    } else {\r\n      dispatch(saveuserinfo(Name, Gender, DOB, Image, props.url));\r\n      setshowerror(false);\r\n      props.hide(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid item xs={6} {...getRootProps()}>\r\n        <input {...getInputProps()} />\r\n        <center\r\n          onClick={() => {\r\n            setGender(\"M\");\r\n          }}\r\n        >\r\n          <img\r\n            src={Gender === \"M\" && Image !== \"\" ? Image : male}\r\n            className={\r\n              Image === \"\"\r\n                ? showerror === true\r\n                  ? \"no-proifle \"\r\n                  : \" Profile\"\r\n                : \"Profile\"\r\n            }\r\n          />\r\n        </center>\r\n      </Grid>\r\n      <Grid item xs={6} {...getRootProps()}>\r\n        <input {...getInputProps()} />\r\n        <center\r\n          onClick={() => {\r\n            setGender(\"F\");\r\n          }}\r\n        >\r\n          <img\r\n            src={Gender === \"F\" && Image !== \"\" ? Image : female}\r\n            className={\r\n              Image === \"\"\r\n                ? showerror === true\r\n                  ? \"no-proifle \"\r\n                  : \" Profile\"\r\n                : \"Profile\"\r\n            }\r\n          />\r\n        </center>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <span>Name</span>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          className=\"w-100 m-b-5px \"\r\n          value={Name}\r\n          onChange={(e) => {\r\n            setName(e.target.value);\r\n          }}\r\n          error={showerror === true && Name === \"\" ? true : false}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <span>DOB</span>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          className=\"w-100 m-b-5px \"\r\n          type=\"date\"\r\n          defaultValue=\"2017-05-24\"\r\n          value={DOB}\r\n          onChange={(e) => {\r\n            setDOB(e.target.value);\r\n          }}\r\n          error={showerror === true && DOB === \"\" ? true : false}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\"w-100 m-b-5px\"\r\n          onClick={() => {\r\n            save();\r\n          }}\r\n        >\r\n          Save\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\AddEvent\\CreateEvent\\ImageSelectionModal.js",["485","486","487","488","489"],"import React, { useState, useCallback } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport Gallery from \"../../../Assets/ChooseFromGallery.svg\";\r\nimport Tenmplate from \"../../../Assets/ChoosefromTemplate.svg\";\r\nexport default function ImageSelectionModal(props) {\r\n  const onDrop = useCallback(async (acceptedFiles) => {\r\n    if (acceptedFiles[0].size > 5259265) {\r\n      alert(\"Max file size 5mb\");\r\n      return false;\r\n    }\r\n\r\n    console.log(props.data);\r\n\r\n    let EventsCpy = await { ...props.CurrentEventDetails };\r\n    let type = acceptedFiles[0].type.split(\"/\");\r\n    EventsCpy.filetype = type[1];\r\n    var reader = await new FileReader();\r\n    reader.onload = async function () {\r\n      EventsCpy.file = reader.result;\r\n      await props.SetCurrentEventDetails(EventsCpy);\r\n    };\r\n    reader.onerror = function (error) {\r\n      console.log(\"Error: \", error);\r\n    };\r\n    await reader.readAsDataURL(acceptedFiles[0]);\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    multiple: false,\r\n    accept: \"image/jpeg, image/png, image/jpg, video/mp4 \",\r\n  });\r\n\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid item xs={12}>\r\n        <h2 className=\"tac\">Upload Your Picture</h2>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <div {...getRootProps()}>\r\n          <input {...getInputProps()} />\r\n          <img src={Gallery} className=\"w-100\" />\r\n        </div>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <img src={Tenmplate} className=\"w-100\" />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\AddEvent\\CreateEvent\\EventDetails.js",["490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Switch,\r\n  FormControl,\r\n  Paper,\r\n  Modal,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"./CreateEvent.css\";\r\nimport AddImg from \"../../../Assets/AddImage.svg\";\r\nimport Scehedule from \"../../../Assets/schedule.svg\";\r\nimport Storyimg from \"../../../Assets/AddStory.svg\";\r\nimport Albumsimg from \"../../../Assets/AddAlbums.svg\";\r\nimport Map from \"../../Helpers/Maps/Maps\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport Album from \"../Extras/Album\";\r\nimport Story from \"../Extras/Story\";\r\nimport AddSchedule from \"../Extras/Schedule\";\r\nimport ImageSelectionModal from \"./ImageSelectionModal\";\r\nimport AddDetails from \"../AddDetails/AddDetails\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default function EventDetails(props) {\r\n  const useStyles = makeStyles((theme) => ({\r\n    notchedOutline: {\r\n      borderWidth: \"3px\",\r\n      borderColor: \"#3897f1 !important\",\r\n      borderRadius: \"150px\",\r\n      color: \"#3897f1 !important\",\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  const [processing, setProcessing] = useState(false);\r\n  const [showPopup, toggleShowPopup] = useState(false);\r\n  const [CurrentEventDetails, SetCurrentEventDetails] = useState({\r\n    ...props.Events[props.SelectedEvent],\r\n  });\r\n  const [IsSubmitted, setSubmit] = useState(false);\r\n  const [shedulevisible, SetScheduleVisible] = useState(false);\r\n  const [storyvisible, SetStoryVisible] = useState(false);\r\n  const [albumvisible, SetAlbumVisible] = useState(false);\r\n  const [Link, setLink] = useState(\"\");\r\n  const [Location, setLocation] = useState(\"\");\r\n  useEffect(() => {\r\n    if (props.Events[props.SelectedEvent] !== undefined) {\r\n      SetCurrentEventDetails(props.Events[props.SelectedEvent]);\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    props.setDisablesave(false);\r\n    if (props.Events[props.SelectedEvent] !== undefined) {\r\n      SetCurrentEventDetails(props.Events[props.SelectedEvent]);\r\n    }\r\n  }, [props.SelectedEvent]);\r\n  var gapi = window.gapi;\r\n  /* \r\n    Update with your own Client Id and Api key \r\n  */\r\n  var CLIENT_ID =\r\n    \"271872414479-lumfn9dkcqh1k1et8dfau81dkcng81s4.apps.googleusercontent.com\";\r\n  var API_KEY = \"AIzaSyCdk1XolxNow08BXLxbzCeDReSrNTTlXCo\";\r\n  var clientSecret = \"GpxXOinOWEyYdsbnVjolU9is\";\r\n  var DISCOVERY_DOCS = [\r\n    \"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\",\r\n  ];\r\n  var SCOPES = \"https://www.googleapis.com/auth/calendar.events\";\r\n\r\n  const save = async () => {\r\n    debugger;\r\n    let eventscpy = props.Events;\r\n    let currentEvent = props.SelectedEvent;\r\n    console.log(CurrentEventDetails);\r\n    eventscpy[props.SelectedEvent] = CurrentEventDetails;\r\n\r\n    await props.setEvents(eventscpy);\r\n    // await props.SelectEvent(0);\r\n\r\n    let result = await props.checkIfEventEmpty(\r\n      eventscpy,\r\n      props.Type,\r\n      props.seterroring,\r\n      props.SelectedEvent\r\n    );\r\n    await setSubmit(true);\r\n    if (result.status === true) {\r\n      let EventsCopy = [...props.Events];\r\n      await props.setDisablesave(true);\r\n\r\n      props.handleNext();\r\n    } else {\r\n      console.log(\"result false\");\r\n      console.log(IsSubmitted);\r\n      await props.SelectEvent(result.index);\r\n      console.log(result.index);\r\n    }\r\n  };\r\n\r\n  const changevenue = () => {\r\n    if (\r\n      CurrentEventDetails.VenueType === \"Online\" ||\r\n      CurrentEventDetails.VenueType === \"Both\"\r\n    ) {\r\n      // CreateMeeting();\r\n      SetCurrentEventDetails({\r\n        ...CurrentEventDetails,\r\n        Location: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12} sm={12}>\r\n        {CurrentEventDetails !== undefined &&\r\n        CurrentEventDetails.file === \"\" ? (\r\n          <center>\r\n            <img\r\n              src={AddImg}\r\n              className={\r\n                IsSubmitted === true\r\n                  ? \"add-Img error-box m-b-25px\"\r\n                  : \"add-Img m-b-25px\"\r\n              }\r\n              onClick={() => {\r\n                toggleShowPopup(true);\r\n              }}\r\n            />\r\n          </center>\r\n        ) : CurrentEventDetails !== undefined &&\r\n          CurrentEventDetails.filetype !== undefined ? (\r\n          CurrentEventDetails.filetype === \"png\" ||\r\n          CurrentEventDetails.filetype === \"jpg\" ||\r\n          CurrentEventDetails.filetype === \"jpeg\" ? (\r\n            <img\r\n              src={\r\n                CurrentEventDetails !== undefined\r\n                  ? CurrentEventDetails.file\r\n                  : \" \"\r\n              }\r\n              onClick={() => {\r\n                toggleShowPopup(true);\r\n              }}\r\n              className={\r\n                processing === true\r\n                  ? \"transparent uploaded-file w-100 m-b-25px\"\r\n                  : \"notTransparent uploaded-file w-100 m-b-25px\"\r\n              }\r\n            />\r\n          ) : (\r\n            <video\r\n              muted\r\n              type=\"video/mp4\"\r\n              autoPlay={true}\r\n              src={\r\n                CurrentEventDetails !== undefined\r\n                  ? CurrentEventDetails.file\r\n                  : \" \"\r\n              }\r\n              onClick={() => {\r\n                toggleShowPopup(true);\r\n              }}\r\n              preload=\"none\"\r\n              className={\r\n                processing === true\r\n                  ? \" transparent w-100 m-b-25px\"\r\n                  : \"notTransparent w-100 m-b-25px\"\r\n              }\r\n            />\r\n          )\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <div>\r\n          <Modal\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            className=\"modal\"\r\n            open={showPopup}\r\n            onClose={() => {\r\n              toggleShowPopup(false);\r\n            }}\r\n          >\r\n            <div className=\"modal-card\">\r\n              <CancelIcon\r\n                onClick={() => {\r\n                  toggleShowPopup(false);\r\n                }}\r\n                color=\"secondary\"\r\n                className=\"popup-close\"\r\n              />\r\n\r\n              <ImageSelectionModal\r\n                className=\"modal-component\"\r\n                data={props.Events}\r\n                setEvents={props.setEvents}\r\n                SelectEvent={props.SelectEvent}\r\n                SelectedEvent={props.SelectedEvent}\r\n                processing={processing}\r\n                setDisablesave={props.setDisablesave}\r\n                CurrentEventDetails={CurrentEventDetails}\r\n                SetCurrentEventDetails={SetCurrentEventDetails}\r\n              />\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <span className=\"label\">Type</span>\r\n        <TextField\r\n          id=\"outlined-basics\"\r\n          variant=\"outlined\"\r\n          className=\"w-100-p m-b-25px\"\r\n          size=\"small\"\r\n          value={CurrentEventDetails.Name}\r\n          onChange={(e) => {\r\n            SetCurrentEventDetails({\r\n              ...CurrentEventDetails,\r\n              Name: e.target.value,\r\n            });\r\n          }}\r\n          error={\r\n            IsSubmitted === true && CurrentEventDetails.Name === \"\"\r\n              ? true\r\n              : false\r\n          }\r\n          InputProps={{\r\n            classes: {\r\n              notchedOutline: classes.notchedOutline,\r\n            },\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <span className=\"label\">Date</span>\r\n        <TextField\r\n          id=\"date\"\r\n          // label=\"Date\"\r\n          type=\"date\"\r\n          variant=\"outlined\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          size=\"small\"\r\n          className=\"w-100-p m-b-25px\"\r\n          value={CurrentEventDetails.Date}\r\n          onChange={(e) => {\r\n            SetCurrentEventDetails({\r\n              ...CurrentEventDetails,\r\n              Date: e.target.value,\r\n            });\r\n          }}\r\n          error={\r\n            IsSubmitted === true && CurrentEventDetails.Date === \"\"\r\n              ? true\r\n              : false\r\n          }\r\n          InputProps={{\r\n            classes: {\r\n              notchedOutline: classes.notchedOutline,\r\n            },\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <span className=\"label\">Time</span>\r\n        <TextField\r\n          id=\"time\"\r\n          // label=\"Time\"\r\n          variant=\"outlined\"\r\n          type=\"time\"\r\n          size=\"small\"\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          className=\"w-100-p m-b-25px\"\r\n          inputProps={{\r\n            step: 300, // 5 min\r\n          }}\r\n          ampm={false}\r\n          value={CurrentEventDetails.Time}\r\n          onChange={(e) => {\r\n            console.log(e.target.value);\r\n            SetCurrentEventDetails({\r\n              ...CurrentEventDetails,\r\n              Time: e.target.value,\r\n            });\r\n          }}\r\n          error={\r\n            IsSubmitted === true && CurrentEventDetails.Time === \"\"\r\n              ? true\r\n              : false\r\n          }\r\n          InputProps={{\r\n            classes: {\r\n              notchedOutline: classes.notchedOutline,\r\n            },\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={5} sm={4}>\r\n        <FormControl\r\n          variant=\"outlined\"\r\n          className=\"w-100-p m-b-25px\"\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n          InputProps={{\r\n            classes: {\r\n              notchedOutline: classes.notchedOutline,\r\n            },\r\n          }}\r\n        >\r\n          <span className=\"label\">Type</span>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            className=\"w-100-p selectboxblue\"\r\n            value={CurrentEventDetails.VenueType}\r\n            error={\r\n              IsSubmitted === true && CurrentEventDetails.VenueType === \"\"\r\n                ? true\r\n                : false\r\n            }\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              classes: {\r\n                notchedOutline: classes.notchedOutline,\r\n              },\r\n            }}\r\n          >\r\n            <MenuItem\r\n              className=\"w-100-p\"\r\n              onClick={(e) => {\r\n                changevenue();\r\n                SetCurrentEventDetails({\r\n                  ...CurrentEventDetails,\r\n                  VenueType: \"Online-Inapp\",\r\n                });\r\n              }}\r\n              value=\"Online-Inapp\"\r\n            >\r\n              Online-Inapp\r\n            </MenuItem>\r\n            <MenuItem\r\n              className=\"w-100-p\"\r\n              onClick={(e) => {\r\n                changevenue();\r\n                SetCurrentEventDetails({\r\n                  ...CurrentEventDetails,\r\n                  VenueType: \"Online\",\r\n                });\r\n              }}\r\n              value=\"Online\"\r\n            >\r\n              Online\r\n            </MenuItem>\r\n\r\n            <MenuItem\r\n              className=\"w-100-p\"\r\n              onClick={(e) => {\r\n                changevenue();\r\n                SetCurrentEventDetails({\r\n                  ...CurrentEventDetails,\r\n                  VenueType: \"Offline\",\r\n                });\r\n              }}\r\n              value=\"Offline\"\r\n            >\r\n              Offline\r\n            </MenuItem>\r\n            <MenuItem\r\n              className=\"w-100-p\"\r\n              onClick={(e) => {\r\n                changevenue();\r\n                SetCurrentEventDetails({\r\n                  ...CurrentEventDetails,\r\n                  VenueType: \"Both\",\r\n                });\r\n              }}\r\n              value=\"Both\"\r\n            >\r\n              Both\r\n            </MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <>\r\n        <Grid\r\n          item\r\n          xs={7}\r\n          sm={8}\r\n          className={\r\n            CurrentEventDetails.VenueType === \"Online\" ||\r\n            CurrentEventDetails.VenueType === \"Both\"\r\n              ? \"show pt-18px\"\r\n              : \"hide pt-18px\"\r\n          }\r\n        >\r\n          <span className=\"label\">Place Meeting Links here</span>\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            className=\"w-100-p m-b-25px mt-10px\"\r\n            value={CurrentEventDetails.Link}\r\n            onChange={(e) => {\r\n              SetCurrentEventDetails({\r\n                ...CurrentEventDetails,\r\n                Link: e.target.value,\r\n                Location: \"\",\r\n              });\r\n            }}\r\n            error={\r\n              IsSubmitted === true && CurrentEventDetails.Link === \"\"\r\n                ? true\r\n                : false\r\n            }\r\n            InputProps={{\r\n              classes: {\r\n                notchedOutline: classes.notchedOutline,\r\n              },\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={12}\r\n          md={12}\r\n          className={\r\n            CurrentEventDetails.VenueType === \"Online\" ||\r\n            CurrentEventDetails.VenueType === \"Online-Inapp\"\r\n              ? \"hide\"\r\n              : \"show\"\r\n          }\r\n        >\r\n          <Map\r\n            SetCurrentEventDetails={SetCurrentEventDetails}\r\n            CurrentEventDetails={CurrentEventDetails}\r\n            center={{ lat: 20.5937, lng: 78.9629 }}\r\n            height=\"300px\"\r\n            zoom={12}\r\n            setLocation={setLocation}\r\n            Location={Location}\r\n            type={\"Offline\"}\r\n          />\r\n          <span\r\n            className={\r\n              IsSubmitted === true && CurrentEventDetails.Location === \"\"\r\n                ? \"error\"\r\n                : \"hide\"\r\n            }\r\n          >\r\n            Please add Location\r\n          </span>\r\n        </Grid>\r\n      </>\r\n\r\n      <Grid item xs={12}>\r\n        <span className=\"label\">Description</span>\r\n        {/* <TextField\r\n          id=\"standard-name\"\r\n          label=\"Name\"\r\n          className={classes.textField}\r\n          value={this.state.name}\r\n          onChange={this.handleChange('name')}\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          InputLabelProps={{\r\n            classes: {\r\n              root: classes.cssLabel,\r\n              focused: classes.cssFocused,\r\n            },\r\n          }}\r\n          InputProps={{\r\n            classes: {\r\n              root: classes.cssOutlinedInput,\r\n              focused: classes.cssFocused,\r\n              notchedOutline: classes.notchedOutline,\r\n            },\r\n            inputMode: \"numeric\"\r\n          }}\r\n        /> */}\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          // label=\"Description\"\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n          className=\"w-100-p m-7px m-b-25px \"\r\n          value={CurrentEventDetails.Description}\r\n          onChange={(e) => {\r\n            SetCurrentEventDetails({\r\n              ...CurrentEventDetails,\r\n              Description: e.target.value,\r\n            });\r\n          }}\r\n          error={\r\n            IsSubmitted === true && CurrentEventDetails.Description === \"\"\r\n              ? true\r\n              : false\r\n          }\r\n          InputProps={{\r\n            classes: {\r\n              notchedOutline: classes.notchedOutline,\r\n            },\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={8} className=\"talc fs-bold m-b-25px\">\r\n        Guest can Invite (max 3)\r\n      </Grid>\r\n      <Grid item xs={4}>\r\n        <Switch\r\n          checked={CurrentEventDetails.GuestInvite}\r\n          color=\"primary\"\r\n          name=\"checkedB\"\r\n          inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n          className=\"fr\"\r\n          onChange={(e) => {\r\n            SetCurrentEventDetails({\r\n              ...CurrentEventDetails,\r\n              GuestInvite: !CurrentEventDetails.GuestInvite,\r\n            });\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} md={4}>\r\n        <Paper elevation={3} className=\"schedule-card\">\r\n          <center>\r\n            <img src={Scehedule} alt=\"schedule\" className=\"schedule-icon\" />\r\n            <h3>Add new Schedule</h3>\r\n            <button\r\n              className=\"add-schedule\"\r\n              onClick={() => {\r\n                SetScheduleVisible(true);\r\n              }}\r\n            >\r\n              Add\r\n            </button>\r\n          </center>\r\n        </Paper>\r\n        <div>\r\n          <Modal\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            className=\"f-s-modal\"\r\n            open={shedulevisible}\r\n            onClose={() => {\r\n              SetScheduleVisible(false);\r\n            }}\r\n          >\r\n            <div className=\"f-s-modal-card\">\r\n              <AddDetails\r\n                Name=\"Schedule\"\r\n                className=\"modal-component\"\r\n                data={props.Events}\r\n                setEvents={props.setEvents}\r\n                SelectEvent={props.SelectEvent}\r\n                SelectedEvent={props.SelectedEvent}\r\n                CurrentEventDetails={CurrentEventDetails}\r\n                Events={props.Events}\r\n                SelectedEvent={props.SelectedEvent}\r\n                SetCurrentEventDetails={SetCurrentEventDetails}\r\n                SetScheduleVisible={SetScheduleVisible}\r\n                open={SetScheduleVisible}\r\n              />\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n      </Grid>\r\n      {props.SelectedEvent === 0 ? (\r\n        <>\r\n          <Grid item xs={12} md={4}>\r\n            <Paper elevation={3} className=\"schedule-card\">\r\n              <center>\r\n                <img src={Storyimg} alt=\"schedule\" className=\"schedule-icon\" />\r\n                <h3>Add new Story</h3>\r\n                <button\r\n                  className=\"add-schedule\"\r\n                  onClick={() => {\r\n                    SetStoryVisible(true);\r\n                  }}\r\n                >\r\n                  Add\r\n                </button>\r\n              </center>\r\n            </Paper>\r\n            <div>\r\n              <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className=\"f-s-modal\"\r\n                open={storyvisible}\r\n                onClose={() => {\r\n                  SetStoryVisible(false);\r\n                }}\r\n              >\r\n                <div className=\"f-s-modal-card\">\r\n                  <AddDetails\r\n                    Name=\"Story\"\r\n                    className=\"modal-component\"\r\n                    data={props.Events}\r\n                    setEvents={props.setEvents}\r\n                    SelectEvent={props.SelectEvent}\r\n                    SelectedEvent={props.SelectedEvent}\r\n                    CurrentEventDetails={CurrentEventDetails}\r\n                    Events={props.Events}\r\n                    SelectedEvent={props.SelectedEvent}\r\n                    SetCurrentEventDetails={SetCurrentEventDetails}\r\n                    SetScheduleVisible={SetScheduleVisible}\r\n                    open={SetStoryVisible}\r\n                  />\r\n                </div>\r\n              </Modal>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Paper elevation={3} className=\"schedule-card\">\r\n              <center>\r\n                <img src={Albumsimg} alt=\"schedule\" className=\"schedule-icon\" />\r\n                <h3>Add Albums</h3>\r\n                <button\r\n                  className=\"add-schedule\"\r\n                  onClick={() => {\r\n                    SetAlbumVisible(true);\r\n                  }}\r\n                >\r\n                  Add\r\n                </button>\r\n              </center>\r\n            </Paper>\r\n            <div>\r\n              <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className=\"f-s-modal\"\r\n                open={albumvisible}\r\n                onClose={() => {\r\n                  SetAlbumVisible(false);\r\n                }}\r\n              >\r\n                <div className=\"f-s-modal-card\">\r\n                  <AddDetails\r\n                    Name=\"Album\"\r\n                    className=\"modal-component\"\r\n                    data={props.Events}\r\n                    setEvents={props.setEvents}\r\n                    SelectEvent={props.SelectEvent}\r\n                    SelectedEvent={props.SelectedEvent}\r\n                    CurrentEventDetails={CurrentEventDetails}\r\n                    Events={props.Events}\r\n                    SelectedEvent={props.SelectedEvent}\r\n                    SetCurrentEventDetails={SetCurrentEventDetails}\r\n                    SetScheduleVisible={SetScheduleVisible}\r\n                    open={SetAlbumVisible}\r\n                  />\r\n                </div>\r\n              </Modal>\r\n            </div>\r\n          </Grid>\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n\r\n      <Grid item xs={12}>\r\n        <button\r\n          className={\r\n            props.disablesave === false ? \"save-event\" : \"save-event disabled\"\r\n          }\r\n          onClick={() => {\r\n            if (props.disablesave === false) {\r\n              save();\r\n            }\r\n          }}\r\n        >\r\n          Save\r\n        </button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\AddEvent\\AddDetails\\AddDetails.js",["515","516","517","518","519","520"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./AddDetails.css\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Header from \"../../Helpers/Header/Header\";\r\nimport Toggler from \"../../Helpers/EventInvitoggler/Toggler\";\r\nimport Back from \"../../../Assets/Back.svg\";\r\nimport BackNavBar from \"../../Helpers/BackNavbar/BackNavBar\";\r\nimport AddSchedule from \"../Extras/Schedule\";\r\nimport Album from \"../Extras/Album\";\r\nimport Story from \"../Extras/Story\";\r\nimport history from \"../../../Utils/History\";\r\nexport default function AddDetails(props) {\r\n  const [Name, SetName] = useState(props.Name);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Toggler toggle={console.log(\"toggle\")} locaiton={\"eve\"} />\r\n\r\n      <BackNavBar\r\n        logo={<img src={Back} />}\r\n        Name={Name}\r\n        functionality={() => {\r\n          props.open(false);\r\n        }}\r\n        icon={\r\n          <button\r\n            className=\"Skip-button\"\r\n            onClick={() => {\r\n              props.open(false);\r\n            }}\r\n          >\r\n            Skip\r\n          </button>\r\n        }\r\n      />\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12} className=\"tab-header\"></Grid>\r\n        <Grid item xs={false} sm={2} md={2} />\r\n\r\n        <Grid item xs={12} sm={8} md={8} className=\"p-15px pt-0\">\r\n          <Grid container spacing={0} className=\"DetailHeader\">\r\n            <Grid\r\n              item\r\n              xs={4}\r\n              md={2}\r\n              onClick={() => {\r\n                SetName(\"Schedule\");\r\n              }}\r\n              className={Name === \"Schedule\" ? \"l-blue-t tac u\" : \"tac\"}\r\n            >\r\n              Schedule\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={4}\r\n              md={2}\r\n              onClick={() => {\r\n                SetName(\"Story\");\r\n              }}\r\n              className={\r\n                props.SelectedEvent === 0\r\n                  ? Name === \"Story\"\r\n                    ? \"tac show l-blue-t u\"\r\n                    : \"tac show \"\r\n                  : \"tac hide\"\r\n              }\r\n            >\r\n              Our Story\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={4}\r\n              md={2}\r\n              onClick={() => {\r\n                SetName(\"Album\");\r\n              }}\r\n              className={\r\n                props.SelectedEvent === 0\r\n                  ? Name === \"Album\"\r\n                    ? \"tac show l-blue-t u\"\r\n                    : \"tac show \"\r\n                  : \"tac hide\"\r\n              }\r\n            >\r\n              Album\r\n            </Grid>\r\n          </Grid>\r\n          {Name === \"Schedule\" ? (\r\n            <AddSchedule\r\n              data={props.data}\r\n              setEvents={props.setEvents}\r\n              SelectEvent={props.SelectEvent}\r\n              SelectedEvent={props.SelectedEvent}\r\n              CurrentEventDetails={props.CurrentEventDetails}\r\n              Events={props.Events}\r\n              SelectedEvent={props.SelectedEvent}\r\n              SetCurrentEventDetails={props.SetCurrentEventDetails}\r\n              SetScheduleVisible={props.SetScheduleVisible}\r\n            />\r\n          ) : (\r\n            <>\r\n              {Name === \"Story\" ? (\r\n                <Story\r\n                  data={props.data}\r\n                  setEvents={props.setEvents}\r\n                  SelectEvent={props.SelectEvent}\r\n                  SelectedEvent={props.SelectedEvent}\r\n                  CurrentEventDetails={props.CurrentEventDetails}\r\n                  Events={props.Events}\r\n                  SelectedEvent={props.SelectedEvent}\r\n                  SetCurrentEventDetails={props.SetCurrentEventDetails}\r\n                  SetScheduleVisible={props.SetScheduleVisible}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n              {Name === \"Album\" ? (\r\n                <Album\r\n                  data={props.data}\r\n                  setEvents={props.setEvents}\r\n                  SelectEvent={props.SelectEvent}\r\n                  SelectedEvent={props.SelectedEvent}\r\n                  CurrentEventDetails={props.CurrentEventDetails}\r\n                  Events={props.Events}\r\n                  SelectedEvent={props.SelectedEvent}\r\n                  SetCurrentEventDetails={props.SetCurrentEventDetails}\r\n                  open={props.open}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={false} sm={2} md={2} />\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\AddEvent\\Extras\\Schedule.js",["521","522","523","524","525"],"import React, { useState, useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport Gallery from \"../../../Assets/ChooseFromGallery.svg\";\r\nimport { Grid, TextField, IconButton } from \"@material-ui/core\";\r\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport AddCircleRoundedIcon from \"@material-ui/icons/AddCircleRounded\";\r\nimport LocationOnRoundedIcon from \"@material-ui/icons/LocationOnRounded\";\r\nimport ControlPointIcon from \"@material-ui/icons/ControlPoint\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nexport default function AddSchedule(props) {\r\n  const [subEvent, setSubevent] = useState([\r\n    ...props.CurrentEventDetails.Schedule,\r\n  ]);\r\n  const [edit, setedit] = useState(false);\r\n  const [add, setadd] = useState(false);\r\n  const [editselected, settoedit] = useState(null);\r\n  const [subname, setsubname] = useState(\"\");\r\n  const [venue, setvenue] = useState(\"\");\r\n  const [datetime, setdatetime] = useState(\"\");\r\n  const [description, setdescription] = useState(\"\");\r\n  const [isError, setError] = useState(false);\r\n  const save = async () => {\r\n    if (subname !== \"\" && datetime !== \"\" && description !== \"\") {\r\n      let data = {\r\n        Name: subname,\r\n        datetime: datetime,\r\n        description: description,\r\n        Venue: venue,\r\n      };\r\n      console.log([...subEvent, data]);\r\n\r\n      await setSubevent([...props.CurrentEventDetails.Schedule, data]);\r\n\r\n      var EventsCopy = { ...props.CurrentEventDetails };\r\n      console.log(EventsCopy);\r\n      EventsCopy.Schedule = [...props.CurrentEventDetails.Schedule, data];\r\n      console.log(props.EventsCopy);\r\n      await props.SetCurrentEventDetails(EventsCopy);\r\n      console.log(props.Events);\r\n      Delete();\r\n      setadd(false);\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n  const saveedit = async () => {\r\n    debugger;\r\n    if (subname !== \"\" && datetime !== \"\" && description !== \"\") {\r\n      let data = {\r\n        Name: subname,\r\n        datetime: datetime,\r\n        description: description,\r\n        Venue: venue,\r\n      };\r\n      let subEventcpy = [...subEvent];\r\n      subEventcpy[editselected] = data;\r\n      await setSubevent(subEventcpy);\r\n      var EventsCopy = { ...props.CurrentEventDetails };\r\n      EventsCopy.Schedule = [...subEventcpy];\r\n      console.log(props.EventsCopy);\r\n      await props.SetCurrentEventDetails(EventsCopy);\r\n      console.log(props.Events);\r\n      Delete();\r\n      setedit(false);\r\n      settoedit(null);\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  const Delete = () => {\r\n    setsubname(\"\");\r\n    setdatetime(\"\");\r\n    setdescription(\"\");\r\n    setvenue(\"\");\r\n  };\r\n  const Deleteone = async (i) => {\r\n    let subeventcpy = [...subEvent];\r\n    subeventcpy = subeventcpy.filter((sube, index) => {\r\n      return index !== i;\r\n    });\r\n    await setSubevent([...subeventcpy]);\r\n\r\n    var EventsCopy = { ...props.CurrentEventDetails };\r\n    console.log(EventsCopy);\r\n    EventsCopy.Schedule = [...subeventcpy];\r\n    console.log(props.EventsCopy);\r\n    await props.SetCurrentEventDetails(EventsCopy);\r\n    console.log(props.Events);\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid item xs={12}>\r\n        {subEvent.map((eve, index) => (\r\n          <Grid item xs={12} className=\"card-shadow m-b-10\">\r\n            <Grid container spacing={0}>\r\n              <Grid item xs={8} md={10}>\r\n                {edit === true && editselected === index ? (\r\n                  <>\r\n                    <TextField\r\n                      className=\"w-100 m-7px\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      label=\"Sub-Event Name\"\r\n                      onChange={(e) => {\r\n                        setsubname(e.target.value);\r\n                      }}\r\n                      value={subname}\r\n                    />\r\n                    <TextField\r\n                      className=\"w-100 m-7px\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      label=\"Venue\"\r\n                      onChange={(e) => {\r\n                        setvenue(e.target.value);\r\n                      }}\r\n                      value={venue}\r\n                    />\r\n                    <form noValidate>\r\n                      <TextField\r\n                        id=\"datetime-local\"\r\n                        label=\"Schedule timing\"\r\n                        type=\"datetime-local\"\r\n                        defaultValue=\"2017-05-24T10:30\"\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        className=\"w-100 m-7px\"\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        onChange={(e) => {\r\n                          setdatetime(e.target.value);\r\n                        }}\r\n                        value={datetime}\r\n                      />\r\n                    </form>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <Grid\r\n                      container\r\n                      spacing={0}\r\n                      className=\"padding-left-3 p-10-p \"\r\n                    >\r\n                      <Grid item xs={12}>\r\n                        <h3 className=\"l-blue-t m-0\">{eve.Name}</h3>\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        {eve.Venue}\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        {eve.datetime}\r\n                      </Grid>\r\n                      <Grid item xs={12} className=\"mt-10px\">\r\n                        {eve.description}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={4} md={2}>\r\n                {edit === true && editselected === index ? (\r\n                  <center>\r\n                    <IconButton\r\n                      onClick={() => {\r\n                        saveedit();\r\n                      }}\r\n                    >\r\n                      <CheckCircleOutlineIcon color=\"success\" />\r\n                    </IconButton>\r\n                    <IconButton\r\n                      onClick={() => {\r\n                        Delete();\r\n                      }}\r\n                    >\r\n                      <DeleteForeverIcon color=\"error\" />\r\n                    </IconButton>\r\n                  </center>\r\n                ) : (\r\n                  <center>\r\n                    <IconButton\r\n                      onClick={() => {\r\n                        setsubname(eve.Name);\r\n                        setdatetime(eve.datetime);\r\n                        setdescription(eve.description);\r\n                        setvenue(eve.Venue);\r\n                        setedit(true);\r\n                        settoedit(index);\r\n                        setadd(false);\r\n                      }}\r\n                    >\r\n                      <CreateIcon />\r\n                    </IconButton>\r\n                    <IconButton\r\n                      onClick={() => {\r\n                        Deleteone(index);\r\n                      }}\r\n                    >\r\n                      <DeleteForeverIcon color=\"error\" />\r\n                    </IconButton>\r\n                  </center>\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={8} md={10}>\r\n                {edit === true && editselected === index ? (\r\n                  <TextField\r\n                    className=\"w-100 m-7px\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label=\"Sub-Event description\"\r\n                    onChange={(e) => {\r\n                      setdescription(e.target.value);\r\n                    }}\r\n                    value={description}\r\n                  />\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={4} md={2}>\r\n                <center>\r\n                  {props.CurrentEventDetails.VenueType === \"Online\" ? (\r\n                    <ControlPointIcon className=\"schedule-l-icon\" />\r\n                  ) : (\r\n                    <LocationOnRoundedIcon className=\"schedule-l-icon\" />\r\n                  )}\r\n                </center>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      {add == true ? (\r\n        <Grid item xs={12} className=\"card-shadow \">\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={8} md={10}>\r\n              <TextField\r\n                className=\"w-100 m-7px\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label=\"Sub-Event Name\"\r\n                onChange={(e) => {\r\n                  setsubname(e.target.value);\r\n                }}\r\n                value={subname}\r\n              />\r\n              <TextField\r\n                className=\"w-100 m-7px\"\r\n                label=\"Venue\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                onChange={(e) => {\r\n                  setvenue(e.target.value);\r\n                }}\r\n                value={venue}\r\n              />\r\n              <form noValidate>\r\n                <TextField\r\n                  id=\"datetime-local\"\r\n                  label=\"Schedule timing\"\r\n                  type=\"datetime-local\"\r\n                  defaultValue=\"2017-05-24T10:30\"\r\n                  className=\"w-100 m-7px\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  onChange={(e) => {\r\n                    setdatetime(e.target.value);\r\n                  }}\r\n                  value={datetime}\r\n                />\r\n              </form>\r\n              <TextField\r\n                className=\"w-100 m-7px\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label=\"Sub-Event description \"\r\n                onChange={(e) => {\r\n                  setdescription(e.target.value);\r\n                }}\r\n                value={description}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4} md={2}>\r\n              <center>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    save();\r\n                  }}\r\n                >\r\n                  <CheckCircleOutlineIcon color=\"success\" />\r\n                </IconButton>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    Delete();\r\n                    setadd(false);\r\n                  }}\r\n                >\r\n                  <DeleteForeverIcon color=\"error\" />\r\n                </IconButton>\r\n              </center>\r\n              <center>\r\n                {props.CurrentEventDetails.VenueType === \"Online\" ? (\r\n                  <ControlPointIcon className=\"schedule-l-icon\" />\r\n                ) : (\r\n                  <LocationOnRoundedIcon className=\"schedule-l-icon\" />\r\n                )}\r\n              </center>\r\n            </Grid>\r\n            <Grid item xs={8} md={10}></Grid>\r\n            <Grid item xs={4} md={2}></Grid>\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <Grid item xs={12} md={12}>\r\n        <AddCircleRoundedIcon\r\n          onClick={() => {\r\n            setadd(true);\r\n            setedit(false);\r\n            settoedit(null);\r\n          }}\r\n          fontSize=\"large\"\r\n          className=\"add-button fr bottom right\"\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\AddEvent\\Extras\\Album.js",["526","527","528","529","530","531","532","533"],"import React, { useState, useCallback } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport Gallery from \"../../../Assets/ChooseFromGallery.svg\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport \"./Extras.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { SAVEALBUM, DELETEALBUM } from \"../../../Redux/Actions/EventActions\";\r\nexport default function Album(props) {\r\n  const dispatch = useDispatch();\r\n  const Eventdata = useSelector((state) => state.Eventdata);\r\n  let bkpalbum = [];\r\n  let filetype = [];\r\n  const [album, setAlbum] = useState([...Eventdata.ALBUM]);\r\n\r\n  const save = async () => {\r\n    dispatch({\r\n      type: SAVEALBUM,\r\n      payload: album,\r\n    });\r\n    props.open(false);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setAlbum([]);\r\n  };\r\n  const onDrop = useCallback(async (acceptedFiles) => {\r\n    bkpalbum = [];\r\n    filetype = [];\r\n\r\n    for (let i = 0; i < acceptedFiles.length; i++) {\r\n      if (acceptedFiles[i].size > 5259265) {\r\n      } else {\r\n        let type = acceptedFiles[i].type.split(\"/\");\r\n        type = type[1];\r\n        await getBase64(acceptedFiles[i]).then(async (data) => {\r\n          await bkpalbum.push({ data: data, type: type });\r\n          await filetype.push(type);\r\n        });\r\n      }\r\n    }\r\n    await setAlbum(bkpalbum);\r\n    return true;\r\n  }, []);\r\n\r\n  function getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  }\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    accept: \"image/jpeg, image/png, image/jpg\",\r\n  });\r\n\r\n  const deleteimage = (i) => {\r\n    let albumcpy = [...album];\r\n    albumcpy = albumcpy.filter((item, index) => i !== index);\r\n    setAlbum([...albumcpy]);\r\n  };\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid item xs={12}>\r\n        <div {...getRootProps()}>\r\n          <input {...getInputProps()} />\r\n          <img src={Gallery} className=\"w-100 uploadhere\" />\r\n        </div>\r\n      </Grid>\r\n      <Grid item xs={12} className=\"ofh view\">\r\n        <Grid container spacing={4}>\r\n          {album.length > 0\r\n            ? album.map((image, index) => (\r\n                <Grid item xs={4} md={2} key={\"img\" + index}>\r\n                  <CancelIcon\r\n                    onClick={() => {\r\n                      deleteimage(index);\r\n                    }}\r\n                    color=\"secondary\"\r\n                    className=\"delete-img\"\r\n                  />\r\n                  <img src={image.data} className=\"w-100 preview\" />\r\n                </Grid>\r\n              ))\r\n            : Array.from({ length: 30 }, (value, key) => (\r\n                <Grid\r\n                  item\r\n                  xs={2}\r\n                  md={1}\r\n                  key={\"img\" + key}\r\n                  className=\"w-100 preview grey m-5px\"\r\n                ></Grid>\r\n              ))}\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12} className=\"submit jcc\">\r\n        <button\r\n          onClick={() => {\r\n            save();\r\n          }}\r\n          className=\"add-album  \"\r\n        >\r\n          Save\r\n        </button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\AddEvent\\Extras\\Story.js",["534","535","536","537","538","539","540","541"],"import React, { useState, useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport Gallery from \"../../../Assets/ChooseFromGallery.svg\";\r\nimport { Grid, TextField, IconButton } from \"@material-ui/core\";\r\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { SAVESTORY, DELETESTORY } from \"../../../Redux/Actions/EventActions\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport AddCircleRoundedIcon from \"@material-ui/icons/AddCircleRounded\";\r\nexport default function Story(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const Eventdata = useSelector((state) => state.Eventdata);\r\n  const [subStory, setsubStory] = useState(Eventdata.STORY);\r\n  const [subname, setsubname] = useState(\"\");\r\n  const [file, setfile] = useState(\"\");\r\n  const [filetype, setfiletype] = useState(\"\");\r\n  const [datetime, setdatetime] = useState(\"\");\r\n  const [description, setdescription] = useState(\"\");\r\n  const [currentedited, setcurrentedited] = useState(null);\r\n  const [add, setadd] = useState(false);\r\n  const [edit, setedit] = useState(false);\r\n  const [isError, setError] = useState(false);\r\n  const save = async () => {\r\n    if (\r\n      subname !== \"\" &&\r\n      datetime !== \"\" &&\r\n      description !== \"\" &&\r\n      file !== \"\"\r\n    ) {\r\n      setError(false);\r\n      let data = {\r\n        Name: subname,\r\n        datetime: datetime,\r\n        description: description,\r\n        file: file,\r\n        filetype: filetype,\r\n      };\r\n      console.log([...subStory, data]);\r\n      await setsubStory([...subStory, data]);\r\n\r\n      dispatch({\r\n        type: SAVESTORY,\r\n        payload: [...subStory, data],\r\n      });\r\n      Delete();\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n  const onDrop = useCallback(async (acceptedFiles) => {\r\n    let dataurl = \"\";\r\n\r\n    if (acceptedFiles[0].size > 5259265) {\r\n    } else {\r\n      let type = acceptedFiles[0].type.split(\"/\");\r\n      await getBase64(acceptedFiles[0]).then(async (data) => {\r\n        setfile(data);\r\n        setfiletype(type[1]);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  function getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  }\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    multiple: false,\r\n    accept: \"image/jpeg, image/png, image/jpg\",\r\n  });\r\n\r\n  const Delete = () => {\r\n    setsubname(\"\");\r\n    setfile(\"\");\r\n    setfiletype(\"\");\r\n    setdatetime(\"\");\r\n    setdescription(\"\");\r\n    setadd(false);\r\n  };\r\n  const Deletesingle = (i) => {\r\n    let subStorycpy = [...subStory];\r\n\r\n    subStorycpy = subStorycpy.filter((eventdata, index) => {\r\n      return index !== i;\r\n    });\r\n    dispatch({\r\n      type: SAVESTORY,\r\n      payload: subStorycpy,\r\n    });\r\n    setsubStory(subStorycpy);\r\n    setedit(false);\r\n    setcurrentedited(null);\r\n  };\r\n  const settoedit = (i) => {\r\n    let data = { ...subStory[i] };\r\n    setsubname(data.Name);\r\n    setfile(data.file);\r\n    setfiletype(data.filetype);\r\n    setdatetime(data.datetime);\r\n    setdescription(data.description);\r\n  };\r\n  const saveedit = async () => {\r\n    let subStorycpy = [...subStory];\r\n    if (\r\n      subname !== \"\" &&\r\n      datetime !== \"\" &&\r\n      description !== \"\" &&\r\n      file !== \"\"\r\n    ) {\r\n      setError(false);\r\n      let data = {\r\n        Name: subname,\r\n        datetime: datetime,\r\n        description: description,\r\n        file: file,\r\n        filetype: filetype,\r\n      };\r\n      subStorycpy[currentedited] = data;\r\n      await setsubStory([...subStorycpy]);\r\n      dispatch({\r\n        type: SAVESTORY,\r\n        payload: subStory,\r\n      });\r\n      Delete();\r\n      setedit(false);\r\n    } else {\r\n      setError(true);\r\n    }\r\n  };\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12}></Grid>\r\n      <Grid item xs={12}>\r\n        {subStory.map((eve, index) => (\r\n          <Grid\r\n            key={eve.Name + index}\r\n            container\r\n            spacing={0}\r\n            className=\"card-shadow  m-b-10  \"\r\n          >\r\n            <Grid item xs={4} md={3}>\r\n              {edit === true && currentedited === index ? (\r\n                <div {...getRootProps()} className=\"w-100\">\r\n                  <input {...getInputProps()} className=\"w-100\" />\r\n                  {eve.filetype === \"png\" ||\r\n                  eve.filetype === \"jpg\" ||\r\n                  eve.filetype === \"jpeg\" ? (\r\n                    <img\r\n                      src={eve.file === undefined ? \" \" : eve.file}\r\n                      className=\"w-100 story-image\"\r\n                    />\r\n                  ) : (\r\n                    <video\r\n                      src={eve.file === undefined ? \" \" : eve.file}\r\n                      className=\"w-100 story-image\"\r\n                    />\r\n                  )}\r\n                  {isError === true && file === \"\" ? (\r\n                    <span className=\"error\">please add valid image</span>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </div>\r\n              ) : eve.filetype === \"png\" ||\r\n                eve.filetype === \"jpg\" ||\r\n                eve.filetype === \"jpeg\" ? (\r\n                <img\r\n                  src={eve.file === undefined ? \" \" : eve.file}\r\n                  className=\"w-100  story-image\"\r\n                />\r\n              ) : (\r\n                <video\r\n                  src={eve.file === undefined ? \" \" : eve.file}\r\n                  className=\"w-100  story-image\"\r\n                />\r\n              )}{\" \"}\r\n            </Grid>\r\n            <Grid item xs={8} md={7}>\r\n              <Grid container spacing={0} className=\"m-5px\">\r\n                <Grid item xs={12}>\r\n                  {edit === true && currentedited === index ? (\r\n                    <TextField\r\n                      className=\"w-100\"\r\n                      label=\"Sub-Event Name\"\r\n                      onChange={(e) => {\r\n                        setsubname(e.target.value);\r\n                      }}\r\n                      value={subname}\r\n                      error={isError === true && subname === \"\" ? true : false}\r\n                    />\r\n                  ) : (\r\n                    <h2 className=\"m-0\">{eve.Name}</h2>\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  {edit === true && currentedited === index ? (\r\n                    <TextField\r\n                      className=\"w-100 m-b-5px \"\r\n                      label=\"Sub-Event description\"\r\n                      onChange={(e) => {\r\n                        setdescription(e.target.value);\r\n                      }}\r\n                      value={description}\r\n                      error={\r\n                        isError === true && description === \"\" ? true : false\r\n                      }\r\n                    />\r\n                  ) : (\r\n                    <p> {eve.description}</p>\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  {edit === true && currentedited === index ? (\r\n                    <form noValidate>\r\n                      <TextField\r\n                        id=\"datetime-local\"\r\n                        label=\"Schedule timing\"\r\n                        type=\"datetime-local\"\r\n                        defaultValue=\"2017-05-24T10:30\"\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        className=\"w-100 \"\r\n                        onChange={(e) => {\r\n                          setdatetime(e.target.value);\r\n                        }}\r\n                        value={datetime}\r\n                        error={\r\n                          isError === true && datetime === \"\" ? true : false\r\n                        }\r\n                      />\r\n                    </form>\r\n                  ) : (\r\n                    eve.datetime\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} md={2}>\r\n              <center>\r\n                {edit === true && currentedited === index ? (\r\n                  <IconButton\r\n                    onClick={() => {\r\n                      saveedit();\r\n                    }}\r\n                  >\r\n                    <CheckCircleOutlineIcon color=\"success\" />\r\n                  </IconButton>\r\n                ) : (\r\n                  <>\r\n                    <IconButton\r\n                      onClick={async () => {\r\n                        setedit(true);\r\n                        setadd(false);\r\n                        Delete();\r\n                        await setcurrentedited(index);\r\n                        await settoedit(index);\r\n                      }}\r\n                    >\r\n                      <CreateIcon color=\"success\" />\r\n                    </IconButton>\r\n                  </>\r\n                )}\r\n                <IconButton\r\n                  onClick={() => {\r\n                    Deletesingle(index);\r\n                  }}\r\n                >\r\n                  <DeleteForeverIcon color=\"error\" />\r\n                </IconButton>\r\n              </center>\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        className={add === false ? \"hide\" : \"show card-shadow m-b-10 \"}\r\n      >\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={4} md={2}>\r\n            {file === \"\" ? (\r\n              <div {...getRootProps()} className=\"w-100\">\r\n                <input {...getInputProps()} className=\"w-100\" />\r\n                <img\r\n                  src={Gallery}\r\n                  className=\"w-100 uploadhere\"\r\n                  className=\"w-100\"\r\n                />\r\n              </div>\r\n            ) : filetype === \"png\" ||\r\n              filetype === \"jpg\" ||\r\n              filetype === \"jpeg\" ? (\r\n              <img src={file} className=\"w-100 story-image\" />\r\n            ) : (\r\n              <div {...getRootProps()} className=\"w-100\">\r\n                <input {...getInputProps()} className=\"w-100\" />\r\n                <video src={file} className=\"w-100  story-image\" />\r\n              </div>\r\n            )}\r\n            {isError === true && file === \"\" ? (\r\n              <span className=\"error\">please add valid image</span>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={8} md={8} className=\"\">\r\n            <TextField\r\n              className=\"w-100\"\r\n              label=\"Sub-Event Name\"\r\n              onChange={(e) => {\r\n                setsubname(e.target.value);\r\n              }}\r\n              value={subname}\r\n              error={isError === true && subname === \"\" ? true : false}\r\n            />\r\n\r\n            <TextField\r\n              className=\"w-100 m-b-5px \"\r\n              label=\"Sub-Event description\"\r\n              onChange={(e) => {\r\n                setdescription(e.target.value);\r\n              }}\r\n              value={description}\r\n              error={isError === true && description === \"\" ? true : false}\r\n            />\r\n\r\n            <form noValidate>\r\n              <TextField\r\n                id=\"datetime-local\"\r\n                label=\"Schedule timing\"\r\n                type=\"datetime-local\"\r\n                defaultValue=\"2017-05-24T10:30\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                className=\"w-100 \"\r\n                onChange={(e) => {\r\n                  setdatetime(e.target.value);\r\n                }}\r\n                error={isError === true && datetime === \"\" ? true : false}\r\n                value={datetime}\r\n              />\r\n            </form>\r\n          </Grid>\r\n          <Grid item xs={12} md={2}>\r\n            <center>\r\n              <IconButton\r\n                onClick={() => {\r\n                  save();\r\n                }}\r\n              >\r\n                <CheckCircleOutlineIcon color=\"success\" />\r\n              </IconButton>\r\n              <IconButton\r\n                onClick={() => {\r\n                  Delete();\r\n                }}\r\n              >\r\n                <DeleteForeverIcon color=\"error\" />\r\n              </IconButton>\r\n            </center>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12} md={12}>\r\n        <AddCircleRoundedIcon\r\n          fontSize=\"large\"\r\n          className=\"add-button fr bottom right\"\r\n          onClick={() => {\r\n            Delete();\r\n            setcurrentedited(\"\");\r\n            setedit(false);\r\n            setadd(true);\r\n          }}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Utils\\FileUpload_Download.js",[],"C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\Helpers\\Maps\\Maps.js",["542","543","544","545","546"],"import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport {\r\n  GoogleMap,\r\n  useLoadScript,\r\n  Marker,\r\n  InfoWindow,\r\n} from \"@react-google-maps/api\";\r\nimport usePlacesAutocomplete, {\r\n  getGeocode,\r\n  getLatLng,\r\n} from \"use-places-autocomplete\";\r\nimport {\r\n  Combobox,\r\n  ComboboxInput,\r\n  ComboboxPopover,\r\n  ComboboxList,\r\n  ComboboxOption,\r\n} from \"@reach/combobox\";\r\nimport { formatRelative } from \"date-fns\";\r\nimport \"./Maps.css\";\r\nimport \"@reach/combobox/styles.css\";\r\nimport Geocode from \"react-geocode\";\r\nlet mapStyles = [\r\n  {\r\n    featureType: \"all\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        weight: \"2.00\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"all\",\r\n    elementType: \"geometry.stroke\",\r\n    stylers: [\r\n      {\r\n        color: \"#9c9c9c\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"all\",\r\n    elementType: \"labels.text\",\r\n    stylers: [\r\n      {\r\n        visibility: \"on\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"landscape\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        color: \"#f2f2f2\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"landscape\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#ffffff\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"landscape.man_made\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#ffffff\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"poi\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        visibility: \"off\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        saturation: -100,\r\n      },\r\n      {\r\n        lightness: 45,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#eeeeee\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#7b7b7b\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road\",\r\n    elementType: \"labels.text.stroke\",\r\n    stylers: [\r\n      {\r\n        color: \"#ffffff\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.highway\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        visibility: \"simplified\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"road.arterial\",\r\n    elementType: \"labels.icon\",\r\n    stylers: [\r\n      {\r\n        visibility: \"off\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"transit\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        visibility: \"off\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"water\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        color: \"#46bcec\",\r\n      },\r\n      {\r\n        visibility: \"on\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"water\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#c8d7d4\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"water\",\r\n    elementType: \"labels.text.fill\",\r\n    stylers: [\r\n      {\r\n        color: \"#070707\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    featureType: \"water\",\r\n    elementType: \"labels.text.stroke\",\r\n    stylers: [\r\n      {\r\n        color: \"#ffffff\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst libraries = [\"places\"];\r\nconst mapContainerStyle = {\r\n  height: \"400px\",\r\n  width: \"100%\",\r\n  border: \"solid\",\r\n  display: \"none\",\r\n};\r\nconst options = {\r\n  styles: mapStyles,\r\n  disableDefaultUI: false,\r\n  zoomControl: true,\r\n  gestureHandling: \"cooperative\",\r\n};\r\nconst center = {\r\n  lat: 20.5937,\r\n  lng: 78.9629,\r\n};\r\n\r\nexport default function Map(props) {\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: \"AIzaSyDGvvMy7XFQMmNOKRraAjoFcjHcVElEblo\",\r\n    libraries,\r\n  });\r\n\r\n  Geocode.setApiKey(\"AIzaSyDGvvMy7XFQMmNOKRraAjoFcjHcVElEblo\");\r\n\r\n  Geocode.setLanguage(\"en\");\r\n  const [markers, setMarkers] = useState([]);\r\n  const [selected, setSelected] = useState(null);\r\n  const [adderss, setAddress] = useState(\"\");\r\n  const [Location, setLocation] = useState(\"\");\r\n  useEffect(() => {\r\n    try {\r\n      let data = JSON.parse(props.CurrentEventDetails.location);\r\n      setAddress(data.Location);\r\n      setLocation(data.Location);\r\n    } catch (err) {\r\n      setLocation(\"\");\r\n    }\r\n  }, []);\r\n\r\n  const onMapClick = useCallback(async (e) => {\r\n    let lat = e.latLng.lat();\r\n    let long = e.latLng.lng();\r\n    setMarkers((current) => [\r\n      {\r\n        lat: e.latLng.lat(),\r\n        lng: e.latLng.lng(),\r\n        time: new Date(),\r\n      },\r\n    ]);\r\n    Geocode.fromLatLng(e.latLng.lat(), e.latLng.lng()).then(\r\n      (response) => {\r\n        const faddress = response.results[0].formatted_address;\r\n\r\n        setAddress(faddress);\r\n\r\n        let location = JSON.stringify({ lat, long, faddress });\r\n        console.log({\r\n          ...props.CurrentEventDetails,\r\n          Location: location,\r\n        });\r\n        // props.setLocation(location);\r\n        // if (props.CurrentEventDetails.VenueType === \"Offline\") {\r\n        //   props.SetCurrentEventDetails({\r\n        //     ...props.CurrentEventDetails,\r\n        //     Location: location,\r\n        //     Link: \"\",\r\n        //   });\r\n        // } else {\r\n        //   props.SetCurrentEventDetails({\r\n        //     ...props.CurrentEventDetails,\r\n        //     Location: location,\r\n        //   });\r\n        // }\r\n\r\n        console.log(faddress);\r\n      },\r\n      (error) => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  const mapRef = useRef();\r\n  const onMapLoad = useCallback((map) => {\r\n    mapRef.current = map;\r\n  }, []);\r\n\r\n  const panTo = useCallback(({ lat, lng }) => {\r\n    let location = JSON.stringify({ lat, lng });\r\n    console.log(location);\r\n\r\n    mapRef.current.panTo({ lat, lng });\r\n    mapRef.current.setZoom(20);\r\n  }, []);\r\n\r\n  if (loadError) return \"Error\";\r\n  if (!isLoaded) return \"Loading...\";\r\n\r\n  return (\r\n    <div>\r\n      <h1></h1>\r\n\r\n      <Search\r\n        panTo={panTo}\r\n        Location={Location}\r\n        CurrentEventDetails={props.CurrentEventDetails}\r\n        SetCurrentEventDetails={props.SetCurrentEventDetails}\r\n      />\r\n\r\n      <GoogleMap\r\n        id=\"map\"\r\n        mapContainerStyle={mapContainerStyle}\r\n        zoom={5}\r\n        center={center}\r\n        options={options}\r\n        onClick={onMapClick}\r\n        onLoad={onMapLoad}\r\n        options={{ scrollwheel: false }}\r\n        style={{ display: \"none\" }}\r\n      >\r\n        {markers.map((marker) => (\r\n          <Marker\r\n            key={`${marker.lat}-${marker.lng}`}\r\n            position={{ lat: marker.lat, lng: marker.lng }}\r\n            onClick={() => {\r\n              setSelected(marker);\r\n            }}\r\n          />\r\n        ))}\r\n\r\n        {selected ? (\r\n          <InfoWindow\r\n            position={{ lat: selected.lat, lng: selected.lng }}\r\n            onCloseClick={() => {\r\n              setSelected(null);\r\n            }}\r\n          >\r\n            <div>\r\n              <h2>{adderss}</h2>\r\n            </div>\r\n          </InfoWindow>\r\n        ) : null}\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Search(props) {\r\n  console.log(props);\r\n  const {\r\n    ready,\r\n    value,\r\n    suggestions: { status, data },\r\n    setValue,\r\n    clearSuggestions,\r\n  } = usePlacesAutocomplete({\r\n    requestOptions: {\r\n      location: { lat: () => 43.6532, lng: () => -79.3832 },\r\n      radius: 100 * 1000,\r\n    },\r\n  });\r\n\r\n  // https://developers.google.com/maps/documentation/javascript/reference/places-autocomplete-service#AutocompletionRequest\r\n\r\n  const handleInput = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const handleSelect = async (address) => {\r\n    setValue(address, false);\r\n    clearSuggestions();\r\n    debugger;\r\n    try {\r\n      const results = await getGeocode({ address });\r\n      const { lat, lng } = await getLatLng(results[0]);\r\n\r\n      props.panTo({ lat, lng });\r\n      console.log(results);\r\n      let location = await JSON.stringify({ lat, lng, address });\r\n\r\n      if (props.CurrentEventDetails.VenueType === \"Offline\") {\r\n        await props.SetCurrentEventDetails({\r\n          ...props.CurrentEventDetails,\r\n          Location: location,\r\n          Link: \"\",\r\n        });\r\n      } else {\r\n        await props.SetCurrentEventDetails({\r\n          ...props.CurrentEventDetails,\r\n          Location: location,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"😱 Error: \", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-100\">\r\n      <Combobox\r\n        onSelect={handleSelect}\r\n        CurrentEventDetails={props.CurrentEventDetails}\r\n        setCurrentEventDetails={props.setCurrentEventDetails}\r\n      >\r\n        <ComboboxInput\r\n          value={value}\r\n          onChange={handleInput}\r\n          disabled={!ready}\r\n          Placeholder=\"Search your location\"\r\n          className=\"locationSearch\"\r\n        />\r\n        <ComboboxPopover>\r\n          <ComboboxList>\r\n            {status === \"OK\" &&\r\n              data.map(({ id, description }) => (\r\n                <ComboboxOption key={id} value={description} />\r\n              ))}\r\n          </ComboboxList>\r\n        </ComboboxPopover>\r\n      </Combobox>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\bishi\\Downloads\\Compressed\\frontedn\\src\\Components\\AddEvent\\CreateEvent\\EventNameBox.js",["547","548"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nexport default function EventNameBox(props) {\r\n  const handleClick = (index) => {\r\n    props.SelectEvent(index);\r\n  };\r\n  const [rdata, setData] = useState(props.data);\r\n\r\n  useEffect(() => {\r\n    setData(props.data);\r\n  }, [props.data, props.SelectedEvent]);\r\n\r\n  return (\r\n    <Grid container spacing={1} className=\"eventslider\">\r\n      {rdata.map((d, index) => (\r\n        <Grid\r\n          item\r\n          xs={12 / rdata.length}\r\n          sm={12 / rdata.length}\r\n          md={12 / rdata.length}\r\n          key={index + \"k\"}\r\n        >\r\n          <Button\r\n            aria-controls=\"simple-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={() => {\r\n              handleClick(index);\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={\r\n              props.SelectedEvent === index\r\n                ? \"event-buttons current\"\r\n                : \"event-buttons \"\r\n            }\r\n          >\r\n            {d.Name}\r\n          </Button>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n",{"ruleId":"549","replacedBy":"550"},{"ruleId":"551","replacedBy":"552"},{"ruleId":"553","severity":1,"message":"554","line":17,"column":13,"nodeType":"555","endLine":31,"endColumn":4},{"ruleId":"553","severity":1,"message":"556","line":31,"column":6,"nodeType":"557","endLine":31,"endColumn":8,"suggestions":"558"},{"ruleId":"559","severity":1,"message":"560","line":15,"column":8,"nodeType":"561","messageId":"562","endLine":15,"endColumn":21},{"ruleId":"559","severity":1,"message":"563","line":17,"column":8,"nodeType":"561","messageId":"562","endLine":17,"endColumn":18},{"ruleId":"559","severity":1,"message":"564","line":21,"column":8,"nodeType":"561","messageId":"562","endLine":21,"endColumn":16},{"ruleId":"559","severity":1,"message":"565","line":28,"column":8,"nodeType":"561","messageId":"562","endLine":28,"endColumn":15},{"ruleId":"559","severity":1,"message":"566","line":29,"column":8,"nodeType":"561","messageId":"562","endLine":29,"endColumn":18},{"ruleId":"559","severity":1,"message":"567","line":30,"column":8,"nodeType":"561","messageId":"562","endLine":30,"endColumn":22},{"ruleId":"559","severity":1,"message":"568","line":1,"column":27,"nodeType":"561","messageId":"562","endLine":1,"endColumn":36},{"ruleId":"559","severity":1,"message":"569","line":10,"column":15,"nodeType":"561","messageId":"562","endLine":10,"endColumn":21},{"ruleId":"570","severity":1,"message":"571","line":21,"column":15,"nodeType":"572","endLine":21,"endColumn":54},{"ruleId":"570","severity":1,"message":"571","line":58,"column":15,"nodeType":"572","endLine":58,"endColumn":47},{"ruleId":"559","severity":1,"message":"573","line":77,"column":9,"nodeType":"561","messageId":"562","endLine":77,"endColumn":15},{"ruleId":"559","severity":1,"message":"574","line":121,"column":7,"nodeType":"561","messageId":"562","endLine":121,"endColumn":28},{"ruleId":"575","severity":1,"message":"576","line":169,"column":33,"nodeType":"555","messageId":"577","endLine":169,"endColumn":35},{"ruleId":"578","severity":1,"message":"579","line":177,"column":29,"nodeType":"580","messageId":"581","endLine":177,"endColumn":30},{"ruleId":"553","severity":1,"message":"554","line":185,"column":13,"nodeType":"555","endLine":187,"endColumn":4},{"ruleId":"553","severity":1,"message":"582","line":187,"column":6,"nodeType":"557","endLine":187,"endColumn":8,"suggestions":"583"},{"ruleId":"570","severity":1,"message":"571","line":244,"column":15,"nodeType":"572","endLine":244,"endColumn":33},{"ruleId":"559","severity":1,"message":"584","line":6,"column":16,"nodeType":"561","messageId":"562","endLine":6,"endColumn":25},{"ruleId":"559","severity":1,"message":"585","line":24,"column":10,"nodeType":"561","messageId":"562","endLine":24,"endColumn":17},{"ruleId":"559","severity":1,"message":"586","line":25,"column":10,"nodeType":"561","messageId":"562","endLine":25,"endColumn":20},{"ruleId":"559","severity":1,"message":"587","line":27,"column":9,"nodeType":"561","messageId":"562","endLine":27,"endColumn":17},{"ruleId":"588","severity":1,"message":"589","line":67,"column":12,"nodeType":"561","messageId":"590","endLine":67,"endColumn":23},{"ruleId":"575","severity":1,"message":"576","line":79,"column":54,"nodeType":"555","messageId":"577","endLine":79,"endColumn":56},{"ruleId":"553","severity":1,"message":"591","line":92,"column":6,"nodeType":"557","endLine":92,"endColumn":12,"suggestions":"592"},{"ruleId":"559","severity":1,"message":"593","line":4,"column":8,"nodeType":"561","messageId":"562","endLine":4,"endColumn":21},{"ruleId":"559","severity":1,"message":"594","line":13,"column":8,"nodeType":"561","messageId":"562","endLine":13,"endColumn":37},{"ruleId":"559","severity":1,"message":"595","line":14,"column":8,"nodeType":"561","messageId":"562","endLine":14,"endColumn":36},{"ruleId":"575","severity":1,"message":"576","line":35,"column":54,"nodeType":"555","messageId":"577","endLine":35,"endColumn":56},{"ruleId":"553","severity":1,"message":"591","line":48,"column":6,"nodeType":"557","endLine":48,"endColumn":12,"suggestions":"596"},{"ruleId":"570","severity":1,"message":"571","line":55,"column":17,"nodeType":"572","endLine":55,"endColumn":35},{"ruleId":"570","severity":1,"message":"571","line":103,"column":19,"nodeType":"572","endLine":103,"endColumn":72},{"ruleId":"559","severity":1,"message":"597","line":2,"column":16,"nodeType":"561","messageId":"562","endLine":2,"endColumn":21},{"ruleId":"559","severity":1,"message":"598","line":8,"column":8,"nodeType":"561","messageId":"562","endLine":8,"endColumn":28},{"ruleId":"559","severity":1,"message":"599","line":9,"column":8,"nodeType":"561","messageId":"562","endLine":9,"endColumn":16},{"ruleId":"553","severity":1,"message":"554","line":13,"column":13,"nodeType":"555","endLine":16,"endColumn":4},{"ruleId":"570","severity":1,"message":"571","line":20,"column":12,"nodeType":"572","endLine":20,"endColumn":50},{"ruleId":"570","severity":1,"message":"571","line":32,"column":11,"nodeType":"572","endLine":32,"endColumn":56},{"ruleId":"578","severity":1,"message":"579","line":50,"column":42,"nodeType":"580","messageId":"581","endLine":50,"endColumn":43},{"ruleId":"578","severity":1,"message":"579","line":50,"column":51,"nodeType":"580","messageId":"581","endLine":50,"endColumn":52},{"ruleId":"553","severity":1,"message":"600","line":50,"column":6,"nodeType":"557","endLine":50,"endColumn":39,"suggestions":"601"},{"ruleId":"602","severity":1,"message":"603","line":63,"column":15,"nodeType":"572","endLine":63,"endColumn":63},{"ruleId":"602","severity":1,"message":"603","line":45,"column":15,"nodeType":"572","endLine":45,"endColumn":60},{"ruleId":"602","severity":1,"message":"603","line":18,"column":11,"nodeType":"572","endLine":18,"endColumn":50},{"ruleId":"602","severity":1,"message":"603","line":23,"column":11,"nodeType":"572","endLine":23,"endColumn":50},{"ruleId":"602","severity":1,"message":"603","line":44,"column":15,"nodeType":"572","endLine":44,"endColumn":60},{"ruleId":"602","severity":1,"message":"603","line":65,"column":11,"nodeType":"572","endLine":71,"endColumn":12},{"ruleId":"602","severity":1,"message":"603","line":33,"column":25,"nodeType":"572","endLine":33,"endColumn":37},{"ruleId":"602","severity":1,"message":"603","line":36,"column":25,"nodeType":"572","endLine":36,"endColumn":37},{"ruleId":"602","severity":1,"message":"603","line":39,"column":25,"nodeType":"572","endLine":39,"endColumn":37},{"ruleId":"602","severity":1,"message":"603","line":47,"column":25,"nodeType":"572","endLine":47,"endColumn":37},{"ruleId":"602","severity":1,"message":"603","line":50,"column":25,"nodeType":"572","endLine":50,"endColumn":37},{"ruleId":"602","severity":1,"message":"603","line":53,"column":25,"nodeType":"572","endLine":53,"endColumn":37},{"ruleId":"602","severity":1,"message":"603","line":61,"column":25,"nodeType":"572","endLine":61,"endColumn":37},{"ruleId":"602","severity":1,"message":"603","line":64,"column":25,"nodeType":"572","endLine":64,"endColumn":37},{"ruleId":"602","severity":1,"message":"603","line":67,"column":25,"nodeType":"572","endLine":67,"endColumn":37},{"ruleId":"602","severity":1,"message":"603","line":76,"column":21,"nodeType":"572","endLine":76,"endColumn":33},{"ruleId":"602","severity":1,"message":"603","line":79,"column":21,"nodeType":"572","endLine":79,"endColumn":33},{"ruleId":"602","severity":1,"message":"603","line":82,"column":21,"nodeType":"572","endLine":82,"endColumn":33},{"ruleId":"602","severity":1,"message":"603","line":85,"column":21,"nodeType":"572","endLine":85,"endColumn":33},{"ruleId":"602","severity":1,"message":"603","line":6,"column":7,"nodeType":"572","endLine":6,"endColumn":19},{"ruleId":"602","severity":1,"message":"603","line":9,"column":7,"nodeType":"572","endLine":9,"endColumn":38},{"ruleId":"602","severity":1,"message":"603","line":12,"column":7,"nodeType":"572","endLine":12,"endColumn":19},{"ruleId":"602","severity":1,"message":"603","line":13,"column":7,"nodeType":"572","endLine":13,"endColumn":19},{"ruleId":"602","severity":1,"message":"603","line":14,"column":7,"nodeType":"572","endLine":14,"endColumn":19},{"ruleId":"559","severity":1,"message":"604","line":2,"column":47,"nodeType":"561","messageId":"562","endLine":2,"endColumn":53},{"ruleId":"559","severity":1,"message":"605","line":4,"column":8,"nodeType":"561","messageId":"562","endLine":4,"endColumn":18},{"ruleId":"559","severity":1,"message":"606","line":5,"column":8,"nodeType":"561","messageId":"562","endLine":5,"endColumn":17},{"ruleId":"559","severity":1,"message":"607","line":6,"column":8,"nodeType":"561","messageId":"562","endLine":6,"endColumn":17},{"ruleId":"602","severity":1,"message":"603","line":14,"column":11,"nodeType":"572","endLine":14,"endColumn":75},{"ruleId":"602","severity":1,"message":"603","line":33,"column":13,"nodeType":"572","endLine":33,"endColumn":25},{"ruleId":"602","severity":1,"message":"603","line":36,"column":13,"nodeType":"572","endLine":36,"endColumn":25},{"ruleId":"602","severity":1,"message":"603","line":39,"column":13,"nodeType":"572","endLine":39,"endColumn":25},{"ruleId":"602","severity":1,"message":"603","line":42,"column":13,"nodeType":"572","endLine":42,"endColumn":25},{"ruleId":"559","severity":1,"message":"568","line":1,"column":27,"nodeType":"561","messageId":"562","endLine":1,"endColumn":36},{"ruleId":"559","severity":1,"message":"604","line":3,"column":47,"nodeType":"561","messageId":"562","endLine":3,"endColumn":53},{"ruleId":"559","severity":1,"message":"608","line":7,"column":9,"nodeType":"561","messageId":"562","endLine":7,"endColumn":29},{"ruleId":"602","severity":1,"message":"609","line":15,"column":11,"nodeType":"572","endLine":15,"endColumn":14},{"ruleId":"602","severity":1,"message":"603","line":21,"column":13,"nodeType":"572","endLine":27,"endColumn":14},{"ruleId":"602","severity":1,"message":"603","line":43,"column":13,"nodeType":"572","endLine":49,"endColumn":14},{"ruleId":"602","severity":1,"message":"603","line":72,"column":21,"nodeType":"572","endLine":72,"endColumn":70},{"ruleId":"602","severity":1,"message":"603","line":95,"column":21,"nodeType":"572","endLine":95,"endColumn":70},{"ruleId":"602","severity":1,"message":"603","line":115,"column":21,"nodeType":"572","endLine":115,"endColumn":70},{"ruleId":"602","severity":1,"message":"603","line":135,"column":21,"nodeType":"572","endLine":135,"endColumn":70},{"ruleId":"610","severity":1,"message":"611","line":60,"column":23,"nodeType":"572","endLine":60,"endColumn":70},{"ruleId":"610","severity":1,"message":"611","line":65,"column":23,"nodeType":"572","endLine":65,"endColumn":70},{"ruleId":"610","severity":1,"message":"611","line":70,"column":23,"nodeType":"572","endLine":70,"endColumn":72},{"ruleId":"559","severity":1,"message":"612","line":4,"column":3,"nodeType":"561","messageId":"562","endLine":4,"endColumn":13},{"ruleId":"559","severity":1,"message":"613","line":5,"column":3,"nodeType":"561","messageId":"562","endLine":5,"endColumn":16},{"ruleId":"559","severity":1,"message":"614","line":68,"column":19,"nodeType":"561","messageId":"562","endLine":68,"endColumn":26},{"ruleId":"602","severity":1,"message":"603","line":38,"column":9,"nodeType":"572","endLine":38,"endColumn":80},{"ruleId":"559","severity":1,"message":"615","line":1,"column":10,"nodeType":"561","messageId":"562","endLine":1,"endColumn":27},{"ruleId":"559","severity":1,"message":"597","line":2,"column":16,"nodeType":"561","messageId":"562","endLine":2,"endColumn":21},{"ruleId":"559","severity":1,"message":"598","line":8,"column":8,"nodeType":"561","messageId":"562","endLine":8,"endColumn":28},{"ruleId":"559","severity":1,"message":"599","line":9,"column":8,"nodeType":"561","messageId":"562","endLine":9,"endColumn":16},{"ruleId":"559","severity":1,"message":"616","line":10,"column":8,"nodeType":"561","messageId":"562","endLine":10,"endColumn":15},{"ruleId":"553","severity":1,"message":"554","line":13,"column":13,"nodeType":"555","endLine":16,"endColumn":4},{"ruleId":"570","severity":1,"message":"571","line":20,"column":12,"nodeType":"572","endLine":20,"endColumn":50},{"ruleId":"570","severity":1,"message":"571","line":32,"column":11,"nodeType":"572","endLine":32,"endColumn":56},{"ruleId":"559","severity":1,"message":"617","line":4,"column":16,"nodeType":"561","messageId":"562","endLine":4,"endColumn":22},{"ruleId":"559","severity":1,"message":"618","line":20,"column":7,"nodeType":"561","messageId":"562","endLine":20,"endColumn":16},{"ruleId":"559","severity":1,"message":"619","line":23,"column":30,"nodeType":"561","messageId":"562","endLine":23,"endColumn":51},{"ruleId":"553","severity":1,"message":"554","line":27,"column":13,"nodeType":"555","endLine":35,"endColumn":4},{"ruleId":"553","severity":1,"message":"620","line":28,"column":17,"nodeType":"621","endLine":28,"endColumn":71},{"ruleId":"559","severity":1,"message":"622","line":65,"column":9,"nodeType":"561","messageId":"562","endLine":65,"endColumn":12},{"ruleId":"575","severity":1,"message":"576","line":67,"column":28,"nodeType":"555","messageId":"577","endLine":67,"endColumn":30},{"ruleId":"575","severity":1,"message":"576","line":78,"column":32,"nodeType":"555","messageId":"577","endLine":78,"endColumn":34},{"ruleId":"575","severity":1,"message":"576","line":84,"column":39,"nodeType":"555","messageId":"577","endLine":84,"endColumn":41},{"ruleId":"559","severity":1,"message":"623","line":106,"column":9,"nodeType":"561","messageId":"562","endLine":106,"endColumn":17},{"ruleId":"570","severity":1,"message":"571","line":273,"column":7,"nodeType":"572","endLine":273,"endColumn":59},{"ruleId":"559","severity":1,"message":"624","line":4,"column":3,"nodeType":"561","messageId":"562","endLine":4,"endColumn":13},{"ruleId":"559","severity":1,"message":"625","line":7,"column":3,"nodeType":"561","messageId":"562","endLine":7,"endColumn":8},{"ruleId":"559","severity":1,"message":"626","line":9,"column":8,"nodeType":"561","messageId":"562","endLine":9,"endColumn":18},{"ruleId":"559","severity":1,"message":"627","line":17,"column":8,"nodeType":"561","messageId":"562","endLine":17,"endColumn":27},{"ruleId":"559","severity":1,"message":"628","line":36,"column":11,"nodeType":"561","messageId":"562","endLine":36,"endColumn":23},{"ruleId":"559","severity":1,"message":"629","line":36,"column":25,"nodeType":"561","messageId":"562","endLine":36,"endColumn":38},{"ruleId":"559","severity":1,"message":"630","line":36,"column":40,"nodeType":"561","messageId":"562","endLine":36,"endColumn":52},{"ruleId":"559","severity":1,"message":"631","line":41,"column":10,"nodeType":"561","messageId":"562","endLine":41,"endColumn":19},{"ruleId":"559","severity":1,"message":"632","line":41,"column":21,"nodeType":"561","messageId":"562","endLine":41,"endColumn":36},{"ruleId":"559","severity":1,"message":"633","line":42,"column":10,"nodeType":"561","messageId":"562","endLine":42,"endColumn":13},{"ruleId":"553","severity":1,"message":"634","line":56,"column":6,"nodeType":"557","endLine":60,"endColumn":4,"suggestions":"635"},{"ruleId":"553","severity":1,"message":"636","line":57,"column":5,"nodeType":"637","endLine":59,"endColumn":11},{"ruleId":"638","severity":1,"message":"639","line":69,"column":13,"nodeType":"640","messageId":"641","endLine":69,"endColumn":31},{"ruleId":"559","severity":1,"message":"642","line":6,"column":3,"nodeType":"561","messageId":"562","endLine":6,"endColumn":7},{"ruleId":"559","severity":1,"message":"643","line":7,"column":3,"nodeType":"561","messageId":"562","endLine":7,"endColumn":11},{"ruleId":"559","severity":1,"message":"644","line":8,"column":3,"nodeType":"561","messageId":"562","endLine":8,"endColumn":15},{"ruleId":"559","severity":1,"message":"645","line":9,"column":3,"nodeType":"561","messageId":"562","endLine":9,"endColumn":15},{"ruleId":"559","severity":1,"message":"646","line":11,"column":8,"nodeType":"561","messageId":"562","endLine":11,"endColumn":29},{"ruleId":"559","severity":1,"message":"647","line":1,"column":17,"nodeType":"561","messageId":"562","endLine":1,"endColumn":25},{"ruleId":"559","severity":1,"message":"648","line":45,"column":10,"nodeType":"561","messageId":"562","endLine":45,"endColumn":14},{"ruleId":"559","severity":1,"message":"649","line":45,"column":16,"nodeType":"561","messageId":"562","endLine":45,"endColumn":23},{"ruleId":"638","severity":1,"message":"639","line":53,"column":7,"nodeType":"640","messageId":"641","endLine":53,"endColumn":22},{"ruleId":"559","severity":1,"message":"599","line":4,"column":8,"nodeType":"561","messageId":"562","endLine":4,"endColumn":16},{"ruleId":"559","severity":1,"message":"650","line":7,"column":8,"nodeType":"561","messageId":"562","endLine":7,"endColumn":13},{"ruleId":"559","severity":1,"message":"651","line":10,"column":8,"nodeType":"561","messageId":"562","endLine":10,"endColumn":16},{"ruleId":"559","severity":1,"message":"652","line":11,"column":8,"nodeType":"561","messageId":"562","endLine":11,"endColumn":18},{"ruleId":"559","severity":1,"message":"653","line":13,"column":8,"nodeType":"561","messageId":"562","endLine":13,"endColumn":16},{"ruleId":"559","severity":1,"message":"654","line":14,"column":8,"nodeType":"561","messageId":"562","endLine":14,"endColumn":25},{"ruleId":"559","severity":1,"message":"655","line":15,"column":8,"nodeType":"561","messageId":"562","endLine":15,"endColumn":16},{"ruleId":"559","severity":1,"message":"656","line":6,"column":10,"nodeType":"561","messageId":"562","endLine":6,"endColumn":21},{"ruleId":"559","severity":1,"message":"657","line":8,"column":10,"nodeType":"561","messageId":"562","endLine":8,"endColumn":14},{"ruleId":"559","severity":1,"message":"587","line":11,"column":9,"nodeType":"561","messageId":"562","endLine":11,"endColumn":17},{"ruleId":"553","severity":1,"message":"658","line":29,"column":6,"nodeType":"557","endLine":29,"endColumn":8,"suggestions":"659"},{"ruleId":"559","severity":1,"message":"660","line":28,"column":12,"nodeType":"561","messageId":"562","endLine":28,"endColumn":20},{"ruleId":"559","severity":1,"message":"661","line":48,"column":15,"nodeType":"561","messageId":"562","endLine":48,"endColumn":23},{"ruleId":"553","severity":1,"message":"662","line":18,"column":19,"nodeType":"663","endLine":20,"endColumn":9},{"ruleId":"553","severity":1,"message":"664","line":21,"column":18,"nodeType":"663","endLine":23,"endColumn":9},{"ruleId":"559","severity":1,"message":"647","line":1,"column":17,"nodeType":"561","messageId":"562","endLine":1,"endColumn":25},{"ruleId":"559","severity":1,"message":"568","line":1,"column":27,"nodeType":"561","messageId":"562","endLine":1,"endColumn":36},{"ruleId":"553","severity":1,"message":"665","line":37,"column":6,"nodeType":"557","endLine":37,"endColumn":8,"suggestions":"666"},{"ruleId":"559","severity":1,"message":"630","line":39,"column":40,"nodeType":"561","messageId":"562","endLine":39,"endColumn":52},{"ruleId":"570","severity":1,"message":"571","line":63,"column":11,"nodeType":"572","endLine":72,"endColumn":13},{"ruleId":"570","severity":1,"message":"571","line":82,"column":11,"nodeType":"572","endLine":91,"endColumn":13},{"ruleId":"559","severity":1,"message":"647","line":1,"column":17,"nodeType":"561","messageId":"562","endLine":1,"endColumn":25},{"ruleId":"553","severity":1,"message":"667","line":27,"column":6,"nodeType":"557","endLine":27,"endColumn":8,"suggestions":"668"},{"ruleId":"559","severity":1,"message":"630","line":29,"column":40,"nodeType":"561","messageId":"562","endLine":29,"endColumn":52},{"ruleId":"570","severity":1,"message":"571","line":43,"column":11,"nodeType":"572","endLine":43,"endColumn":50},{"ruleId":"570","severity":1,"message":"571","line":47,"column":9,"nodeType":"572","endLine":47,"endColumn":50},{"ruleId":"559","severity":1,"message":"624","line":5,"column":3,"nodeType":"561","messageId":"562","endLine":5,"endColumn":13},{"ruleId":"559","severity":1,"message":"669","line":12,"column":3,"nodeType":"561","messageId":"562","endLine":12,"endColumn":9},{"ruleId":"559","severity":1,"message":"670","line":22,"column":8,"nodeType":"561","messageId":"562","endLine":22,"endColumn":13},{"ruleId":"559","severity":1,"message":"671","line":23,"column":8,"nodeType":"561","messageId":"562","endLine":23,"endColumn":13},{"ruleId":"559","severity":1,"message":"672","line":24,"column":8,"nodeType":"561","messageId":"562","endLine":24,"endColumn":19},{"ruleId":"559","severity":1,"message":"673","line":27,"column":10,"nodeType":"561","messageId":"562","endLine":27,"endColumn":20},{"ruleId":"559","severity":1,"message":"674","line":41,"column":22,"nodeType":"561","messageId":"562","endLine":41,"endColumn":35},{"ruleId":"559","severity":1,"message":"675","line":50,"column":10,"nodeType":"561","messageId":"562","endLine":50,"endColumn":14},{"ruleId":"559","severity":1,"message":"676","line":50,"column":16,"nodeType":"561","messageId":"562","endLine":50,"endColumn":23},{"ruleId":"553","severity":1,"message":"677","line":56,"column":6,"nodeType":"557","endLine":56,"endColumn":8,"suggestions":"678"},{"ruleId":"553","severity":1,"message":"679","line":62,"column":6,"nodeType":"557","endLine":62,"endColumn":27,"suggestions":"680"},{"ruleId":"559","severity":1,"message":"681","line":63,"column":7,"nodeType":"561","messageId":"562","endLine":63,"endColumn":11},{"ruleId":"559","severity":1,"message":"682","line":67,"column":7,"nodeType":"561","messageId":"562","endLine":67,"endColumn":16},{"ruleId":"559","severity":1,"message":"683","line":69,"column":7,"nodeType":"561","messageId":"562","endLine":69,"endColumn":14},{"ruleId":"559","severity":1,"message":"684","line":70,"column":7,"nodeType":"561","messageId":"562","endLine":70,"endColumn":19},{"ruleId":"559","severity":1,"message":"685","line":71,"column":7,"nodeType":"561","messageId":"562","endLine":71,"endColumn":21},{"ruleId":"559","severity":1,"message":"686","line":74,"column":7,"nodeType":"561","messageId":"562","endLine":74,"endColumn":13},{"ruleId":"559","severity":1,"message":"687","line":79,"column":9,"nodeType":"561","messageId":"562","endLine":79,"endColumn":21},{"ruleId":"559","severity":1,"message":"688","line":94,"column":11,"nodeType":"561","messageId":"562","endLine":94,"endColumn":21},{"ruleId":"570","severity":1,"message":"571","line":125,"column":13,"nodeType":"572","endLine":135,"endColumn":15},{"ruleId":"570","severity":1,"message":"571","line":142,"column":13,"nodeType":"572","endLine":156,"endColumn":15},{"ruleId":"638","severity":1,"message":"639","line":313,"column":11,"nodeType":"640","messageId":"641","endLine":313,"endColumn":29},{"ruleId":"638","severity":1,"message":"639","line":570,"column":17,"nodeType":"640","messageId":"641","endLine":570,"endColumn":52},{"ruleId":"638","severity":1,"message":"639","line":616,"column":21,"nodeType":"640","messageId":"641","endLine":616,"endColumn":56},{"ruleId":"638","severity":1,"message":"639","line":660,"column":21,"nodeType":"640","messageId":"641","endLine":660,"endColumn":56},{"ruleId":"559","severity":1,"message":"568","line":1,"column":27,"nodeType":"561","messageId":"562","endLine":1,"endColumn":36},{"ruleId":"559","severity":1,"message":"616","line":11,"column":8,"nodeType":"561","messageId":"562","endLine":11,"endColumn":15},{"ruleId":"570","severity":1,"message":"571","line":21,"column":15,"nodeType":"572","endLine":21,"endColumn":33},{"ruleId":"638","severity":1,"message":"639","line":97,"column":15,"nodeType":"640","messageId":"641","endLine":97,"endColumn":50},{"ruleId":"638","severity":1,"message":"639","line":111,"column":19,"nodeType":"640","messageId":"641","endLine":111,"endColumn":54},{"ruleId":"638","severity":1,"message":"639","line":126,"column":19,"nodeType":"640","messageId":"641","endLine":126,"endColumn":54},{"ruleId":"559","severity":1,"message":"689","line":1,"column":27,"nodeType":"561","messageId":"562","endLine":1,"endColumn":38},{"ruleId":"559","severity":1,"message":"690","line":2,"column":10,"nodeType":"561","messageId":"562","endLine":2,"endColumn":21},{"ruleId":"559","severity":1,"message":"691","line":3,"column":8,"nodeType":"561","messageId":"562","endLine":3,"endColumn":15},{"ruleId":"559","severity":1,"message":"692","line":22,"column":10,"nodeType":"561","messageId":"562","endLine":22,"endColumn":17},{"ruleId":"693","severity":1,"message":"694","line":236,"column":12,"nodeType":"580","messageId":"695","endLine":236,"endColumn":14},{"ruleId":"559","severity":1,"message":"696","line":8,"column":21,"nodeType":"561","messageId":"562","endLine":8,"endColumn":32},{"ruleId":"559","severity":1,"message":"697","line":24,"column":9,"nodeType":"561","messageId":"562","endLine":24,"endColumn":15},{"ruleId":"553","severity":1,"message":"698","line":28,"column":16,"nodeType":"557","endLine":28,"endColumn":18},{"ruleId":"553","severity":1,"message":"699","line":29,"column":16,"nodeType":"557","endLine":29,"endColumn":18},{"ruleId":"700","severity":1,"message":"701","line":36,"column":48,"nodeType":"555","messageId":"702","endLine":39,"endColumn":10},{"ruleId":"559","severity":1,"message":"630","line":55,"column":40,"nodeType":"561","messageId":"562","endLine":55,"endColumn":52},{"ruleId":"570","severity":1,"message":"571","line":70,"column":11,"nodeType":"572","endLine":70,"endColumn":61},{"ruleId":"570","severity":1,"message":"571","line":85,"column":19,"nodeType":"572","endLine":85,"endColumn":69},{"ruleId":"559","severity":1,"message":"703","line":8,"column":21,"nodeType":"561","messageId":"562","endLine":8,"endColumn":32},{"ruleId":"559","severity":1,"message":"704","line":53,"column":9,"nodeType":"561","messageId":"562","endLine":53,"endColumn":16},{"ruleId":"559","severity":1,"message":"630","line":73,"column":40,"nodeType":"561","messageId":"562","endLine":73,"endColumn":52},{"ruleId":"570","severity":1,"message":"571","line":155,"column":21,"nodeType":"572","endLine":158,"endColumn":23},{"ruleId":"570","severity":1,"message":"571","line":174,"column":17,"nodeType":"572","endLine":177,"endColumn":19},{"ruleId":"570","severity":1,"message":"571","line":293,"column":17,"nodeType":"572","endLine":297,"endColumn":19},{"ruleId":"638","severity":1,"message":"639","line":296,"column":19,"nodeType":"640","messageId":"641","endLine":296,"endColumn":36},{"ruleId":"570","severity":1,"message":"571","line":302,"column":15,"nodeType":"572","endLine":302,"endColumn":63},{"ruleId":"559","severity":1,"message":"705","line":19,"column":10,"nodeType":"561","messageId":"562","endLine":19,"endColumn":24},{"ruleId":"553","severity":1,"message":"706","line":233,"column":6,"nodeType":"557","endLine":233,"endColumn":8,"suggestions":"707"},{"ruleId":"553","severity":1,"message":"708","line":276,"column":6,"nodeType":"557","endLine":276,"endColumn":8,"suggestions":"709"},{"ruleId":"710","severity":1,"message":"711","line":296,"column":7,"nodeType":"572","endLine":296,"endColumn":11},{"ruleId":"638","severity":1,"message":"639","line":313,"column":9,"nodeType":"640","messageId":"641","endLine":313,"endColumn":41},{"ruleId":"559","severity":1,"message":"712","line":3,"column":8,"nodeType":"561","messageId":"562","endLine":3,"endColumn":12},{"ruleId":"559","severity":1,"message":"713","line":4,"column":8,"nodeType":"561","messageId":"562","endLine":4,"endColumn":16},"no-native-reassign",["714"],"no-negated-in-lhs",["715"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'dispatch' and 'props.location.pathname'. Either include them or remove the dependency array.","ArrayExpression",["716"],"no-unused-vars","'AccordionItem' is defined but never used.","Identifier","unusedVar","'BlockTitle' is defined but never used.","'CTAThree' is defined but never used.","'NavLink' is defined but never used.","'PageHeader' is defined but never used.","'PostPagination' is defined but never used.","'useEffect' is defined but never used.","'seturl' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'result' is assigned a value but never used.","'incompleteeventnumber' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","React Hook useEffect has a missing dependency: 'addAnEvent'. Either include it or remove the dependency array.",["717"],"'TextField' is defined but never used.","'hasrsvp' is assigned a value but never used.","'rsvpstatus' is assigned a value but never used.","'dispatch' is assigned a value but never used.","no-redeclare","'handleSwipe' is already defined.","redeclared","React Hook useEffect has missing dependencies: 'Auth.Phone' and 'Eventdata'. Either include them or remove the dependency array.",["718"],"'ArrowBackIcon' is defined but never used.","'KeyboardArrowRightRoundedIcon' is defined but never used.","'KeyboardArrowLeftRoundedIcon' is defined but never used.",["719"],"'Paper' is defined but never used.","'NotificationsOffIcon' is defined but never used.","'InfoIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'Phone' and 'dispatch'. Either include them or remove the dependency array.",["720"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'scroll' is defined but never used.","'AppleTouch' is defined but never used.","'Fevicon32' is defined but never used.","'Fevicon16' is defined but never used.","'handleDropdownStatus' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'EVENTSAVED' is defined but never used.","'EVENTSAVEFAIL' is defined but never used.","'decoded' is assigned a value but never used.","'reactLocalStorage' is defined but never used.","'history' is defined but never used.","'Switch' is defined but never used.","'Eventscpy' is assigned a value but never used.","'setforallparticipants' is assigned a value but never used.","Assignments to the 'supported' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","LogicalExpression","'row' is assigned a value but never used.","'MainCode' is assigned a value but never used.","'InputLabel' is defined but never used.","'Modal' is defined but never used.","'CancelIcon' is defined but never used.","'ImageSelectionModal' is defined but never used.","'getRootProps' is assigned a value but never used.","'getInputProps' is assigned a value but never used.","'isDragActive' is assigned a value but never used.","'showPopup' is assigned a value but never used.","'toggleShowPopup' is assigned a value but never used.","'url' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.Events' and 'props.SelectedEvent'. Either include them or remove the dependency array. If 'seturl' needs the current value of 'props.Events', you can also switch to useReducer instead of useState and read 'props.Events' in the reducer.",["721"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","ConditionalExpression","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'FiberManualRecordIcon' is defined but never used.","'useState' is defined but never used.","'menu' is assigned a value but never used.","'setMenu' is assigned a value but never used.","'Badge' is defined but never used.","'MenuIcon' is defined but never used.","'SearchIcon' is defined but never used.","'MailIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'MoreIcon' is defined but never used.","'getuserdata' is defined but never used.","'Grid' is defined but never used.","React Hook useEffect has a missing dependency: 'props.Phone'. Either include it or remove the dependency array.",["722"],"'savechat' is defined but never used.","'messages' is assigned a value but never used.","Assignments to the 'GroupList' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'Personal' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useCallback has a missing dependency: 'Auth.Phone'. Either include it or remove the dependency array.",["723"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["724"],"'Button' is defined but never used.","'Album' is defined but never used.","'Story' is defined but never used.","'AddSchedule' is defined but never used.","'withStyles' is defined but never used.","'setProcessing' is assigned a value but never used.","'Link' is assigned a value but never used.","'setLink' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.Events' and 'props.SelectedEvent'. Either include them or remove the dependency array. If 'SetCurrentEventDetails' needs the current value of 'props.Events', you can also switch to useReducer instead of useState and read 'props.Events' in the reducer.",["725"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["726"],"'gapi' is assigned a value but never used.","'CLIENT_ID' is assigned a value but never used.","'API_KEY' is assigned a value but never used.","'clientSecret' is assigned a value but never used.","'DISCOVERY_DOCS' is assigned a value but never used.","'SCOPES' is assigned a value but never used.","'currentEvent' is assigned a value but never used.","'EventsCopy' is assigned a value but never used.","'useCallback' is defined but never used.","'useDropzone' is defined but never used.","'Gallery' is defined but never used.","'isError' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'DELETEALBUM' is defined but never used.","'cancel' is assigned a value but never used.","Assignments to the 'bkpalbum' variable from inside React Hook useCallback will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useCallback.","Assignments to the 'filetype' variable from inside React Hook useCallback will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useCallback.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'bkpalbum', 'filetype'.","unsafeRefs","'DELETESTORY' is defined but never used.","'dataurl' is assigned a value but never used.","'formatRelative' is defined but never used.","React Hook useEffect has a missing dependency: 'props.CurrentEventDetails.location'. Either include it or remove the dependency array.",["727"],"React Hook useCallback has a missing dependency: 'props.CurrentEventDetails'. Either include it or remove the dependency array.",["728"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"729","fix":"730"},{"desc":"731","fix":"732"},{"desc":"733","fix":"734"},{"desc":"733","fix":"735"},{"desc":"736","fix":"737"},{"desc":"738","fix":"739"},{"desc":"740","fix":"741"},{"desc":"742","fix":"743"},{"desc":"744","fix":"745"},{"desc":"738","fix":"746"},{"desc":"747","fix":"748"},{"desc":"749","fix":"750"},{"desc":"751","fix":"752"},"Update the dependencies array to be: [dispatch, props.location.pathname]",{"range":"753","text":"754"},"Update the dependencies array to be: [addAnEvent]",{"range":"755","text":"756"},"Update the dependencies array to be: [Auth.Phone, Eventdata, evno]",{"range":"757","text":"758"},{"range":"759","text":"758"},"Update the dependencies array to be: [Auth.isVerified, Auth.OTPStatus, dispatch, Phone]",{"range":"760","text":"761"},"Update the dependencies array to be: [props.Events, props.SelectedEvent]",{"range":"762","text":"763"},"Update the dependencies array to be: [props.Phone]",{"range":"764","text":"765"},"Update the dependencies array to be: [Auth.Phone]",{"range":"766","text":"767"},"Update the dependencies array to be: [props]",{"range":"768","text":"769"},{"range":"770","text":"763"},"Update the dependencies array to be: [props, props.SelectedEvent]",{"range":"771","text":"772"},"Update the dependencies array to be: [props.CurrentEventDetails.location]",{"range":"773","text":"774"},"Update the dependencies array to be: [props.CurrentEventDetails]",{"range":"775","text":"776"},[1010,1012],"[dispatch, props.location.pathname]",[7349,7351],"[addAnEvent]",[3195,3201],"[Auth.Phone, Eventdata, evno]",[1785,1791],[1418,1451],"[Auth.isVerified, Auth.OTPStatus, dispatch, Phone]",[1918,2038],"[props.Events, props.SelectedEvent]",[971,973],"[props.Phone]",[1451,1453],"[Auth.Phone]",[997,999],"[props]",[1923,1925],[2122,2143],"[props, props.SelectedEvent]",[4241,4243],"[props.CurrentEventDetails.location]",[5443,5445],"[props.CurrentEventDetails]"]